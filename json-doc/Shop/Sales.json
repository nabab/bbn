{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Shop\\Sales",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/Shop\/Sales.php",
    "startLine": 16,
    "endLine": 410,
    "numMethods": 35,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 1,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "errors": [],
            "table": "bbn_shop_transactions",
            "tables": {
                "transactions": "bbn_shop_transactions"
            },
            "arch": {
                "transactions": {
                    "id": "id",
                    "id_cart": "id_cart",
                    "id_client": "id_client",
                    "id_shipping_address": "id_shipping_address",
                    "id_billing_address": "id_billing_address",
                    "number": "number",
                    "shipping_cost": "shipping_cost",
                    "total": "total",
                    "moment": "moment",
                    "payment_type": "payment_type",
                    "reference": "reference",
                    "url": "url",
                    "error_message": "error_message",
                    "error_code": "error_code",
                    "status": "status",
                    "test": "test"
                }
            }
        },
        "cart": null,
        "client": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "_is_init_class_cfg": false,
        "fields": null,
        "class_cfg": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Shop",
    "shortName": "Sales",
    "contentConstructor": {
        "file": "bbn\\Shop\\Sales",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, array $cfg = NULL)\n  {\n    \/\/ The database connection\n    $this->db = $db;\n    $this->cart = new Cart($this->db);\n    $this->client = new Client($this->db);\n    \/\/ Setting up the class configuration\n    $this->_init_class_cfg($cfg);\n  }",
            "startLine": 59,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "changeStatus": {
            "name": "changeStatus",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction, string $status, $errorMessage = NULL, $errorCode = NULL)\n  {\n    $data = [\n      $this->fields['status'] => $status\n    ];\n    if (!empty($errorMessage)) {\n      $data[$this->fields['error_message']] = $errorMessage;\n    }\n    if (!empty($errorCode)) {\n      $data[$this->fields['error_code']] = $errorCode;\n    }\n    return (bool)$this->update($idTransaction, $data);\n  }",
            "startLine": 69,
            "endLine": 81,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "status",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "errorMessage",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "errorCode",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setStatusPaid": {
            "name": "setStatusPaid",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction, $errorMessage = NULL, $errorCode = NULL)\n  {\n    return $this->changeStatus($idTransaction, 'paid', $errorMessage,  $errorCode);\n  }",
            "startLine": 83,
            "endLine": 86,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "errorMessage",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "errorCode",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setStatusFailed": {
            "name": "setStatusFailed",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction, $errorMessage = NULL, $errorCode = NULL, bool $fixProductsQuantity = true)\n  {\n    if ($fixProductsQuantity\n      && ($idCart = $this->getIdCart($idTransaction))\n      && ($products = $this->cart->getProducts($idCart))\n    ) {\n      $prodCls = new Product($this->db);\n      $cartClsCfg = $this->cart->getClassCfg();\n      $prodFields = $cartClsCfg['arch']['cart_products'];\n      foreach ($products as $product) {\n        $currentStock = $prodCls->getStock($product[$prodFields['id_product']]);\n        $prodCls->setStock($product[$prodFields['id_product']], $currentStock + $product[$prodFields['quantity']]);\n      }\n    }\n    return $this->changeStatus($idTransaction, 'failed', $errorMessage, $errorCode);\n  }",
            "startLine": 88,
            "endLine": 103,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "errorMessage",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "errorCode",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "fixProductsQuantity",
                    "position": 3,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "getByProduct": {
            "name": "getByProduct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_product, string $period = NULL, string $value = NULL)\n  {\n    $cfg = $this->getClassCfg();\n    $cartCfg = $this->cart->getClassCfg();\n    $req = [\n      'tables' => [$cfg['tables']['transactions']],\n      'fields' => [\n        'total' => 'IFNULL(SUM(' . $this->db->cfn($cartCfg['arch']['cart_products']['amount'], $cartCfg['tables']['cart_products'], true) . '), 0)',\n        'num'   => 'IFNULL(SUM(' . $this->db->cfn($cartCfg['arch']['cart_products']['quantity'], $cartCfg['tables']['cart_products'], true) . '), 0)'\n      ],\n      'join'  => [\n        [\n          'table' => $cartCfg['tables']['cart'],\n          'on' => [\n            [\n              'field' => $this->db->cfn($cartCfg['arch']['cart']['id'], $cartCfg['tables']['cart']),\n              'exp' => $this->db->cfn($cfg['arch']['transactions']['id_cart'], $cfg['tables']['transactions'], true)\n            ]\n          ]\n        ], [\n          'table' => $cartCfg['tables']['cart_products'],\n          'on' => [\n            [\n              'field' => $this->db->cfn($cartCfg['arch']['cart_products']['id_cart'], $cartCfg['tables']['cart_products']),\n              'exp' => $this->db->cfn($cartCfg['arch']['cart']['id'], $cartCfg['tables']['cart'], true)\n            ]\n          ]\n        ]\n      ],\n      'where' => [\n        $this->db->cfn($cfg['arch']['transactions']['status'], $cfg['tables']['transactions']) => 1,\n        $this->db->cfn($cartCfg['arch']['cart_products']['id_product'], $cartCfg['tables']['cart_products']) => $id_product\n      ]\n    ];\n\n    if ($period) {\n      $hasValue = Str::isDateSql($value);\n      if ($hasValue) {\n        $start = substr($value, 0, 10) . ' 00:00:00';\n      }\n      else {\n        $end = date('Y-m-d H:i:s', time() + 1);\n      }\n\n      switch ($period) {\n        case 'd':\n          if (!isset($start)) {\n            $start = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', strtotime($end)), date('j', strtotime($end)), date('Y', strtotime($end))));\n          }\n          else {\n            $end = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', strtotime($start)), date('j', strtotime($start)) + 1, date('Y', strtotime($start))));\n          }\n          break;\n        case 'w':\n          if (!isset($start)) {\n            $monday = strtotime('Monday this week');\n            $start = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', $monday), date('j', $monday), date('Y', strtotime($end))));\n          }\n          else {\n            $end = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', strtotime($start)), date('j', strtotime($start)) + 7, date('Y', strtotime($start))));\n          }\n          break;\n        case 'm':\n          if (!isset($start)) {\n            $start = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', strtotime($end)), 1, date('Y', strtotime($end))));\n          }\n          else {\n            $end = date('Y-m-d H:i:s', mktime(0, 0, 0, date('n', strtotime($start)) + 1, 1, date('Y', strtotime($start))));\n          }\n          break;\n        case 'y':\n          if (!isset($start)) {\n            $start = date('Y-m-d H:i:s', mktime(0, 0, 0, 1, 1, date('Y', strtotime($end))));\n          }\n          else {\n            $end = date('Y-m-d H:i:s', mktime(0, 0, 0, 1, 1, date('Y', strtotime($start)) + 1));\n          }\n          break;\n      }\n      $req['where'][] = [\n        $this->db->cfn($cfg['arch']['transactions']['moment'], $cfg['tables']['transactions']),\n        '>=',\n        $start\n      ];\n      $req['where'][] = [\n        $this->db->cfn($cfg['arch']['transactions']['moment'], $cfg['tables']['transactions']),\n        '<',\n        $end\n      ];\n\n    }\n\n    return $this->db->rselect($req);\n  }",
            "startLine": 105,
            "endLine": 198,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_product",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "period",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "value",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Adds a trancation",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $transaction)\n  {\n    if (empty($transaction[$this->fields['id_cart']])) {\n      throw new \\Exception(X::_('No id_cart found on the given transaction: %s', \\json_encode($transaction)));\n    }\n    if (empty($transaction[$this->fields['id_client']])) {\n      throw new \\Exception(X::_('No id_client found on the given transaction: %s', \\json_encode($transaction)));\n    }\n    if (empty($transaction[$this->fields['id_shipping_address']])) {\n      throw new \\Exception(X::_('No id_shipping_address found on the given transaction: %s', \\json_encode($transaction)));\n    }\n    if (empty($transaction[$this->fields['id_billing_address']])) {\n      throw new \\Exception(X::_('No id_billing_address found on the given transaction: %s', \\json_encode($transaction)));\n    }\n    if (empty($transaction[$this->fields['payment_type']])) {\n      throw new \\Exception(X::_('No payment_type found on the given transaction: %s', \\json_encode($transaction)));\n    }\n    if (empty($transaction[$this->fields['moment']])) {\n      $transaction[$this->fields['moment']] = date('Y-m-d H:i:s');\n    }\n    if (empty($transaction[$this->fields['total']])) {\n      $transaction[$this->fields['total']] = 0;\n    }\n    if (empty($transaction[$this->fields['shipping_cost']])) {\n      $transaction[$this->fields['shipping_cost']] = 0;\n    }\n    $transaction[$this->fields['number']] = date('Y') . '-' .rand(1000000000, 9999999999);\n    while ($this->select([$this->fields['number'] => $transaction[$this->fields['number']]])) {\n      $transaction[$this->fields['number']] = date('Y') . '-' .rand(1000000000, 9999999999);\n    }\n    $transaction[$this->fields['test']] = !empty($transaction[$this->fields['test']]) ? 1 : 0;\n    $this->client->setLastUsedAddress($transaction[$this->fields['id_shipping_address']], $transaction[$this->fields['moment']]);\n    $this->client->setLastUsedAddress($transaction[$this->fields['id_billing_address']], $transaction[$this->fields['moment']]);\n    return $this->insert($transaction);\n  }",
            "startLine": 205,
            "endLine": 239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "transaction",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "Gets a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    return $this->rselect([$this->fields['id'] => $idTransaction]);\n  }",
            "startLine": 246,
            "endLine": 249,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getIdClient": {
            "name": "getIdClient",
            "summary": "Gets the client ID of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    return $this->selectOne($this->fields['id_client'], [$this->fields['id'] => $idTransaction]);\n  }",
            "startLine": 256,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getIdCart": {
            "name": "getIdCart",
            "summary": "Gets the cart ID of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    return $this->selectOne($this->fields['id_cart'], [$this->fields['id'] => $idTransaction]);\n  }",
            "startLine": 266,
            "endLine": 269,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getIdShippingAddress": {
            "name": "getIdShippingAddress",
            "summary": "Gets the shipping address ID of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    return $this->selectOne($this->fields['id_shipping_address'], [$this->fields['id'] => $idTransaction]);\n  }",
            "startLine": 276,
            "endLine": 279,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getIdBillingAddress": {
            "name": "getIdBillingAddress",
            "summary": "Gets the billing address ID of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    return $this->selectOne($this->fields['id_billing_address'], [$this->fields['id'] => $idTransaction]);\n  }",
            "startLine": 286,
            "endLine": 289,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getShippingAddress": {
            "name": "getShippingAddress",
            "summary": "Gets the shipping address of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    if (!($idAddress = $this->getIdShippingAddress($idTransaction))) {\n      throw new \\Exception(X::_('No shipping address found on transaction %s', $idTransaction));\n    }\n    return $this->client->getAddress($idAddress);\n  }",
            "startLine": 296,
            "endLine": 302,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "getBillingAddress": {
            "name": "getBillingAddress",
            "summary": "Gets the billing address of a transaction",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction)\n  {\n    if (!($idAddress = $this->getIdBillingAddress($idTransaction))) {\n      throw new \\Exception(X::_('No billing address found on transaction %s', $idTransaction));\n    }\n    return $this->client->getAddress($idAddress);\n  }",
            "startLine": 309,
            "endLine": 315,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                }
            ]
        },
        "sendConfirmEmailToClient": {
            "name": "sendConfirmEmailToClient",
            "summary": "Sends the order confirm email to the client",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction, bbn\\Mail $mailCls = NULL)\n  {\n    if (($opt = Option::getInstance())\n      && ($d = $this->getMailData($idTransaction))\n      && ($email = $this->client->getEmail($d[$this->fields['id_client']]))\n    ) {\n      if (empty($mailCls)) {\n        $mailCls = new Mail();\n      }\n      $masksCls = new Masks($this->db);\n      if ($template = $masksCls->getDefault($opt->fromCode('client_order', 'masks', 'appui'))) {\n        $title = Tpl::render($template['title'], $d);\n        $content = Tpl::render($template['content'], $d);\n        return (bool)$mailCls->send([\n          'to' => $email,\n          'title' => $title,\n          'text' => $content\n        ]);\n      }\n    }\n    return false;\n  }",
            "startLine": 323,
            "endLine": 344,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction"
                },
                {
                    "name": "mailCls",
                    "position": 1,
                    "type": "bbn\\Mail",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "ls"
                }
            ]
        },
        "sendNewOrderEmail": {
            "name": "sendNewOrderEmail",
            "summary": "Sends an email to notify a new order",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTransaction, string $email = '', bbn\\Mail $mailCls = NULL)\n  {\n    if (($opt = Option::getInstance())\n      && ($d = $this->getMailData($idTransaction))\n    ) {\n      if (empty($mailCls)) {\n        $mailCls = new Mail();\n      }\n      $masksCls = new Masks($this->db);\n      if (!Str::isEmail($email)\n        && defined('BBN_ADMIN_EMAIL')\n      ) {\n        $email = BBN_ADMIN_EMAIL;\n      }\n      if (!empty($email)\n        && ($template = $masksCls->getDefault($opt->fromCode('order', 'masks', 'appui')))\n      ) {\n        $title = Tpl::render($template['title'], $d);\n        $content = Tpl::render($template['content'], $d);\n        return (bool)$mailCls->send([\n          'to' => $email,\n          'title' => $title,\n          'text' => $content\n        ]);\n      }\n    }\n    return false;\n  }",
            "startLine": 353,
            "endLine": 380,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTransaction",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ransaction The transaction ID"
                },
                {
                    "name": "email",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "The email address to send to"
                },
                {
                    "name": "mailCls",
                    "position": 2,
                    "type": "bbn\\Mail",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "ls"
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 64,
            "endLine": 71,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter)\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    $f = $this->class_cfg['arch'][$this->class_table_index];\n    if (is_string($filter)) {\n      $cfg = [$f['id'] => $filter];\n    }\n    elseif (is_array($filter)) {\n      $cfg = $filter;\n    }\n\n    if (!empty($cfg) && $arr = $this->db->count(\n      $this->class_table,\n      $cfg\n    )) {\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 37,
            "endLine": 59,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getClassCfg": {
            "name": "getClassCfg",
            "summary": "Returns the class configuration.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 67,
            "endLine": 70,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getFields": {
            "name": "getFields",
            "summary": "Returns the fields of the main table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 78,
            "endLine": 81,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "insert": {
            "name": "insert",
            "summary": "Inserts a new row in the table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $data)\n  {\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      if ($this->db->insert($ccfg['table'], $data)) {\n        return $this->db->lastId();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 91,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes a single row from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($data = $this->exists($id)) {\n      $ccfg = $this->getClassCfg();\n      $f = $ccfg['arch'][$this->class_table_index];\n      return (bool)$this->db->delete($ccfg['table'], [$f['id'] => $id]);\n    }\n\n    return false;\n  }",
            "startLine": 111,
            "endLine": 120,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Updates a single row in the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $data, bool $addCfg = false)\n  {\n    if (!$this->exists($id)) {\n      throw new Exception(X::_(\"Impossible to find the given row\"));\n    }\n\n    if ($addCfg) {\n      $data = array_merge($this->rselect($id), $data);\n    }\n\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      $f = $ccfg['arch'][$this->class_table_index];\n      return (bool)$this->db->update($ccfg['table'], $data, [$f['id'] => $id]);\n    }\n\n    return false;\n  }",
            "startLine": 131,
            "endLine": 148,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "addCfg",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "selectOne": {
            "name": "selectOne",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $field, $filter, array $order = [])\n  {\n    if ($res = $this->dbConfigSingleSelection($filter, $order, false, [$field])) {\n      return $res[$field] ?? null;\n    }\n\n    return null;\n  }",
            "startLine": 159,
            "endLine": 166,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "field",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "filter",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "select": {
            "name": "select",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, true);\n  }",
            "startLine": 177,
            "endLine": 180,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "stdClass"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "rselect": {
            "name": "rselect",
            "summary": "Retrieves a row as an array from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, false);\n  }",
            "startLine": 191,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "count": {
            "name": "count",
            "summary": "Returns the number of rows from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter = [])\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    return $this->db->count($this->class_table, $filter);\n  }",
            "startLine": 204,
            "endLine": 211,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "selectAll": {
            "name": "selectAll",
            "summary": "Returns an array of rows as objects from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, true);\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "rselectAll": {
            "name": "rselectAll",
            "summary": "Returns an array of rows as arrays from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Shop\\Sales",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, false);\n  }",
            "startLine": 240,
            "endLine": 243,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "errors": [],
            "table": "bbn_shop_transactions",
            "tables": {
                "transactions": "bbn_shop_transactions"
            },
            "arch": {
                "transactions": {
                    "id": "id",
                    "id_cart": "id_cart",
                    "id_client": "id_client",
                    "id_shipping_address": "id_shipping_address",
                    "id_billing_address": "id_billing_address",
                    "number": "number",
                    "shipping_cost": "shipping_cost",
                    "total": "total",
                    "moment": "moment",
                    "payment_type": "payment_type",
                    "reference": "reference",
                    "url": "url",
                    "error_message": "error_message",
                    "error_code": "error_code",
                    "status": "status",
                    "test": "test"
                }
            }
        }
    },
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}