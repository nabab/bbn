{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Tpl",
    "namespace": true,
    "realName": "Tpl",
    "realNamespace": "bbn",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Tpl.php",
    "startLine": 8,
    "endLine": 59,
    "numMethods": 2,
    "numProperties": 2,
    "numConstants": 0,
    "numStaticProperties": 2,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "engine": null,
        "tmp": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn",
    "shortName": "Tpl",
    "contentConstructor": null,
    "methods": {
        "renderer": {
            "name": "renderer",
            "summary": "Generates a Mustache template function ready to receive parameters and returns it.",
            "description": "A temporary file is created if it does not already exists.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "A temporary file is created if it does not already exists."
                }
            ],
            "class": "bbn\\Tpl",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Tpl.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  static public function renderer(string $st): callable\n  {\n    if (\\defined('BBN_DATA_PATH')) {\n      $dir = Dir::createPath(Mvc::getTmpPath() . '\/bbn-templates');\n    }\n    else {\n      $dir = Dir::createPath(sys_get_temp_dir().'\/bbn-templates');\n    }\n\n    if (!$dir) {\n      throw new Exception(X::_(\"Impossible to create the template directory\"));\n    }\n\n    $md5 = md5($st);\n    $file = $dir.'\/tpl.'.$md5.'.php';\n    if (!file_exists($file)) {\n      $tpl = LightnCandy::compile(\n        $st,\n        [\n          'flags' => LightnCandy::FLAG_MUSTACHELOOKUP |\n            LightnCandy::FLAG_PARENT |\n            LightnCandy::FLAG_HANDLEBARSJS |\n            LightnCandy::FLAG_ERROR_LOG\n        ]\n      );\n      file_put_contents($file, '<?php '.$tpl.'?>');\n    }\n\n    return include($file);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 20,
            "endLine": 49,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "renderer",
            "returns": [
                "callable"
            ],
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The template's content"
                }
            ],
            "doc": {
                "description": "Generates a Mustache template function ready to receive parameters and returns it.\n\nA temporary file is created if it does not already exists.\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$st",
                        "description": "The template's content"
                    }
                ],
                "return": "A function that can be called with the data as argument"
            },
            "comments": "  \/**\n   * Generates a Mustache template function ready to receive parameters and returns it.\n   * \n   * A temporary file is created if it does not already exists.\n   * \n   * @param string $st The template's content\n   * @return callable A function that can be called with the data as argument\n   *\/"
        },
        "render": {
            "name": "render",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Tpl",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Tpl.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  static public function render($st, $data): string\n  {\n    if ( is_callable($tpl = self::renderer($st)) ){\n      return $tpl($data);\n    }\n    return '';\n  }",
            "parent": false,
            "trait": false,
            "startLine": 52,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "render",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "engine": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Tpl"
            },
            "declaring_trait": "bbn\\Tpl",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "tmp": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Tpl"
            },
            "declaring_trait": "bbn\\Tpl",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        }
    },
    "staticProperties": {
        "engine": null,
        "tmp": null
    },
    "constants": null,
    "uses": {
        "Exception": "Exception",
        "LightnCandy\\LightnCandy": "LightnCandy",
        "bbn\\File\\Dir": "Dir"
    },
    "dummyComments": [],
    "summary": "",
    "description": "",
    "description_parts": []
}