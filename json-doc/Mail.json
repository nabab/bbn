{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Mail",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
    "startLine": 45,
    "endLine": 422,
    "contentConstructor": {
        "file": "bbn\\Mail",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($cfg = [])\n  {\n    if ( !\\defined('BBN_ADMIN_EMAIL') || !\\defined('BBN_IS_DEV') ){\n      die(\"You must provide the constants BBN_ADMIN_EMAIL and BBN_IS_DEV to use the mail class...\");\n    }\n    if ( !isset($cfg['from']) && isset($cfg['user']) ){\n      $cfg['from'] = $cfg['user'];\n    }\n    if (!isset($cfg['from'])) {\n      $cfg['from'] = BBN_ADMIN_EMAIL;\n    }\n    if (!PHPMailer::validateAddress($cfg['from'])) {\n      die(X::_(\"A \\\"From\\\" eMail address must be provided\"));\n    }\n    $has_host = !empty($cfg['host']) && Str::isDomain($cfg['host']);\n    $this->mailer = new PHPMailer(true);\n    try {\n      $this->mailer->CharSet = isset($cfg['charset']) ? $cfg['charset'] : \"UTF-8\";\n      if ( isset($cfg['user'], $cfg['pass']) ){\n        \/\/ SMTP connection will not close after each email sent, reduces SMTP overhead\n        $this->mailer->isSMTP();\n        if ( !empty($cfg['ssl']) ){\n          if ( \\is_array($cfg['ssl']) ){\n            $this->mailer->SMTPOptions = ['ssl' => $cfg['ssl']];\n          }\n          else{\n            $this->mailer->SMTPOptions = [\n              'verify_peer' => false,\n              'verify_peer_name' => false,\n              'verify_host' => false,\n              'allow_self_signed' => false\n            ];\n          }\n        }\n        else{\n          $this->mailer->SMTPSecure = 'tls';\n        }\n        $this->mailer->Host = $has_host ? $cfg['host'] : 'localhost';\n        $this->mailer->Port = isset($cfg['port']) ? $cfg['port'] : 587;\n        $this->mailer->SMTPKeepAlive = true;\n        $this->mailer->SMTPDebug = empty($cfg['debug']) ? false : 3;\n        $this->mailer->Debugoutput = 'error_log';\n        $this->mailer->SMTPAuth = true;\n        $this->mailer->Username = $cfg['user'];\n        $this->mailer->Password = $cfg['pass'];\n        if ( !empty($cfg['imap']) ){\n          $this->setImap($cfg);\n        }\n      }\n      $this->setFrom($cfg['from'], isset($cfg['name']) ? $cfg['name'] : 0);\n      $this->setTemplate(isset($cfg['template']) ? $cfg['template'] : self::getDefaultTemplate());\n    }\n    catch (\\Exception $e) {\n      $this->log($this->mailer->ErrorInfo);\n    }\n  }",
            "startLine": 183,
            "endLine": 238,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "setImap": {
            "name": "setImap",
            "summary": "Sets the IMAP configuration.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    if (!isset($cfg['imap_user'], $cfg['imap_pass']) && !isset($cfg['user'], $cfg['pass'])) {\n      die(\"You need to provide user and password for IMAP connection\");\n    }\n    $imap_host = isset($cfg['imap_host']) ? $cfg['imap_host'] : $cfg['host'];\n    $this->imap_user = isset($cfg['imap_user']) ? $cfg['imap_user'] : $cfg['user'];\n    $this->imap_pass = isset($cfg['imap_pass']) ? $cfg['imap_pass'] : $cfg['pass'];\n    $this->imap_sent = isset($cfg['imap_sent']) ? $cfg['imap_sent'] : 'Sent';\n    if (isset($cfg['imap_port'])) {\n      $imap_port = $cfg['imap_port'];\n    }\n    if (!empty($cfg['imap_ssl'])) {\n      if (!isset($cfg['imap_port'])) {\n        $imap_port = 993;\n      }\n      $this->imap_string = \"{\".$imap_host.\":\".$imap_port.\"\/ssl\";\n    }\n    else {\n      if (!isset($cfg['imap_port'])) {\n        $imap_port = 143;\n      }\n      $this->imap_string = \"{\".$imap_host.\":\".$imap_port.\"\/tls\";\n    }\n    if (empty($cfg['valid'])) {\n      $this->imap_string .= \"\/novalidate-cert\";\n    }\n    $this->imap_string .= \"}\";\n    return $this;\n  }",
            "startLine": 246,
            "endLine": 275,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "unsetImap": {
            "name": "unsetImap",
            "summary": "Unset the IMAP configuration",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    unset($this->imap_string, $this->imap_user, $this->imap_pass);\n    return $this;\n  }",
            "startLine": 282,
            "endLine": 286,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": []
        },
        "setFrom": {
            "name": "setFrom",
            "summary": "Set the From header together with the replyTo.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($email, $name = NULL)\n  {\n    if (!PHPMailer::validateAddress($email)) {\n      die(\"The From eMail address is not valid\");\n    }\n    if (!$name) {\n      $name = $email;\n    }\n    $this->mailer->setFrom($email, $name);\n    $this->mailer->addReplyTo($email, $name);\n    return $this;\n  }",
            "startLine": 295,
            "endLine": 306,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setTemplate": {
            "name": "setTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($file)\n  {\n    if (is_file($file)) {\n      $this->template = file_get_contents($file);\n      $this->path = dirname($file);\n    }\n    else {\n      $this->template = $file;\n      $this->path = BBN_DATA_PATH;\n    }\n    return $this;\n  }",
            "startLine": 308,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 321,
            "endLine": 323,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 86,
                "endLine": 89,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "send": {
            "name": "send",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mail",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($cfg)\n  {\n    $r = false;\n    if (!defined('BBN_IS_PROD') || !BBN_IS_PROD) {\n      $cfg['to'] = BBN_ADMIN_EMAIL;\n      $cfg['cc'] = '';\n      $cfg['bcc'] = '';\n      $this->mailer->AddAddress(BBN_ADMIN_EMAIL);\n      $valid = 1;\n    }\n    else {\n      foreach (self::$_dest_fields as $dest_field) {\n        if (isset($cfg[$dest_field])) {\n          if (!\\is_array($cfg[$dest_field])) {\n            $cfg[$dest_field] = array_map(\n              function ($a) {\n                return trim($a);\n              },\n              explode(\";\", $cfg[$dest_field])\n            );\n          }\n          foreach ($cfg[$dest_field] as $dest) {\n            if (PHPMailer::validateAddress($dest)) {\n              switch ($dest_field) {\n                case \"to\":\n                  $this->mailer->AddAddress($dest);\n                  break;\n                case \"cc\":\n                  $this->mailer->AddCC($dest);\n                  break;\n                case \"bcc\":\n                  $this->mailer->AddBCC($dest);\n                  break;\n              }\n              $valid = 1;\n            }\n            else {\n              X::log(\"Adresse email invalide: \".$dest);\n              $valid = false;\n            }\n          }\n        }\n      }\n    }\n    if ($valid) {\n      if (!empty($cfg['from'])) {\n        $this->setFrom($cfg['from']);\n      }\n      $ar = [];\n      $this->mailer->Subject = $ar['title'] = $cfg['subject'] ?? ($cfg['title'] ?? '');\n      if (!isset($cfg['text'])) {\n        $cfg['text'] = '';\n      }\n      if (isset($cfg['attachments'])) {\n        if (\\is_string($cfg['attachments'])) {\n          $cfg['attachments'] = [$cfg['attachments']];\n        }\n        foreach ($cfg['attachments'] as $name => $att) {\n          if (is_file($att)) {\n            \/\/ 2nd parameter is the file's name in the mail\n            $this->mailer->AddAttachment($att, is_int($name) ? '' : $name);\n          }\n        }\n      }\n      if (!isset($renderer)) {\n        $renderer = Tpl::renderer($this->template);\n      }\n      $ar['url'] = \\defined('BBN_URL') ? BBN_URL : '';\n      $ar['text'] = $cfg['text'];\n      $ar['text'] = $renderer($ar);\n      self::setContent($ar['text']);\n      $this->mailer->msgHTML(self::$_content, $this->path, true);\n      try {\n        $r = $this->mailer->send();\n      }\n      catch (\\Exception $e) {\n        $this->log($e->getMessage());\n      }\n      if ($r && !empty($this->imap_string)) {\n        $mail_string = $this->mailer->getSentMIMEMessage();\n        if (!is_resource($this->imap)) {\n          $this->imap = \\imap_open($this->imap_string, $this->imap_user, $this->imap_pass);\n        }\n        if (!is_resource($this->imap) || !\\imap_append($this->imap, $this->imap_string.$this->imap_sent, $mail_string, \"\\\\Seen\")) {\n          $this->log(\\imap_errors());\n        }\n      }\n      if (!$r) {\n        $err = \\imap_last_error();\n        $this->log($err);\n        X::log($err);\n      }\n    }\n    $this->mailer->ClearAllRecipients();\n    $this->mailer->ClearAttachments();\n    return $r;\n  }",
            "startLine": 325,
            "endLine": 421,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 51,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 51,
                "endLine": 58,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 65,
            "endLine": 72,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 65,
                "endLine": 72,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 92,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 92,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 98,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 98,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 115,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 115,
                "endLine": 126,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 132,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 132,
                "endLine": 135,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 142,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 142,
                "endLine": 145,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "mailer": {
            "visibility": "public",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document"
                    },
                    {
                        "tag": "var",
                        "type": "PHPMailer"
                    }
                ]
            }
        }
    },
    "staticProperties": {
        "_dest_fields": [
            "to",
            "cc",
            "bcc"
        ],
        "_default_template": "<!DOCTYPE html>\n<html>\n<head>\n<title>{{title}}<\/title>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n<\/head>\n<body>\n<div>{{{text}}}<\/div>\n<\/body>\n<\/html>",
        "_template_checked": false,
        "_content": "",
        "_hash_content": null
    },
    "constants": null,
    "numMethods": 14,
    "numProperties": 1,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "_dest_fields": [
            "to",
            "cc",
            "bcc"
        ],
        "_default_template": "<!DOCTYPE html>\n<html>\n<head>\n<title>{{title}}<\/title>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n<\/head>\n<body>\n<div>{{{text}}}<\/div>\n<\/body>\n<\/html>",
        "_template_checked": false,
        "_content": "",
        "_hash_content": null,
        "mailer": null,
        "template": null,
        "path": null,
        "imap_user": null,
        "imap_pass": null,
        "imap_sent": null,
        "imap_string": null,
        "imap": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn",
    "shortName": "Mail",
    "summary": ""
}