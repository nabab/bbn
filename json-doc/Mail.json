{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Mail",
    "namespace": true,
    "realName": "Mail",
    "realNamespace": "bbn",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Mail.php",
    "startLine": 47,
    "endLine": 528,
    "numMethods": 18,
    "numProperties": 19,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "_dest_fields": [
            "to",
            "cc",
            "bcc"
        ],
        "_default_template": "<!DOCTYPE html>\n<html>\n<head>\n<title>{{title}}<\/title>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n<\/head>\n<body>\n<div>{{{text}}}<\/div>\n<\/body>\n<\/html>",
        "_template_checked": false,
        "_content": "",
        "_hash_content": null,
        "mailer": null,
        "template": null,
        "path": null,
        "imap_user": null,
        "imap_pass": null,
        "imap_sent": null,
        "imap_string": null,
        "imap": null,
        "errors": [],
        "error": false,
        "errorCode": false,
        "errorCodes": [],
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn",
    "shortName": "Mail",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "setContent": {
            "name": "setContent",
            "summary": "Sets the static variable content and hash_content with the given string with CSS transformed in inline style.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": true,
            "visibility": "private",
            "final": false,
            "code": "  private static function setContent(string $content){\n    $md5 = md5($content);\n    if ( $md5 !== self::$_hash_content ){\n      self::$_hash_content = $md5;\n      \/\/$inliner = new \\TijsVerkoyen\\CssToInlineStyles\\CssToInlineStyles();\n      \/\/self::$_content = $inliner->convert($content);\n      self::$_content = $content;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 156,
            "endLine": 164,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setContent",
            "returns": [],
            "arguments": [
                {
                    "name": "content",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets the static variable content and hash_content with the given string with CSS transformed in inline style.\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$content"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the static variable content and hash_content with the given string with CSS transformed in inline style.\n   * \n   * @param string $content\n   * @return void\n   *\/"
        },
        "getDefaultTemplate": {
            "name": "getDefaultTemplate",
            "summary": "Gets once the default template in default prop or filesystem, sets props, and returns it.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": true,
            "visibility": "private",
            "final": false,
            "code": "  private static function getDefaultTemplate(){\n    if (!self::$_template_checked) {\n      self::$_template_checked = true;\n      if (($dir = \\bbn\\Mvc::getContentPath()) && file_exists($dir.'mails\/template.html')) {\n        self::$_default_template = file_get_contents($dir.'mails\/template.html');\n      }\n    }\n    return self::$_default_template;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 171,
            "endLine": 179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getDefaultTemplate",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Gets once the default template in default prop or filesystem, sets props, and returns it.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Gets once the default template in default prop or filesystem, sets props, and returns it.\n   *\n   * @return string\n   *\/"
        },
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct($cfg = [])\n  {\n    if ( !\\defined('BBN_ADMIN_EMAIL') || !\\defined('BBN_IS_DEV') ){\n      die(\"You must provide the constants BBN_ADMIN_EMAIL and BBN_IS_DEV to use the mail class...\");\n    }\n\n    if ( !isset($cfg['from']) && isset($cfg['user']) ){\n      $cfg['from'] = $cfg['user'];\n    }\n\n    if (!isset($cfg['from'])) {\n      $cfg['from'] = BBN_ADMIN_EMAIL;\n    }\n\n    if (!PHPMailer::validateAddress($cfg['from'])) {\n      X::logError(0, \"A \\\"From\\\" eMail address must be provided\", __FILE__, __LINE__);\n      $this->error(\"A \\\"From\\\" eMail address must be provided\");\n    }\n\n    $has_host = !empty($cfg['host']) && Str::isDomain($cfg['host']);\n    $this->mailer = new PHPMailer(true);\n\n    try {\n      $this->mailer->CharSet = $cfg['charset'] ?? 'UTF-8';\n      $this->mailer->Encoding = $cfg['encoding'] ?? \"quoted-printable\";\n      \/\/$this->mailer->AllowCharsetEncoding = false;\n      if ( isset($cfg['user'], $cfg['pass']) ){\n        \/\/ SMTP connection will not close after each email sent, reduces SMTP overhead\n        $this->mailer->isSMTP();\n        if ( !empty($cfg['ssl']) ){\n          if ( \\is_array($cfg['ssl']) ){\n            $this->mailer->SMTPOptions = ['ssl' => $cfg['ssl']];\n          }\n          else{\n            $this->mailer->SMTPOptions = [\n              'verify_peer' => false,\n              'verify_peer_name' => false,\n              'verify_host' => false,\n              'allow_self_signed' => false\n            ];\n          }\n        }\n        else{\n          $this->mailer->SMTPSecure = 'tls';\n        }\n\n        $this->mailer->Host = $has_host ? $cfg['host'] : 'localhost';\n        $this->mailer->Port = isset($cfg['port']) ? $cfg['port'] : 587;\n        $this->mailer->SMTPKeepAlive = true;\n        $this->mailer->SMTPDebug = empty($cfg['debug']) ? false : 3;\n        $this->mailer->Debugoutput = 'error_log';\n        $this->mailer->SMTPAuth = true;\n        $this->mailer->Username = $cfg['user'];\n        $this->mailer->Password = $cfg['pass'];\n        if ( !empty($cfg['imap']) ){\n          $this->setImap($cfg);\n        }\n      }\n\n      $this->setFrom($cfg['from'], isset($cfg['name']) ? $cfg['name'] : 0);\n      if ($cfg['reply-to'] ?? false) {\n        $this->setReplyTo($cfg['reply-to']);\n      }\n\n      $this->setTemplate(isset($cfg['template']) ? $cfg['template'] : self::getDefaultTemplate());\n    }\n    catch (\\Exception $e) {\n      $this->log($this->mailer->ErrorInfo);\n      $this->log($e->getMessage());\n      $this->mailer = false;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 186,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Constructor.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Constructor.\n   *\n   * @param array $cfg\n   *\/"
        },
        "__destruct": {
            "name": "__destruct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __destruct()\n  {\n    if ( $this->mailer ){\n      try {\n        $this->mailer->smtpClose();\n      }\n      catch(Exception $e) {\n        $this->log(\"Impossible to close the connection\");\n\n      }\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 260,
            "endLine": 271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "__destruct",
            "returns": [],
            "arguments": []
        },
        "setImap": {
            "name": "setImap",
            "summary": "Sets the IMAP configuration.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setImap(array $cfg): self\n  {\n    if (!isset($cfg['imap_user'], $cfg['imap_pass']) && !isset($cfg['user'], $cfg['pass'])) {\n      die(\"You need to provide user and password for IMAP connection\");\n    }\n    $imap_host = isset($cfg['imap_host']) ? $cfg['imap_host'] : $cfg['host'];\n    $this->imap_user = isset($cfg['imap_user']) ? $cfg['imap_user'] : $cfg['user'];\n    $this->imap_pass = isset($cfg['imap_pass']) ? $cfg['imap_pass'] : $cfg['pass'];\n    $this->imap_sent = isset($cfg['imap_sent']) ? $cfg['imap_sent'] : 'Sent';\n    if (isset($cfg['imap_port'])) {\n      $imap_port = $cfg['imap_port'];\n    }\n    if (!empty($cfg['imap_ssl'])) {\n      if (!isset($cfg['imap_port'])) {\n        $imap_port = 993;\n      }\n      $this->imap_string = \"{\".$imap_host.\":\".$imap_port.\"\/ssl\";\n    }\n    else {\n      if (!isset($cfg['imap_port'])) {\n        $imap_port = 143;\n      }\n      $this->imap_string = \"{\".$imap_host.\":\".$imap_port.\"\/tls\";\n    }\n    if (empty($cfg['valid'])) {\n      $this->imap_string .= \"\/novalidate-cert\";\n    }\n    $this->imap_string .= \"}\";\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 279,
            "endLine": 308,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setImap",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The configuration"
                }
            ],
            "doc": {
                "description": "Sets the IMAP configuration.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "The configuration"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the IMAP configuration.\n   *\n   * @param array $cfg The configuration\n   * @return self\n   *\/"
        },
        "unsetImap": {
            "name": "unsetImap",
            "summary": "Unset the IMAP configuration",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function unsetImap(): self\n  {\n    unset($this->imap_string, $this->imap_user, $this->imap_pass);\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 315,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "unsetImap",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Unset the IMAP configuration\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Unset the IMAP configuration\n   *\n   * @return self\n   *\/"
        },
        "setFrom": {
            "name": "setFrom",
            "summary": "Set the From header together with the replyTo.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setFrom(string $email, string|null $name = null): self\n  {\n    if (!PHPMailer::validateAddress($email)) {\n      die(\"The From eMail address is not valid\");\n    }\n    if (!$name) {\n      $name = $email;\n    }\n    $this->mailer->setFrom($email, $name);\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 328,
            "endLine": 338,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setFrom",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "email",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Set the From header together with the replyTo.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$email"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$name"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Set the From header together with the replyTo.\n   *\n   * @param string $email\n   * @param string $name\n   * @return self\n   *\/"
        },
        "setTemplate": {
            "name": "setTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setTemplate(string $file): self\n  {\n    if (is_file($file)) {\n      $this->template = file_get_contents($file);\n      $this->path = X::dirname($file);\n    }\n    else {\n      $this->template = $file;\n      $this->path = Mvc::getDataPath();\n    }\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 340,
            "endLine": 351,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setTemplate",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getError(){\n    return $this->mailer->ErrorInfo;\n  }",
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getError()\n  {\n    return $this->error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 98,
                "endLine": 101,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 353,
            "endLine": 355,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": []
        },
        "send": {
            "name": "send",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mail",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mail.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function send($cfg){\n    $valid = false;\n    $r = false;\n\n    if (!defined('BBN_IS_PROD') || !constant('BBN_IS_PROD')) {\n      $cfg['to'] = constant('BBN_ADMIN_EMAIL');\n      $cfg['cc'] = '';\n      $cfg['bcc'] = '';\n      $this->mailer->AddAddress(constant('BBN_ADMIN_EMAIL'));\n      $valid = 1;\n    }\n    else {\n      foreach (self::$_dest_fields as $dest_field) {\n        if (isset($cfg[$dest_field])) {\n          if (!\\is_array($cfg[$dest_field])) {\n            $cfg[$dest_field] = array_map(\n              function ($a) {\n                return trim($a);\n              },\n              explode(\";\", $cfg[$dest_field])\n            );\n          }\n\n          foreach ($cfg[$dest_field] as $dest) {\n            if (PHPMailer::validateAddress($dest)) {\n              switch ($dest_field) {\n                case \"to\":\n                  $this->mailer->AddAddress($dest);\n                  break;\n                case \"cc\":\n                  $this->mailer->AddCC($dest);\n                  break;\n                case \"bcc\":\n                  $this->mailer->AddBCC($dest);\n                  break;\n              }\n              $valid = 1;\n            }\n            else {\n              X::log(\"Adresse email invalide: \".$dest);\n              $valid = false;\n            }\n          }\n        }\n      }\n    }\n    if ($valid) {\n      if (!empty($cfg['from'])) {\n        $this->setFrom($cfg['from']);\n      }\n\n      if (!empty($cfg['references'])) {\n        \/\/ check if each reference have chevrons around the message id and remove them\n        $refs = [];\n        $cfg['references'] = explode(' ', $cfg['references']);\n        foreach ($cfg['references'] as $ref) {\n          if (preg_match('\/^<(.*)>$\/', $ref, $m)) {\n            $mailbox = explode('@', $m[1])[0];\n            $hostname = explode('@', $m[1])[1];\n            $refs[] = imap_rfc822_write_address($mailbox, $hostname, null);\n          }\n          else {\n            $mailbox = explode('@', $ref)[0];\n            $hostname = explode('@', $ref)[1];\n            $refs[] = imap_rfc822_write_address($mailbox, $hostname, null);\n          }\n        }\n        \/\/ for each ref add '<' and '>' around the message id if not present\n        for ($i = 0; $i < count($refs); $i++) {\n          if (!preg_match('\/^<(.*)>$\/', $refs[$i])) {\n            $refs[$i] = '<' . $refs[$i] . '>';\n          }\n        }\n\n        $cfg['references'] = implode(' ', $refs);\n        $this->mailer->addCustomHeader('References:' . $cfg['references']);\n      }\n\n      if (!empty($cfg['in_reply_to'])) {\n        # check if the in-reply-to have chevrons around the message id and remove them\n        if (preg_match('\/^<(.*)>$\/', $cfg['in_reply_to'], $m)) {\n          $mailbox = explode('@', $m[1])[0];\n          $hostname = explode('@', $m[1])[1];\n          $cfg['in_reply_to'] = imap_rfc822_write_address($mailbox, $hostname, null);\n        } else {\n          $mailbox = explode('@', $cfg['in_reply_to'])[0];\n          $hostname = explode('@', $cfg['in_reply_to'])[1];\n          $cfg['in_reply_to'] = imap_rfc822_write_address($mailbox, $hostname, null);\n        }\n        \/\/ add '<' and '>' around the message id if not present\n        if (!preg_match('\/^<(.*)>$\/', $cfg['in_reply_to'])) {\n          $cfg['in_reply_to'] = '<' . $cfg['in_reply_to'] . '>';\n        }\n\n        $this->mailer->AddCustomHeader('In-Reply-To:' . mb_encode_mimeheader($cfg['in_reply_to']));\n      }\n\n      $ar  = [\n        'title' => $cfg['subject'] ?? ($cfg['title'] ?? '')\n      ];\n      $enc = mb_detect_encoding($ar['title']);\n      if ($enc !== $this->mailer->CharSet) {\n        $ar['title'] = mb_convert_encoding($ar['title'], $this->mailer->CharSet, $enc);\n      }\n\n      $this->mailer->Subject = $ar['title'];\n\n      \n      if (empty($cfg['text'])) {\n        $ar['text'] = '';\n      }\n      else {\n        $ar['text'] = $cfg['text'];\n        $enc = mb_detect_encoding($ar['text']);\n        \/\/X::ddump($enc, $this->mailer->CharSet);\n        if ($enc !== $this->mailer->CharSet) {\n          $ar['text'] = mb_convert_encoding($ar['text'], $this->mailer->CharSet, $enc);\n        }\n      }\n\n      if (isset($cfg['attachments'])) {\n        if (\\is_string($cfg['attachments'])) {\n          $cfg['attachments'] = [$cfg['attachments']];\n        }\n\n        foreach ($cfg['attachments'] as $name => $att) {\n          if (is_file($att)) {\n            \/\/ 2nd parameter is the file's name in the mail\n            $this->mailer->AddAttachment($att, is_int($name) ? '' : $name);\n          }\n        }\n      }\n\n      if (!isset($renderer)) {\n        $renderer = Tpl::renderer($this->template);\n      }\n\n      $ar['url'] = \\defined('BBN_URL') ? BBN_URL : '';\n      $text = $renderer($ar);\n      self::setContent($text);\n      $this->mailer->msgHTML(self::$_content, $this->path);\n\n      try {\n        $r = $this->mailer->send();\n      }\n      catch (\\Exception $e) {\n        $this->log($e->getMessage());\n        $this->log(\\imap_last_error());\n      }\n\n      if ($r && !empty($this->imap_string)) {\n        $mail_string = $this->mailer->getSentMIMEMessage();\n        if (!\\is_resource($this->imap)\n          && !($this->imap instanceof \\IMAP\\Connection)\n        ) {\n          $this->imap = \\imap_open($this->imap_string, $this->imap_user, $this->imap_pass);\n        }\n\n        if ((!\\is_resource($this->imap)\n            && !($this->imap instanceof \\IMAP\\Connection))\n          || !\\imap_append($this->imap, $this->imap_string.$this->imap_sent, $mail_string, \"\\\\Seen\")\n        ) {\n          $this->log(\\imap_errors());\n        }\n      }\n    }\n\n    $this->mailer->ClearAllRecipients();\n    $this->mailer->ClearAttachments();\n    return $r;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 357,
            "endLine": 527,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "send",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 57,
                "endLine": 64,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "test",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 57,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "test",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 71,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "check",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 71,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "setError": {
            "name": "setError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
            "parent": {
                "name": "setError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 81,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 1,
                "shortName": "setError",
                "returns": [],
                "arguments": [
                    {
                        "name": "err",
                        "position": 0,
                        "type": "string",
                        "type_arr": [
                            "string"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "code",
                        "position": 1,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 81,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setError",
            "returns": [],
            "arguments": [
                {
                    "name": "err",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getErrorCode": {
            "name": "getErrorCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
            "parent": {
                "name": "getErrorCode",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 104,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrorCode",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorCode",
            "returns": [],
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 110,
                "endLine": 113,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrors",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrors",
            "returns": [],
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 116,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "log",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 116,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": []
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
                "parent": false,
                "trait": false,
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "isDebug",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * @return boolean\n   *\/"
            },
            "trait": false,
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isDebug",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return boolean\n   *\/"
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "setDebug",
                "returns": [],
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "type_arr": [
                            "bool"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [
                        {
                            "tag": "param",
                            "type": "boolean",
                            "name": "$debug"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
            },
            "trait": false,
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDebug",
            "returns": [],
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "boolean",
                        "name": "$debug"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
        }
    },
    "properties": {
        "_dest_fields": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The destination fields.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": false,
            "value": [
                "to",
                "cc",
                "bcc"
            ]
        },
        "_default_template": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The default HTML template.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": "<!DOCTYPE html>\n<html>\n<head>\n<title>{{title}}<\/title>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n<\/head>\n<body>\n<div>{{{text}}}<\/div>\n<\/body>\n<\/html>"
        },
        "_template_checked": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document"
                    },
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": false,
            "value": false
        },
        "_content": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The content currently set for sending by the class.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": ""
        },
        "_hash_content": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The hash of the last content sent by the class.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "mailer": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "PHPMailer"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "template": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "path": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "imap_user": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "imap_pass": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "imap_sent": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "imap_string": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "imap": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mail"
            },
            "declaring_trait": "bbn\\Mail",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "todo",
                        "text": "document\n"
                    },
                    {
                        "tag": "var",
                        "type": "string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "errors": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "errors",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "error": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|string"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCode": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|int"
                    }
                ]
            },
            "parent": {
                "name": "errorCode",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|int"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCodes": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": {
                "name": "errorCodes",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": "",
                "parent": false,
                "value": []
            },
            "value": []
        },
        "debug": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": {
                "name": "debug",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "boolean"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "log": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "log",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        }
    },
    "staticProperties": {
        "_dest_fields": [
            "to",
            "cc",
            "bcc"
        ],
        "_default_template": "<!DOCTYPE html>\n<html>\n<head>\n<title>{{title}}<\/title>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n<\/head>\n<body>\n<div>{{{text}}}<\/div>\n<\/body>\n<\/html>",
        "_template_checked": false,
        "_content": "",
        "_hash_content": null
    },
    "constants": null,
    "uses": {
        "Exception": "Exception",
        "bbn\\X": "X",
        "PHPMailer\\PHPMailer\\PHPMailer": "PHPMailer"
    },
    "dummyComments": [
        "\/**\n * Class for sending mails\n *\n * This class uses PHPMailer but adds the possibility to append the sent emails to the Sent (or another) folder\n *\n *\n * @author Thomas Nabet <thomas.nabet@gmail.com>\n * @copyright BBN Solutions\n * @since Apr 4, 2011, 23:23:55 +0000\n * @category  Database\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n * @version 0.2r89\n *\n * Here is an example with gMail\n * <code>\n * $mail = new Mail([\n *   'port' => 465,\n *   'host' => 'imap.gmail.com',\n *   'user' => 'myemail@gmail.com',\n *   'name' => 'My real name',\n *   'pass' => 'mypassword',\n *   'imap' => true,\n *   'ssl' => true\n * ]);\n * <\/code>\n *\n * Here is an example with classic\n * <code>\n * $mail = new Mail([\n *   'host' => 'mail.m3l.co',\n *   'user' => 'myrealemail@babna.com',\n *   'from' => 'myniceemail@babna.com',\n *   'name' => 'My real name',\n *   'pass' => 'mypassword',\n *   'imap' => true\n * ]);\n * <\/code>\n *\/"
    ],
    "summary": "",
    "description": "",
    "description_parts": []
}