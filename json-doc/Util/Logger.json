{
    "doc": {
        "description": "A few recurrent functions\n\n\nThese functions are basically creating a database reference and logging functions.\nIn order to implement this trait, the following private static variables should be declared:\n* $cli\n* $info = array()\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Jan 14, 2013, 23:23:55 +0000",
            "category": "Traits",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.4"
        }
    },
    "name": "bbn\\Util\\Logger",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Util\/Logger.php",
    "startLine": 19,
    "endLine": 86,
    "numMethods": 3,
    "numProperties": 1,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "reports": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Util",
    "shortName": "Logger",
    "contentConstructor": null,
    "methods": {
        "report": {
            "name": "report",
            "summary": "Add information to the $info array",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Logger",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($st)\n  {\n\t\tif ( php_sapi_name() == 'cli' && empty($_SERVER['REMOTE_ADDR']) ){\n\t\t\tif ( \\is_string($st) ){\n\t\t\t\techo $st.\"\\n\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint_r($st,1).\"\\n\";\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif ( \\is_string($st) ){\n\t\t\t\tarray_push($this->reports,$st);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tarray_push($this->reports,print_r($st,true));\n\t\t\t}\n\t\t}\n\t\treturn $this;\n  }",
            "startLine": 28,
            "endLine": 47,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "debug": {
            "name": "debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Logger",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($file = 'misc')\n  {\n\t\t$i = debug_backtrace();\n\t\tbbn\\X::log(print_r($i, 1));\n  }",
            "startLine": 49,
            "endLine": 53,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "misc",
                    "default_name": ""
                }
            ]
        },
        "log": {
            "name": "log",
            "summary": "Add information to the $info array",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Logger",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($st = '', $file = 'misc')\n  {\n\t\tif ( \\defined('BBN_DATA_PATH') && is_dir(BBN_DATA_PATH.'logs') ){\n\t\t\t$log_file = BBN_DATA_PATH.'logs\/'.$file.'.log';\n\t\t\t$r = \"[\".date('d\/m\/Y H:i:s').\"]\\t\";\n\t\t\tif ( empty($st) && \\count($this->reports) > 0 ){\n\t\t\t\t$st = implode(\"\\n\\n\", $this->reports);\n\t\t\t\t$this->reports = [];\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$i = debug_backtrace()[0];\n\t\t\t\t$r .= $i['file'].\" - line \".$i['line'];\n\t\t\t}\n\t\t\t$r .= \"\\n\".( \\is_string($st) ? $st : print_r($st, true) ).\"\\n\\n\";\n\t\t\t$s = ( file_exists($log_file) ) ? filesize($log_file) : 0;\n\t\t\tif ( $s > 1048576 ){\n\t\t\t\tfile_put_contents($log_file.'.old',file_get_contents($log_file),FILE_APPEND);\n\t\t\t\tfile_put_contents($log_file,$r);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfile_put_contents($log_file,$r,FILE_APPEND);\n\t\t\t}\n\t\t}\n\t\treturn $this;\n  }",
            "startLine": 61,
            "endLine": 85,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "file",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "misc",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "reports": {
            "visibility": "public"
        }
    },
    "staticProperties": [],
    "constants": null,
    "summary": "A few recurrent functions",
    "description": "These functions are basically creating a database reference and logging functions.\nIn order to implement this trait, the following private static variables should be declared:\n* $cli\n* $info = array()",
    "description_parts": [
        {
            "type": "text",
            "content": "<p>These functions are basically creating a database reference and logging functions.\nIn order to implement this trait, the following private static variables should be declared:<\/p>\n<ul>\n<li>$cli<\/li>\n<li>$info = array()<\/li>\n<\/ul>"
        }
    ]
}