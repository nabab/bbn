{
    "doc": {
        "description": "Encryption Class\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Utilities",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\Util\\Enc",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Util\/Enc.php",
    "startLine": 20,
    "endLine": 242,
    "contentConstructor": null,
    "methods": {
        "crypt": {
            "name": "crypt",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = '')\n  {\n    $key = self::_get_key($key);\n    return self::encryptOpenssl($s, $key);\n  }",
            "startLine": 34,
            "endLine": 38,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "decrypt": {
            "name": "decrypt",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = '')\n  {\n    $key = self::_get_key($key);\n    return self::decryptOpenssl($s, $key);\n  }",
            "startLine": 45,
            "endLine": 49,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "crypt64": {
            "name": "crypt64",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = '')\n  {\n    return base64_encode(self::crypt($s, $key));\n  }",
            "startLine": 56,
            "endLine": 59,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "decrypt64": {
            "name": "decrypt64",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = '')\n  {\n    return self::decrypt(base64_decode($s), $key);\n  }",
            "startLine": 66,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "encryptOpenssl": {
            "name": "encryptOpenssl",
            "summary": "Encrypt string using openSSL module",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = NULL, string $method = NULL, string $password = '')\n  {\n      string $method = null,\n      string $password = ''\n  ): ?string {\n    if (!$key) {\n      $key = self::$salt;\n    }\n    if ($length = @openssl_cipher_iv_length($method ?: self::$method)) {\n      $iv = substr(md5(self::$prefix.$password), 0, $length);\n      $res = null;\n      try {\n        $res = openssl_encrypt($s, $method ?: self::$method, $key, true, $iv);\n      }\n      catch (\\Exception $e) {\n        X::log(\"Impossible to decrypt\");\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 80,
            "endLine": 102,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any random secure SALT string for your website"
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "password",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "User's optional password"
                }
            ]
        },
        "decryptOpenssl": {
            "name": "decryptOpenssl",
            "summary": "Decrypt string using openSSL module.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $s, string $key = NULL, string $method = NULL, string $password = '')\n  {\n      string $method = null,\n      string $password = ''\n  ): ?string {\n    if (!$key) {\n      $key = self::$salt;\n    }\n    if ($length = @openssl_cipher_iv_length($method ?: self::$method)) {\n      $iv = substr(md5(self::$prefix.$password), 0, $length);\n      try {\n        $res = openssl_decrypt($s, $method ?: self::$method, $key, true, $iv);\n      }\n      catch (\\Exception $e){\n        X::log($e->getMessage(), 'decryptOpenssl');\n      }\n\n      if (!empty($res)) {\n        return $res;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 113,
            "endLine": 136,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "s",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any random secure SALT string for your website"
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "password",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "User's optional password"
                }
            ]
        },
        "generateCertFiles": {
            "name": "generateCertFiles",
            "summary": "Generates a private and a public SSL certificate files.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $path, string $algo = 'sha512', int $key_bits = 4096)\n  {\n    $res = false;\n    if (is_dir(X::dirname($path))\n        && !file_exists($path.'_rsa')\n        && in_array($algo, hash_algos(), true)\n        && ($key = self::generateCert($algo, $key_bits))\n    ) {\n      if (is_dir($path) && (substr($path, -1) !== '\/')) {\n        $path .= '\/';\n      }\n      $public = $path.'_rsa.pub';\n      $private = $path.'_rsa';\n      if (\\file_put_contents($public, $key['public'])\n          && \\file_put_contents($private, $key['private'])\n      ) {\n        $res = true;\n      }\n    }\n\n    return $res;\n  }",
            "startLine": 147,
            "endLine": 168,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "algo",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "sha512",
                    "default_name": ""
                },
                {
                    "name": "key_bits",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 4096,
                    "default_name": "",
                    "description": "bits"
                }
            ]
        },
        "generateCert": {
            "name": "generateCert",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Util\\Enc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $algo = 'sha512', int $key_bits = 4096)\n  {\n    $res = null;\n    $params = [\n      'digest_alg' => $algo,\n      'private_key_bits' => $key_bits,\n      'private_key_type' => OPENSSL_KEYTYPE_RSA\n    ];\n    $rsaKey = openssl_pkey_new($params);\n    \/\/openssl_pkey_export($rsaKey, $priv);\n    $umask = umask(0066);\n    $privKey = openssl_pkey_get_private($rsaKey);\n    $pubKey = openssl_pkey_get_details($rsaKey);\n    if (openssl_pkey_export($privKey, $priv)\n        && ($pub = $pubKey['key'])\n    ) {\n      $res = [\n        'private' => $priv,\n        'public' => $pub\n      ];\n    }\n    umask($umask);\n    return $res;\n  }",
            "startLine": 175,
            "endLine": 198,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "algo",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "sha512",
                    "default_name": ""
                },
                {
                    "name": "key_bits",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 4096,
                    "default_name": "",
                    "description": "bits"
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": {
        "method": "AES-256-CFB",
        "salt": "dsjfjsdvcb34YhXZLW",
        "prefix": "bbn-"
    },
    "constants": null,
    "numMethods": 8,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 3,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "method": "AES-256-CFB",
        "salt": "dsjfjsdvcb34YhXZLW",
        "prefix": "bbn-"
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Util",
    "shortName": "Enc",
    "summary": "Encryption Class",
    "description": "",
    "description_parts": []
}