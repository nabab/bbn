{
    "doc": {
        "description": "Model View Controller Class\n\n\nThis class will route a request to the according model and\/or view through its controller.\nA model and a view can be automatically associated if located in the same directory branch with the same name than the controller in their respective locations\nA view can be directly imported in the controller through this very class\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "MVC",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89",
            "todo": "Look into the check function and divide it"
        }
    },
    "name": "bbn\\Mvc\\Model",
    "namespace": true,
    "realName": "Model",
    "realNamespace": "bbn\\Mvc",
    "traits": [
        "bbn\\Mvc\\Common",
        "bbn\\Models\\Tts\\Cache"
    ],
    "interfaces": [],
    "fileName": "\/Mvc\/Model.php",
    "startLine": 29,
    "endLine": 589,
    "numMethods": 78,
    "numProperties": 18,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "_file": null,
        "_ctrl": null,
        "_path": null,
        "_checkers": null,
        "_plugin": null,
        "_plugin_name": null,
        "db": null,
        "data": null,
        "inc": null,
        "errors": [],
        "error": false,
        "errorCode": false,
        "errorCodes": [],
        "debug": false,
        "log": [],
        "_mvc": null,
        "_cache_prefix": null,
        "cache_engine": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Mvc",
    "shortName": "Model",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Models are always recreated and reincluded, even if they have from the same path",
            "description": "They are all created from bbn\\Mvc::get_model",
            "description_parts": [
                {
                    "type": "text",
                    "content": "They are all created from bbn\\Mvc::get_model"
                }
            ],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct(Db $db = null, array $info, Controller $ctrl, Mvc $mvc)\n  {\n    if (isset($info['path']) && $this->checkPath($info['path'])) {\n      if ($db) {\n        parent::__construct($db);\n      }\n\n      $this->cacheInit();\n      $this->_ctrl = $ctrl;\n      $this->_mvc  = $mvc;\n      $this->inc = &$mvc->inc;\n      if (is_file($info['file'])) {\n        $this->_path        = $info['path'];\n        $this->_file        = $info['file'];\n        $this->_checkers    = $info['checkers'] ?? [];\n        $this->_plugin_name = $info['plugin_name'] ?? null;\n        $this->_plugin      = $info['plugin'] ?? null;\n      }\n    }\n    else{\n        $this->error(\"The model \". ($info['path'] ?? null) .\" doesn't exist\");\n    }\n  }",
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Db",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Db.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function __construct(dbClass $db)\n  {\n    $this->db = $db;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "__construct",
                "returns": [],
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "type_arr": [
                            "bbn\\Db"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ],
                "doc": {
                    "description": "Constructor.\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "dbClass",
                            "name": "$db",
                            "description": "A database connection"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * Constructor.\n   *\n   * @param dbClass $db A database connection\n   *\/"
            },
            "trait": false,
            "startLine": 99,
            "endLine": 121,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "null|bbn\\Db",
                    "type_arr": [
                        "null",
                        "bbn\\Db"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database object in the first call and the controller path in the calls within the class (through Add)<em>(e.g books\/466565 or html\/home)<\/em>"
                },
                {
                    "name": "info",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The full path to the model's file"
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "type_arr": [
                        "bbn\\Mvc\\Controller"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The parent controller"
                },
                {
                    "name": "mvc",
                    "position": 3,
                    "type": "bbn\\Mvc",
                    "type_arr": [
                        "bbn\\Mvc"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The parent MVC"
                }
            ],
            "doc": {
                "description": "Models are always recreated and reincluded, even if they have from the same path\nThey are all created from bbn\\Mvc::get_model\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "null|bbn\\Db",
                        "name": "$db",
                        "description": "The database object in the first call and the controller path in the calls within the class (through Add)<em>(e.g books\/466565 or html\/home)<\/em>"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$info",
                        "description": "The full path to the model's file"
                    },
                    {
                        "tag": "param",
                        "type": "Controller",
                        "name": "$ctrl",
                        "description": "The parent controller"
                    },
                    {
                        "tag": "param",
                        "type": "Mvc",
                        "name": "$mvc",
                        "description": "The parent MVC"
                    }
                ],
                "return": "",
                "throws": {
                    "tag": "throws",
                    "type": "\\Exception"
                }
            },
            "comments": "  \/**\n   * Models are always recreated and reincluded, even if they have from the same path\n   * They are all created from bbn\\Mvc::get_model\n   *\n   * @param null|bbn\\Db $db The database object in the first call and the controller path in the calls within the class (through Add)<em>(e.g books\/466565 or html\/home)<\/em>\n   * @param array $info The full path to the model's file\n   * @param Controller $ctrl The parent controller\n   * @param Mvc $mvc The parent MVC\n   * @throws \\Exception\n   *\/"
        },
        "getController": {
            "name": "getController",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getController(): Controller\n  {\n    return $this->_ctrl;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 123,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getController",
            "returns": [
                "bbn\\Mvc\\Controller"
            ],
            "arguments": []
        },
        "checkAction": {
            "name": "checkAction",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function checkAction(array $vars = null, bool $check_empty = false): bool\n  {\n    if (isset($this->data['res'], $this->data['res'])) {\n      if (is_array($vars)) {\n        return X::hasProps($this->data, $vars, $check_empty);\n      }\n\n      return true;\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 134,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "checkAction",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "vars",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "check_empty",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "empty"
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$vars"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$check",
                        "description": "empty"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array|null $vars\n   * @param bool $check_empty\n   * @return bool\n   *\/"
        },
        "addController": {
            "name": "addController",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function addController()\n  {\n    return $this->_ctrl->add(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 148,
            "endLine": 151,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "addController",
            "returns": [],
            "arguments": []
        },
        "isControlledBy": {
            "name": "isControlledBy",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isControlledBy(string $path, string $type = 'public'): bool\n  {\n    if ($this->_ctrl && ($this->_ctrl->getPath() === $path)) {\n      if ($type === 'cli') {\n        return $this->_mvc->isCli();\n      }\n\n      if ($type === $this->_ctrl->getMode()) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 159,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "isControlledBy",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "type",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "public",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$path"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$type"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $path\n   * @param string $type\n   * @return bool\n   *\/"
        },
        "getControllerPath": {
            "name": "getControllerPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getControllerPath()\n  {\n    return $this->_ctrl ? $this->_ctrl->getPath() : false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 178,
            "endLine": 181,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getControllerPath",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return false|string|null\n   *\/"
        },
        "hasVar": {
            "name": "hasVar",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasVar(string $var, bool $check_empty = false): bool\n  {\n    return X::hasProp($this->data, $var, $check_empty);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 189,
            "endLine": 192,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "hasVar",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "var",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "check_empty",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "empty"
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$var"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$check",
                        "description": "empty"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $var\n   * @param bool $check_empty\n   * @return bool\n   *\/"
        },
        "hasVars": {
            "name": "hasVars",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasVars(array $vars, bool $check_empty = false): bool\n  {\n    return X::hasProps($this->data, $vars, $check_empty);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 200,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "hasVars",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "vars",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "check_empty",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "empty"
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$vars"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$check",
                        "description": "empty"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array $vars\n   * @param bool $check_empty\n   * @return bool\n   *\/"
        },
        "registerPluginClasses": {
            "name": "registerPluginClasses",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function registerPluginClasses($plugin_path): self\n  {\n    $this->_ctrl->registerPluginClasses($plugin_path);\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 210,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "registerPluginClasses",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "plugin_path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$plugin_path"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param $plugin_path\n   * @return self\n   *\/"
        },
        "get": {
            "name": "get",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function get(array $data = null): ?array\n  {\n    if (\\is_null($data)) {\n      $data = [];\n    }\n\n    $this->data = $data;\n    if ($this->_plugin) {\n      $router = Router::getInstance();\n      if ($textDomain = $router->getLocaleDomain($this->_plugin_name)) {\n        $oldTextDomain = textdomain(null);\n        if ($textDomain !== $oldTextDomain) {\n          textdomain($textDomain);\n        }\n        else {\n          unset($oldTextDomain);\n        }\n      }\n    }\n\n    foreach ($this->_checkers as $appui_checker_file) {\n      \/\/ If a checker file returns false, the controller is not processed\n      \/\/ The checker file can define data and inc that can be used in the subsequent controller\n      Mvc::includeModel($appui_checker_file, $this);\n    }\n\n    $res = Mvc::includeModel($this->_file, $this);\n    if (!empty($oldTextDomain)) {\n      textdomain($oldTextDomain);\n    }\n\n    return $res ?: null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 221,
            "endLine": 253,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "get",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array|null $data\n   * @return array|null\n   *\/"
        },
        "getContent": {
            "name": "getContent",
            "summary": "This will get a the content of a file located within the controller data path.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getContent(): ?string\n  {\n    return $this->_ctrl->getContent(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 260,
            "endLine": 263,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getContent",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "This will get a the content of a file located within the controller data path.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * This will get a the content of a file located within the controller data path.\n   *\n   * @return string|false\n   *\/"
        },
        "getModel": {
            "name": "getModel",
            "summary": "This will get the model. There is no order for the arguments.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getModel(): ?array\n  {\n    return $this->_ctrl->getModel(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 272,
            "endLine": 275,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getModel",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "This will get the model. There is no order for the arguments.\n",
                "params": [],
                "return": "",
                "throws": {
                    "tag": "throws",
                    "type": "\\Exception"
                }
            },
            "comments": "  \/**\n   * This will get the model. There is no order for the arguments.\n   *\n   * @return array|null\n   * @throws \\Exception\n   *\/"
        },
        "getCustomModelGroup": {
            "name": "getCustomModelGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCustomModelGroup(string $path, string $plugin, array $data = null)\n  {\n    return $this->_ctrl->getCustomModelGroup(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 278,
            "endLine": 281,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "getCustomModelGroup",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getSubpluginModelGroup": {
            "name": "getSubpluginModelGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getSubpluginModelGroup(string $path, string $plugin_from, string $plugin_for, array $data = null)\n  {\n    return $this->_ctrl->getSubpluginModelGroup(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 284,
            "endLine": 287,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "shortName": "getSubpluginModelGroup",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin_from",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin_for",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 3,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getDataError": {
            "name": "getDataError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getDataError($propNames, ?string $errorMsg = null, bool $checkEmpty = true): ?array\n  {\n    if (!$errorMsg) {\n      $errorMsg = \"A value must be given for the field %s\";\n    }\n\n    $propNames = (array)$propNames;\n    foreach ($propNames as $p) {\n      if (!$this->hasData($p, $checkEmpty)) {\n        return [\n          'success' => false,\n          'error'  => X::_($errorMsg, $p)\n        ];\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 290,
            "endLine": 307,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "getDataError",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "propNames",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "errorMsg",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "checkEmpty",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "getCachedModel": {
            "name": "getCachedModel",
            "summary": "This will get the cached model. There is no order for the arguments.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCachedModel(): ?array\n  {\n    return $this->_ctrl->getCachedModel(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 316,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getCachedModel",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "This will get the cached model. There is no order for the arguments.\n",
                "params": [],
                "return": "",
                "throws": {
                    "tag": "throws",
                    "type": "\\Exception"
                }
            },
            "comments": "  \/**\n   * This will get the cached model. There is no order for the arguments.\n   *\n   * @return array|null\n   * @throws \\Exception\n   *\/"
        },
        "getPluginModel": {
            "name": "getPluginModel",
            "summary": "Retrieves a model of a the plugin.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getPluginModel($path, array $data = [], string $plugin = null, int $ttl = 0): ?array\n  {\n    return $this->_ctrl->getPluginModel(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 331,
            "endLine": 334,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getPluginModel",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Retrieves a model of a the plugin.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$path"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$plugin"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Retrieves a model of a the plugin.\n   *\n   * @param $path\n   * @param array $data\n   * @param string|null $plugin\n   * @param int $ttl\n   * @return array|null\n   *\/"
        },
        "getSubpluginModel": {
            "name": "getSubpluginModel",
            "summary": "Get a sub plugin model (a plugin inside the plugin directory of another plugin).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getSubpluginModel($path, array $data = [], string $plugin = null, string $subplugin, int $ttl = 0): ?array\n  {\n    return $this->_ctrl->getSubpluginModel(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 347,
            "endLine": 350,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 4,
            "shortName": "getSubpluginModel",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subplugin",
                    "position": 3,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 4,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Get a sub plugin model (a plugin inside the plugin directory of another plugin).\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$path"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$plugin"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$subplugin"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Get a sub plugin model (a plugin inside the plugin directory of another plugin).\n   *\n   * @param $path\n   * @param array $data\n   * @param string|null $plugin\n   * @param string $subplugin\n   * @param int $ttl\n   * @return array|null\n   *\/"
        },
        "hasSubpluginModel": {
            "name": "hasSubpluginModel",
            "summary": "Returns true if the subplugin model exists.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasSubpluginModel(string $path, string $plugin, string $subplugin): bool\n  {\n    return $this->_ctrl->hasSubpluginModel(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 361,
            "endLine": 364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "shortName": "hasSubpluginModel",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subplugin",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns true if the subplugin model exists.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$path"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$plugin"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$subplugin"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns true if the subplugin model exists.\n   *\n   * @param string $path\n   * @param string $plugin\n   * @param string $subplugin\n   * @return bool\n   *\/"
        },
        "hasPlugin": {
            "name": "hasPlugin",
            "summary": "Returns true if plugin exists and false otherwise.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasPlugin(): bool\n  {\n    return $this->_ctrl->hasPlugin(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 372,
            "endLine": 375,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "hasPlugin",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns true if plugin exists and false otherwise.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns true if plugin exists and false otherwise.\n   *\n   * @return bool\n   *\/"
        },
        "isPlugin": {
            "name": "isPlugin",
            "summary": "Returns true if plugin exists and false otherwise.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isPlugin(): bool\n  {\n    return $this->_ctrl->isPlugin(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 383,
            "endLine": 386,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isPlugin",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns true if plugin exists and false otherwise.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns true if plugin exists and false otherwise.\n   *\n   * @return bool\n   *\/"
        },
        "pluginPath": {
            "name": "pluginPath",
            "summary": "Returns the path of the given plugin.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function pluginPath(): ?string\n  {\n    return $this->_ctrl->pluginPath(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 394,
            "endLine": 397,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "pluginPath",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the path of the given plugin.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the path of the given plugin.\n   *\n   * @return string|null\n   *\/"
        },
        "pluginUrl": {
            "name": "pluginUrl",
            "summary": "Returns the URL part of the given plugin.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function pluginUrl(): ?string\n  {\n    return $this->_ctrl->pluginUrl(...\\func_get_args());\n  }",
            "parent": false,
            "trait": false,
            "startLine": 405,
            "endLine": 408,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "pluginUrl",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the URL part of the given plugin.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the URL part of the given plugin.\n   *\n   * @return string|null\n   *\/"
        },
        "addInc": {
            "name": "addInc",
            "summary": "Adds a property to the MVC object inc if it has not been declared.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function addInc($name, $obj): self\n  {\n    $this->_mvc->addInc($name, $obj);\n    return $this;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 416,
            "endLine": 420,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "addInc",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "obj",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Adds a property to the MVC object inc if it has not been declared.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Adds a property to the MVC object inc if it has not been declared.\n   *\n   * @return self\n   *\/"
        },
        "hasData": {
            "name": "hasData",
            "summary": "Checks if data exists or if a specific index exists in the data",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "    public function hasData($idx = null, $check_empty = false): bool\n    {\n      if (!\\is_array($this->data)) {\n        return false;\n      }\n\n      if (\\is_null($idx)) {\n        return !empty($this->data);\n      }\n\n      return X::hasProps($this->data, (array)$idx, $check_empty);\n    }",
            "parent": false,
            "trait": false,
            "startLine": 428,
            "endLine": 439,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "hasData",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "idx",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "check_empty",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Checks if data exists or if a specific index exists in the data\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n     * Checks if data exists or if a specific index exists in the data\n     *\n     * @return bool\n     *\/"
        },
        "setData": {
            "name": "setData",
            "summary": "Sets the data. Chainable. Should be useless as $this->data is public. Chainable.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "    public function setData(array $data): self\n    {\n        $this->data = $data;\n        return $this;\n    }",
            "parent": false,
            "trait": false,
            "startLine": 448,
            "endLine": 452,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setData",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets the data. Chainable. Should be useless as $this->data is public. Chainable.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$data"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the data. Chainable. Should be useless as $this->data is public. Chainable.\n   *\n   * @param array $data\n   * @return self\n   *\/"
        },
        "addData": {
            "name": "addData",
            "summary": "Merges the existing data if there is with this one. Chainable.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "    public function addData(array ...$data): self\n    {\n      $ar = \\func_get_args();\n      foreach ($data as $d){\n        if (\\is_array($d)) {\n          $this->data = $this->hasData() ? array_merge($this->data, $d) : $d;\n        }\n      }\n\n        return $this;\n    }",
            "parent": false,
            "trait": false,
            "startLine": 460,
            "endLine": 470,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "addData",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Merges the existing data if there is with this one. Chainable.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Merges the existing data if there is with this one. Chainable.\n   *\n   * @return self\n   *\/"
        },
        "setDefaultData": {
            "name": "setDefaultData",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "    public function setDefaultData(array $data): self\n    {\n      X::extendOut($this->data, $data);\n      return $this;\n    }",
            "parent": false,
            "trait": false,
            "startLine": 473,
            "endLine": 477,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDefaultData",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_cache_name": {
            "name": "_cache_name",
            "summary": "Generates cache name from the given data.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "    protected function _cache_name($data, string $spec = ''): ?string\n    {\n      if ($this->_path) {\n        $cn = 'models\/'.$this->_path;\n        if ($spec) {\n          $cn .= '\/'.$spec;\n        }\n\n        if ($data) {\n          if (is_array($data)) {\n            ksort($data);\n          }\n\n          $cn .= '\/'.md5(serialize($data));\n        }\n\n        return $cn;\n      }\n\n      return null;\n    }",
            "parent": false,
            "trait": false,
            "startLine": 487,
            "endLine": 507,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "_cache_name",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "spec",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Generates cache name from the given data.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$spec"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Generates cache name from the given data.\n   *\n   * @param $data\n   * @param string $spec\n   * @return string|null\n   *\/"
        },
        "setCache": {
            "name": "setCache",
            "summary": "Sets a cache from the given data.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setCache(array $data = null, string $spec = '', $ttl = 10)\n  {\n    if ($this->_path) {\n      $d = $this->get($data);\n      $this->cacheSet($this->_cache_name($data, $spec), '', $d, $ttl);\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 518,
            "endLine": 524,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "shortName": "setCache",
            "returns": [],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "spec",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets a cache from the given data.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$spec"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets a cache from the given data.\n   *\n   * @param array|null $data\n   * @param string $spec\n   * @param int $ttl\n   * @return void\n   *\/"
        },
        "deleteCache": {
            "name": "deleteCache",
            "summary": "Deletes a cache with the given data.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function deleteCache(array $data = null, $spec = '', string $path = '')\n  {\n    if ($cn = $this->_cache_name($data, $spec)) {\n      if ($path) {\n        $cn = 'models\/' . $path . substr($cn, strlen('models\/' . $this->_path));\n      }\n\n      return $this->cache_engine->deleteAll($cn, '');\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 533,
            "endLine": 542,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "shortName": "deleteCache",
            "returns": [],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "spec",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "path",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Deletes a cache with the given data.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$spec"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes a cache with the given data.\n   *\n   * @param array|null $data\n   * @param string $spec\n   *\/"
        },
        "getFromCache": {
            "name": "getFromCache",
            "summary": "Returns the cache for the given item, but if expired or absent creates it before by running the closure.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getFromCache(array $data = null, string $spec = '', int $ttl = 10)\n  {\n    $model =& $this;\n    return $this->getSetFromCache(\n      function () use (&$model, $data) {\n        return $model->get($data);\n      }, $data, $spec, $ttl\n    );\n  }",
            "parent": false,
            "trait": false,
            "startLine": 553,
            "endLine": 561,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "shortName": "getFromCache",
            "returns": [],
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "spec",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 2,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the cache for the given item, but if expired or absent creates it before by running the closure.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$spec"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the cache for the given item, but if expired or absent creates it before by running the closure.\n   *\n   * @param array|null $data\n   * @param string $spec\n   * @param int $ttl\n   * @return array|null\n   *\/"
        },
        "getSetFromCache": {
            "name": "getSetFromCache",
            "summary": "Returns the cache for the given item, but if expired or absent creates it before by running the provided function.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getSetFromCache(\\Closure $fn, array $data = null, string $spec = '', int $ttl = 10): ?array\n  {\n    if ($cn = $this->_cache_name($data, $spec)) {\n      return $this->cacheGetSet($fn, $cn, '', $ttl) ?: null;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 573,
            "endLine": 580,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getSetFromCache",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "Closure",
                    "type_arr": [
                        "Closure"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "spec",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the cache for the given item, but if expired or absent creates it before by running the provided function.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "\\Closure",
                        "name": "$fn"
                    },
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$spec"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the cache for the given item, but if expired or absent creates it before by running the provided function.\n   *\n   * @param \\Closure $fn\n   * @param array|null $data\n   * @param string $spec\n   * @param int $ttl\n   * @return array|null\n   *\/"
        },
        "applyLocale": {
            "name": "applyLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Model.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function applyLocale($plugin)\n  {\n    return $this->_mvc->applyLocale($plugin);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 583,
            "endLine": 586,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "applyLocale",
            "returns": [],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 57,
                "endLine": 64,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "test",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 57,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "test",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 71,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "check",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 71,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "setError": {
            "name": "setError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
            "parent": {
                "name": "setError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 81,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 1,
                "shortName": "setError",
                "returns": [],
                "arguments": [
                    {
                        "name": "err",
                        "position": 0,
                        "type": "string",
                        "type_arr": [
                            "string"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "code",
                        "position": 1,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 81,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setError",
            "returns": [],
            "arguments": [
                {
                    "name": "err",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getError()\n  {\n    return $this->error;\n  }",
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getError()\n  {\n    return $this->error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 98,
                "endLine": 101,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 98,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": []
        },
        "getErrorCode": {
            "name": "getErrorCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
            "parent": {
                "name": "getErrorCode",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 104,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrorCode",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorCode",
            "returns": [],
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 110,
                "endLine": 113,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrors",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrors",
            "returns": [],
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "Log to a specific log with debug info",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log()\n  {\n    if (Mvc::getDebug()) {\n      $ar = \\func_get_args();\n      X::log(\\count($ar) > 1 ? $ar : $ar[0], 'mvc');\n    }\n  }",
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 116,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "log",
                "returns": [],
                "arguments": []
            },
            "trait": "bbn\\Mvc\\Common",
            "startLine": 67,
            "endLine": 73,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Log to a specific log with debug info",
                "tags": []
            },
            "comments": "  \/**\n   * Log to a specific log with debug info\n   *\/"
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
                "parent": false,
                "trait": false,
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "isDebug",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * @return boolean\n   *\/"
            },
            "trait": false,
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isDebug",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return boolean\n   *\/"
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "setDebug",
                "returns": [],
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "type_arr": [
                            "bool"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [
                        {
                            "tag": "param",
                            "type": "boolean",
                            "name": "$debug"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
            },
            "trait": false,
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDebug",
            "returns": [],
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "boolean",
                        "name": "$debug"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
        },
        "checkPath": {
            "name": "checkPath",
            "summary": "This checks whether an argument used for getting controller, View or model - which are files - doesn't contain malicious content.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function checkPath()\n  {\n    $ar = \\func_get_args();\n    foreach ($ar as $a){\n      $b = Str::parsePath($a, true);\n      if (empty($b) && !empty($a)) {\n        $this->error(\"The path $a is not an acceptable value\");\n        return false;\n      }\n    }\n\n    return 1;\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 37,
            "endLine": 49,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "checkPath",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "This checks whether an argument used for getting controller, View or model - which are files - doesn't contain malicious content.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$p",
                        "description": "The request path <em>(e.g books\/466565 or html\/home)<\/em>"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * This checks whether an argument used for getting controller, View or model - which are files - doesn't contain malicious content.\n   *\n   * @param string $p The request path <em>(e.g books\/466565 or html\/home)<\/em>\n   * @return bool\n   *\/"
        },
        "error": {
            "name": "error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function error($msg)\n  {\n    $msg = \"Error from \".\\get_class($this).\": \".$msg;\n    $this->log($msg, 'mvc');\n    throw new \\Exception(X::_($msg));\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "error",
            "returns": [],
            "arguments": [
                {
                    "name": "msg",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$msg"
                    }
                ],
                "return": "",
                "throws": {
                    "tag": "throws",
                    "type": "\\Exception"
                }
            },
            "comments": "  \/**\n   * @param $msg\n   * @throws \\Exception\n   *\/"
        },
        "pluginDataPath": {
            "name": "pluginDataPath",
            "summary": "Returns the path of a plugin in the data",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function pluginDataPath(string $plugin = null): ?string\n  {\n    if ($this->_plugin || $plugin) {\n      return $this->dataPath().'plugins\/'.$this->pluginName($plugin ?: $this->_plugin).'\/';\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 82,
            "endLine": 89,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "pluginDataPath",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the path of a plugin in the data\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$plugin"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the path of a plugin in the data\n   *\n   * @param string $plugin\n   * @return string|null\n   *\/"
        },
        "pluginTmpPath": {
            "name": "pluginTmpPath",
            "summary": "Returns the path of a plugin in the data",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function pluginTmpPath(string $plugin = null): ?string\n  {\n    if ($this->_plugin || $plugin) {\n      return $this->tmpPath().'plugins\/'.$this->pluginName($plugin ?: $this->_plugin).'\/';\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 98,
            "endLine": 105,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "pluginTmpPath",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the path of a plugin in the data\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$plugin"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the path of a plugin in the data\n   *\n   * @param string $plugin\n   * @return string|null\n   *\/"
        },
        "getPlugins": {
            "name": "getPlugins",
            "summary": "Returns all the plugins available with their name, path and url",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getPlugins(): ?array\n  {\n    return $this->_mvc->getPlugins();\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 112,
            "endLine": 115,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getPlugins",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns all the plugins available with their name, path and url\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns all the plugins available with their name, path and url\n   * @return array|null\n   *\/"
        },
        "pluginName": {
            "name": "pluginName",
            "summary": "Returns the name of a plugin based on its path",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function pluginName($path = null): ?string\n  {\n    return $this->_mvc->pluginName($path ?: $this->_path);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 174,
            "endLine": 177,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "pluginName",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The plugin path"
                }
            ],
            "doc": {
                "description": "Returns the name of a plugin based on its path\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$path",
                        "description": "The plugin path"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the name of a plugin based on its path\n   *\n   * @param string|null $path The plugin path\n   * @return string|null\n   *\/"
        },
        "getCookie": {
            "name": "getCookie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCookie()\n  {\n    return $this->_mvc->getCookie();\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 180,
            "endLine": 183,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getCookie",
            "returns": [],
            "arguments": []
        },
        "getRoutes": {
            "name": "getRoutes",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getRoutes(): ?array\n  {\n    return $this->_mvc->getRoutes();\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 186,
            "endLine": 189,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getRoutes",
            "returns": [
                null,
                "array"
            ],
            "arguments": []
        },
        "getAliases": {
            "name": "getAliases",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getAliases(): ?array\n  {\n    return $this->_mvc->getRoutes('alias');\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 192,
            "endLine": 195,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getAliases",
            "returns": [
                null,
                "array"
            ],
            "arguments": []
        },
        "getRoute": {
            "name": "getRoute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getRoute(string $path, string $mode)\n  {\n    return $this->_mvc->getRoute($path, $mode);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 198,
            "endLine": 201,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "getRoute",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setLocale": {
            "name": "setLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setLocale(string $locale)\n  {\n    return $this->_mvc->setLocale($locale);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 204,
            "endLine": 207,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setLocale",
            "returns": [],
            "arguments": [
                {
                    "name": "locale",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLocale": {
            "name": "getLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getLocale(): ?string\n  {\n    return $this->_mvc->getLocale();\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 210,
            "endLine": 213,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getLocale",
            "returns": [
                null,
                "string"
            ],
            "arguments": []
        },
        "appPath": {
            "name": "appPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function appPath($raw = false): string\n  {\n    return Mvc::getAppPath($raw);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 216,
            "endLine": 219,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "appPath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "raw",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "libPath": {
            "name": "libPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function libPath(): string\n  {\n    return Mvc::getLibPath();\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 222,
            "endLine": 225,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "libPath",
            "returns": [
                "string"
            ],
            "arguments": []
        },
        "dataPath": {
            "name": "dataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function dataPath(string $plugin = null): string\n  {\n    return Mvc::getDataPath().($plugin ? 'plugins\/'.$plugin.'\/' : '');\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 228,
            "endLine": 231,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "dataPath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "tmpPath": {
            "name": "tmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function tmpPath(string $plugin = null): string\n  {\n    return Mvc::getTmpPath($plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 234,
            "endLine": 237,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "tmpPath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "logPath": {
            "name": "logPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function logPath(string $plugin = null): string\n  {\n    return Mvc::getLogPath($plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 240,
            "endLine": 243,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "logPath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "cachePath": {
            "name": "cachePath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function cachePath(string $plugin = null): string\n  {\n    return Mvc::getCachePath($plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 246,
            "endLine": 249,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "cachePath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "contentPath": {
            "name": "contentPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function contentPath(string $plugin = null): string\n  {\n    return Mvc::getContentPath($plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 252,
            "endLine": 255,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "contentPath",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userTmpPath": {
            "name": "userTmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function userTmpPath(string $id_user = null, string $plugin = null):? string\n  {\n    return Mvc::getUserTmpPath($id_user, $plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 258,
            "endLine": 261,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "userTmpPath",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userDataPath": {
            "name": "userDataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Common.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function userDataPath(string $id_user = null, string $plugin = null):? string\n  {\n    return Mvc::getUserDataPath($id_user, $plugin);\n  }",
            "parent": false,
            "trait": "bbn\\Mvc\\Common",
            "startLine": 264,
            "endLine": 267,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "userDataPath",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "cacheInit": {
            "name": "cacheInit",
            "summary": "Initializes the cache object, must be called in __construct",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheInit(): void\n  {\n    if ( \\is_null($this->cache_engine) ){\n      $this->cache_engine = CacheCls::getEngine();\n      $this->_cache_prefix = Str::encodeFilename(str_replace('\\\\', '\/', \\get_class($this)), true).'\/';\n    }\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 27,
            "endLine": 33,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "cacheInit",
            "returns": [
                "void"
            ],
            "arguments": [],
            "doc": {
                "description": "Initializes the cache object, must be called in __construct\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Initializes the cache object, must be called in __construct\n   *\n   * @return void\n   *\/"
        },
        "cacheCheck": {
            "name": "cacheCheck",
            "summary": "Throws an exception if the cache has not been initialized",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheCheck(): void\n  {\n    if (!$this->cache_engine) {\n      throw new Exception(X::_(\"The cache object has not been initialized\"));\n    }\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 41,
            "endLine": 46,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "cacheCheck",
            "returns": [
                "void"
            ],
            "arguments": [],
            "doc": {
                "description": "Throws an exception if the cache has not been initialized\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Throws an exception if the cache has not been initialized\n   *\n   * @return void\n   *\/"
        },
        "cacheDeleteAll": {
            "name": "cacheDeleteAll",
            "summary": "Deletes all the cache related to the current class",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheDeleteAll(): self\n  {\n    $this->cacheCheck();\n    $this->cache_engine->deleteAll($this->_cache_prefix);\n    return $this;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 70,
            "endLine": 75,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "cacheDeleteAll",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Deletes all the cache related to the current class\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes all the cache related to the current class\n   *\n   * @return self\n   *\/"
        },
        "cacheDelete": {
            "name": "cacheDelete",
            "summary": "Deletes the given cache",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheDelete(string $uid, string $method = ''): self\n  {\n    $this->cacheCheck();\n    $this->cache_engine->deleteAll($this->_cache_name($uid, $method));\n    return $this;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 85,
            "endLine": 90,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "cacheDelete",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Deletes the given cache\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes the given cache\n   *\n   * @param string $uid\n   * @param string $method\n   * @return self\n   *\/"
        },
        "cacheDeleteLocale": {
            "name": "cacheDeleteLocale",
            "summary": "Deletes the given cache for a specific locale",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheDeleteLocale(string $uid, string $locale, string $method = ''): self\n  {\n    $this->cacheCheck();\n    $this->cache_engine->deleteAll($this->_cache_name($uid, $method, $locale));\n    return $this;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 101,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "cacheDeleteLocale",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "locale",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Deletes the given cache for a specific locale\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$locale"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes the given cache for a specific locale\n   *\n   * @param string $uid\n   * @param string $locale\n   * @param string $method\n   * @return self\n   *\/"
        },
        "cacheGet": {
            "name": "cacheGet",
            "summary": "Gets the cached data",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheGet(string $uid, string $method = ''): mixed\n  {\n    $this->cacheCheck();\n    return $this->cache_engine->get($this->_cache_name($uid, $method));\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 116,
            "endLine": 120,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "cacheGet",
            "returns": [
                null,
                "mixed"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the cached data\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the cached data\n   *\n   * @param string $uid\n   * @param string $method\n   * @return mixed\n   *\/"
        },
        "cacheGetLocale": {
            "name": "cacheGetLocale",
            "summary": "Gets the cached data for a specific locale",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheGetLocale(string $uid, string $locale, string $method = ''): mixed\n  {\n    $this->cacheCheck();\n    return $this->cache_engine->get($this->_cache_name($uid, $method, $locale));\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 131,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "cacheGetLocale",
            "returns": [
                null,
                "mixed"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "locale",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the cached data for a specific locale\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$locale"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the cached data for a specific locale\n   *\n   * @param string $uid\n   * @param string $locale\n   * @param string $method\n   * @return mixed\n   *\/"
        },
        "cacheSet": {
            "name": "cacheSet",
            "summary": "Sets the cache",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheSet(string $uid, string $method = '', $data = null, int $ttl = 0): self\n  {\n    $this->cacheCheck();\n    $this->cache_engine->set($this->_cache_name($uid, $method), $data, $ttl);\n    return $this;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 147,
            "endLine": 152,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "cacheSet",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets the cache\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    },
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "integer",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the cache\n   *\n   * @param string $uid\n   * @param string $method\n   * @param array|null $data\n   * @param integer $ttl\n   * @return self\n   *\/"
        },
        "cacheSetLocale": {
            "name": "cacheSetLocale",
            "summary": "Sets the cache for a specific locale",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheSetLocale(string $uid, string $locale, string $method = '', $data = null, int $ttl = 0): self\n  {\n    $this->cacheCheck();\n    $this->cache_engine->set($this->_cache_name($uid, $method, $locale), $data, $ttl);\n    return $this;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 165,
            "endLine": 170,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "shortName": "cacheSetLocale",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "locale",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 3,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 4,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets the cache for a specific locale\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$locale"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    },
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$data"
                    },
                    {
                        "tag": "param",
                        "type": "integer",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the cache for a specific locale\n   *\n   * @param string $uid\n   * @param string $locale\n   * @param string $method\n   * @param array|null $data\n   * @param integer $ttl\n   * @return self\n   *\/"
        },
        "cacheGetSet": {
            "name": "cacheGetSet",
            "summary": "Gets the cache or creates it if needs to",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheGetSet(callable $fn, string $uid, $method = '', int $ttl = 0): mixed\n  {\n    $this->cacheCheck();\n    return $this->cache_engine->getSet($fn, $this->_cache_name($uid, $method), $ttl);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 182,
            "endLine": 186,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "shortName": "cacheGetSet",
            "returns": [
                null,
                "mixed"
            ],
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "callable",
                    "type_arr": [
                        "callable"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "uid",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the cache or creates it if needs to\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "callable",
                        "name": "$fn"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    },
                    {
                        "tag": "param",
                        "type": "integer",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the cache or creates it if needs to\n   *\n   * @param callable $fn\n   * @param string $uid\n   * @param string $method\n   * @param integer $ttl\n   * @return mixed\n   *\/"
        },
        "cacheGetSetLocale": {
            "name": "cacheGetSetLocale",
            "summary": "Gets the cache for a specific locale or creates it if needs to",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheGetSetLocale(callable $fn, string $uid, string $locale, $method = '', int $ttl = 0): mixed\n  {\n    $this->cacheCheck();\n    return $this->cache_engine->getSet($fn, $this->_cache_name($uid, $method, $locale), $ttl);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 199,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 3,
            "shortName": "cacheGetSetLocale",
            "returns": [
                null,
                "mixed"
            ],
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "callable",
                    "type_arr": [
                        "callable"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "uid",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "locale",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 3,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 4,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the cache for a specific locale or creates it if needs to\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "callable",
                        "name": "$fn"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$locale"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    },
                    {
                        "tag": "param",
                        "type": "integer",
                        "name": "$ttl"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the cache for a specific locale or creates it if needs to\n   *\n   * @param callable $fn\n   * @param string $uid\n   * @param string $locale\n   * @param string $method\n   * @param integer $ttl\n   * @return mixed\n   *\/"
        },
        "cacheHas": {
            "name": "cacheHas",
            "summary": "Checks whether the cache exists and is valid",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheHas(string $uid, string $method = ''): bool\n  {\n    $this->cacheCheck();\n    return $this->cacheGet($uid, $method) ? true : false;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 213,
            "endLine": 217,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "cacheHas",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Checks whether the cache exists and is valid\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the cache exists and is valid\n   *\n   * @param string $uid\n   * @param string $method\n   * @return boolean\n   *\/"
        },
        "cacheHasLocale": {
            "name": "cacheHasLocale",
            "summary": "Checks whether the cache exists and is valid",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function cacheHasLocale(string $uid, string $locale, string $method = ''): bool\n  {\n    $this->cacheCheck();\n    return $this->cacheGetLocale($uid, $locale, $method) ? true : false;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 227,
            "endLine": 231,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "cacheHasLocale",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "locale",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Checks whether the cache exists and is valid\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$uid"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$method"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the cache exists and is valid\n   *\n   * @param string $uid\n   * @param string $method\n   * @return boolean\n   *\/"
        },
        "serializeFunction": {
            "name": "serializeFunction",
            "summary": "Transforms a function in a cacheable string",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Mvc\\Model",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Cache.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function serializeFunction(callable $function)\n  {\n    $this->cacheCheck();\n    return $this->cache_engine->serializeFunction($function);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Cache",
            "startLine": 241,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "serializeFunction",
            "returns": [],
            "arguments": [
                {
                    "name": "function",
                    "position": 0,
                    "type": "callable",
                    "type_arr": [
                        "callable"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Transforms a function in a cacheable string\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "callable",
                        "name": "$function"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Transforms a function in a cacheable string\n   *\n   * @param callable $function\n   * @return void\n   *\/"
        }
    },
    "properties": {
        "_file": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The file as being requested\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_ctrl": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The controller instance requesting the model\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|Controller"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_path": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The path as being requested\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_checkers": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "Included files\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|Controller"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_plugin": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Common",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The URL path to the plugin.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_plugin_name": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The plugin name.\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|string"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "db": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Db",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "The database connection instance\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|Db"
                    }
                ]
            },
            "parent": {
                "name": "db",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Db"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Db",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "dbClass"
                        }
                    ]
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "data": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "The data model\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|array"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "inc": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Model",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "An external object that can be filled after the object creation and can be used as a global with the function add_inc\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "\\stdClass"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "errors": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "errors",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "error": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|string"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCode": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|int"
                    }
                ]
            },
            "parent": {
                "name": "errorCode",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|int"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCodes": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": {
                "name": "errorCodes",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": "",
                "parent": false,
                "value": []
            },
            "value": []
        },
        "debug": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": {
                "name": "debug",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "boolean"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "log": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "log",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "_mvc": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Mvc\\Common",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "The MVC class from which the controller is called\n",
                "tags": [
                    {
                        "tag": "var",
                        "type": "bbn\\Mvc"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_cache_prefix": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Models\\Tts\\Cache",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "cache_engine": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Mvc\\Model"
            },
            "declaring_trait": "bbn\\Models\\Tts\\Cache",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        }
    },
    "staticProperties": [],
    "constants": null,
    "uses": {
        "bbn\\X": "X",
        "bbn\\Db": "Db",
        "bbn\\Mvc": "Mvc",
        "bbn\\Models\\Cls\\Db": "DbClass",
        "bbn\\Models\\Tts\\Cache": "Cache"
    },
    "dummyComments": [
        "\/**\n * Model View Controller Class\n *\n *\n * This class will route a request to the according model and\/or view through its controller.\n * A model and a view can be automatically associated if located in the same directory branch with the same name than the controller in their respective locations\n * A view can be directly imported in the controller through this very class\n *\n * @author Thomas Nabet <thomas.nabet@gmail.com>\n * @copyright BBN Solutions\n * @since Apr 4, 2011, 23:23:55 +0000\n * @category  MVC\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n * @version 0.2r89\n * @todo Merge the output objects and combine JS strings.\n * @todo Stop to rely only on sqlite and offer file-based or any db-based solution.\n * @todo Look into the check function and divide it\n *\/"
    ],
    "summary": "Model View Controller Class",
    "description": "This class will route a request to the according model and\/or view through its controller.\nA model and a view can be automatically associated if located in the same directory branch with the same name than the controller in their respective locations\nA view can be directly imported in the controller through this very class",
    "description_parts": [
        {
            "type": "text",
            "content": "This class will route a request to the according model and\/or view through its controller.\nA model and a view can be automatically associated if located in the same directory branch with the same name than the controller in their respective locations\nA view can be directly imported in the controller through this very class"
        }
    ]
}