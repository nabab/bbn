{
    "doc": {
        "description": "",
        "tags": {
            "category": "MVC",
            "package": "MVC",
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "link": "https:\/\/bbn.io\/php\/doc\/bbn\/mvc\/router"
        }
    },
    "name": "bbn\\Mvc\\Router",
    "namespace": true,
    "traits": [
        "bbn\\Mvc\\Common",
        "bbn\\Models\\Tts\\Retriever"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Router.php",
    "startLine": 28,
    "endLine": 1081,
    "contentConstructor": {
        "file": "bbn\\Mvc\\Router",
        "returns": null
    },
    "methods": {
        "isMode": {
            "name": "isMode",
            "summary": "Checks whether The given string is a valid mode.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($mode)\n  {\n    return (bool)\\in_array($mode, self::$_modes, true);\n  }",
            "startLine": 132,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "mode",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "parse": {
            "name": "parse",
            "summary": "Removes trailing slashes.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n    while (strpos($path, '\/\/') !== false){\n      $path = str_replace('\/\/', '\/', $path);\n    }\n\n    \/\/$path = trim($path, '\/\\\\ ');\n\n    return $path ?: '.';\n  }",
            "startLine": 145,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "Router constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Mvc $mvc, array $routes = [])\n  {\n    self::retrieverInit($this);\n    $this->_mvc    = $mvc;\n    $this->_routes = $routes;\n    $this->_root   = $this->_mvc->appPath();\n    $this->_registerLocaleDomain();\n  }",
            "startLine": 163,
            "endLine": 170,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "mvc",
                    "position": 0,
                    "type": "bbn\\Mvc",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "routes",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "reset": {
            "name": "reset",
            "summary": "Resets the full path in the mvc\/mode of an external app (plugin).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->alt_root = false;\n    return $this;\n  }",
            "startLine": 178,
            "endLine": 182,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": []
        },
        "setPrepath": {
            "name": "setPrepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n    if (!$this->checkPath($path)) {\n      throw new Exception(X::_(\"The prepath $path is not valid\"));\n    }\n\n    $this->_prepath = $path;\n    if (substr($this->_prepath, -1) !== '\/') {\n      $this->_prepath = $this->_prepath . '\/';\n    }\n\n    if ($this->_mode) {\n      $this->route($this->_mvc->getUrl(), $this->_mode);\n    }\n\n    return true;\n  }",
            "startLine": 189,
            "endLine": 205,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPrepath": {
            "name": "getPrepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($with_slash = 1)\n  {\n    if (!empty($this->_prepath)) {\n      return $with_slash ? $this->_prepath : substr($this->_prepath, 0, -1);\n    }\n\n    return '';\n  }",
            "startLine": 211,
            "endLine": 218,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "with_slash",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": "",
                    "description": "slash"
                }
            ]
        },
        "getLocaleDomain": {
            "name": "getLocaleDomain",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return $this->_textdomains[$plugin ?: 'main'] ?? null;\n  }",
            "startLine": 225,
            "endLine": 228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getPluginFromComponent": {
            "name": "getPluginFromComponent",
            "summary": "Retrieves the plugin's name from the component's name if any.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n    foreach ($this->getPlugins() as $n => $p) {\n      if (X::indexOf($name, $n . '-') === 0) {\n        return $p;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 237,
            "endLine": 246,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "routeComponent": {
            "name": "routeComponent",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n    if ($p = $this->getPluginFromComponent($name)) {\n      $root       = $p['path'] . 'src\/';\n      $prefix     = $p['name'] . '-';\n      $plugin     = $p['name'];\n      $plugin_url = $p['url'];\n    }\n    else {\n      $root       = $this->appPath();\n      $prefix     = (defined('BBN_APP_PREFIX') ? BBN_APP_PREFIX : BBN_APP_NAME) . '-';\n      if (X::indexOf($name, $prefix) !== 0) {\n        $prefix = substr($name, 0, strpos($name, '-') + 1);\n      }\n      $plugin     = null;\n      $plugin_url = null;\n    }\n\n    if (!empty($root) && (X::indexOf($name, $prefix) === 0)) {\n      $local_name = substr($name, strlen($prefix));\n      $parts      = explode('-', $local_name);\n      $root      .= 'components\/';\n      $path       = implode('\/', $parts);\n      $dir        = $root . $path;\n      $this->_registerLocaleDomain($plugin);\n\n      if (is_dir($dir)) {\n        $res   = [\n          'js' => [],\n          'html' => [],\n          'css' => [],\n        ];\n        $fpath = $root . $path . '\/' . end($parts);\n        foreach ($res as $mode => $c) {\n          foreach (self::$_filetypes[$mode] as $f) {\n            if (is_file($fpath . '.' . $f)) {\n              $res[$mode] = $this->_set_known(\n                [\n                'file' => $fpath . '.' . $f,\n                'path' => str_replace('-', '\/', $local_name),\n                'plugin' => $plugin_url,\n                'component' => true,\n                'ext' => $f,\n                'mode' => $mode,\n                'i18n' => $mode === 'js' ? $this->_find_translation($plugin ?? null) : null,\n                ], true\n              );\n              break;\n            }\n          }\n        }\n\n        return $res;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 253,
            "endLine": 310,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "routeCustomPlugin": {
            "name": "routeCustomPlugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, $plugin)\n  {\n    if ($root = $this->_get_custom_root($mode, $plugin)) {\n      foreach (self::$_filetypes[$mode] as $t) {\n        if (is_file($root . $path . '.' . $t)) {\n          $file = $root . $path . '.' . $t;\n          break;\n        }\n      }\n\n      if (!empty($file)) {\n        return $this->_set_known(\n          [\n          'file' => $file,\n          'path' => $path,\n          'ext' => $t,\n          'plugin' => $plugin,\n          'mode' => $mode,\n          'i18n' => $t === 'js' ? $this->_find_translation($plugin ?? null) : null,\n          ], true\n        );\n      }\n    }\n\n    return null;\n  }",
            "startLine": 319,
            "endLine": 344,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "routeSubplugin": {
            "name": "routeSubplugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, $plugin, $subplugin)\n  {\n    if ($root = $this->_get_subplugin_root($mode, $plugin, $subplugin)) {\n      foreach (self::$_filetypes[$mode] as $t) {\n        if (is_file($root . $path . '.' . $t)) {\n          $file = $root . $path . '.' . $t;\n          break;\n        }\n      }\n\n      if (!empty($file)) {\n        return $this->_set_known(\n          [\n          'file' => $file,\n          'path' => $path,\n          'ext' => $t,\n          'plugin' => $plugin,\n          'mode' => $mode,\n          'i18n' => $t === 'js' ? $this->_find_translation($plugin ?? null) : null,\n          ], false\n        );\n      }\n    }\n\n    return null;\n  }",
            "startLine": 354,
            "endLine": 379,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subplugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "route": {
            "name": "route",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode)\n  {\n    if (self::isMode($mode)) {\n      \/\/ If there is a prepath defined we prepend it to the path\n      if ($this->_prepath && (strpos($path, '\/') !== 0) && (strpos($path, $this->_prepath) !== 0)) {\n        $path = $this->_prepath . $path;\n      }\n\n      \/\/ We only try to retrieve a file path through a whole URL for controllers\n      if (\\in_array($mode, self::$_controllers, true)) {\n        $this->_mode = $mode;\n        return $this->_find_controller($path, $mode);\n      }\n\n      return $this->_find_mv($path, $mode);\n    }\n\n    return null;\n  }",
            "startLine": 388,
            "endLine": 406,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "fetchDir": {
            "name": "fetchDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode)\n  {\n    \/\/ Only for views and models\n    if (self::isMode($mode) && !\\in_array($mode, self::$_controllers)) {\n      \/\/ If there is a prepath defined we prepend it to the path\n      if ($this->_prepath\n          && (strpos($path, '\/') !== 0)\n          && (strpos($path, $this->_prepath) !== 0)\n      ) {\n        $path = $this->_prepath . $path;\n      }\n\n      \/** @var string $root Where the files will be searched for by default *\/\n      $root   = $this->_get_root($mode);\n      $plugin = $this->_find_plugin($path);\n      if ($plugin && ($alt_path = $plugin['url'])) {\n        $alt_root = $this->_get_alt_root($mode, $alt_path);\n      }\n      elseif ($alt_root = $this->_get_alt_root($mode)) {\n        $alt_path = $this->alt_root;\n      }\n\n      $dir = false;\n      foreach (self::$_filetypes[$mode] as $t) {\n        $dir1 = self::parse($root . $path);\n        if (is_dir($dir1) && (strpos($dir1, $root) === 0)) {\n          $dir = $dir1;\n        }\n        elseif (!empty($alt_path) && !empty($alt_root) && ($dir2 = self::parse($alt_root . substr($path, \\strlen($alt_path) + 1))) && (strpos($dir2, $alt_root) === 0)\n            && is_dir($dir2)\n        ) {\n          $dir = $dir2;\n        }\n\n        if ($dir) {\n          $res   = [];\n          $files = bbn\\File\\Dir::getFiles($dir);\n          foreach ($files as $f) {\n            if (\\in_array(bbn\\Str::fileExt($f), self::$_filetypes[$mode], true)) {\n              $res[] = $path . '\/' . bbn\\Str::fileExt($f, true)[0];\n            }\n          }\n\n          return $res;\n        }\n      }\n    }\n\n    return null;\n  }",
            "startLine": 414,
            "endLine": 463,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getRoutes": {
            "name": "getRoutes",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_routes;\n  }",
            "startLine": 469,
            "endLine": 472,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (bbn\\Mvc::getDebug()) {\n      $ar = \\func_get_args();\n      bbn\\X::log(\\count($ar) > 1 ? $ar : $ar[0], 'mvc');\n    }\n  }",
            "startLine": 61,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "pluginDataPath": {
            "name": "pluginDataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    if (($this->_plugin || $plugin) && \\defined('BBN_DATA_PATH')) {\n      return BBN_DATA_PATH.'plugins\/'.$this->pluginName($plugin ?: $this->_plugin).'\/';\n    }\n\n    return null;\n  }",
            "startLine": 70,
            "endLine": 77,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getPlugins": {
            "name": "getPlugins",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mvc->getPlugins();\n  }",
            "startLine": 80,
            "endLine": 83,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "hasPlugin": {
            "name": "hasPlugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin)\n  {\n    return $this->_mvc->hasPlugin($plugin);\n  }",
            "startLine": 86,
            "endLine": 89,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isPlugin": {
            "name": "isPlugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return $this->_mvc->isPlugin($plugin ?: $this->pluginName($this->_plugin));\n  }",
            "startLine": 92,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "pluginPath": {
            "name": "pluginPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL, $raw = false)\n  {\n    return $this->_mvc->pluginPath($plugin ?: $this->pluginName($this->_plugin), $raw);\n  }",
            "startLine": 98,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "raw",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "pluginUrl": {
            "name": "pluginUrl",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return $this->_mvc->pluginUrl($plugin ?: $this->pluginName($this->_plugin));\n  }",
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "pluginName": {
            "name": "pluginName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path = NULL)\n  {\n    return $this->_mvc->pluginName($path ?: $this->_path);\n  }",
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getCookie": {
            "name": "getCookie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mvc->getCookie();\n  }",
            "startLine": 116,
            "endLine": 119,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAliases": {
            "name": "getAliases",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mvc->getRoutes('alias');\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getRoute": {
            "name": "getRoute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, $root = NULL)\n  {\n    return $this->_mvc->getRoute($path, $mode, $root);\n  }",
            "startLine": 134,
            "endLine": 137,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "root",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setLocale": {
            "name": "setLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($locale)\n  {\n    return $this->_mvc->setLocale($locale);\n  }",
            "startLine": 140,
            "endLine": 143,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "locale",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLocale": {
            "name": "getLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mvc->getLocale();\n  }",
            "startLine": 146,
            "endLine": 149,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "appPath": {
            "name": "appPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($raw = false)\n  {\n    return \\bbn\\Mvc::getAppPath($raw);\n  }",
            "startLine": 152,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "raw",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "libPath": {
            "name": "libPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return \\bbn\\Mvc::getLibPath();\n  }",
            "startLine": 158,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "dataPath": {
            "name": "dataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getDataPath().($plugin ? 'plugins\/'.$plugin.'\/' : '');\n  }",
            "startLine": 164,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "tmpPath": {
            "name": "tmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getTmpPath($plugin);\n  }",
            "startLine": 170,
            "endLine": 173,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "logPath": {
            "name": "logPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getLogPath($plugin);\n  }",
            "startLine": 176,
            "endLine": 179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "cachePath": {
            "name": "cachePath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getCachePath($plugin);\n  }",
            "startLine": 182,
            "endLine": 185,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "contentPath": {
            "name": "contentPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getContentPath($plugin);\n  }",
            "startLine": 188,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userTmpPath": {
            "name": "userTmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n    return \\bbn\\Mvc::getUserTmpPath($id_user, $plugin);\n  }",
            "startLine": 194,
            "endLine": 197,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userDataPath": {
            "name": "userDataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n    return \\bbn\\Mvc::getUserDataPath($id_user, $plugin);\n  }",
            "startLine": 200,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getInstance": {
            "name": "getInstance",
            "summary": "Returns the instance of the singleton or null.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$retriever_instance;\n  }",
            "startLine": 44,
            "endLine": 47,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "retrieverExists": {
            "name": "retrieverExists",
            "summary": "Returns true if an instance as been initiated.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Router",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$retriever_exists;\n  }",
            "startLine": 54,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_def": "default",
        "_controllers": [
            "cli",
            "dom",
            "content",
            "public",
            "private"
        ],
        "_filetypes": {
            "model": [
                "php"
            ],
            "html": [
                "html",
                "php"
            ],
            "js": [
                "js"
            ],
            "css": [
                "css",
                "less",
                "scss"
            ]
        },
        "_modes": [
            "image",
            "file",
            "cli",
            "private",
            "dom",
            "public",
            "model",
            "html",
            "js",
            "css"
        ],
        "_known": {
            "cli": [],
            "dom": [],
            "public": {
                "cdn\/publishing\/home": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/mvc\/public\/publishing\/home.php",
                    "path": "cdn\/publishing\/home",
                    "root": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/",
                    "request": "cdn\/publishing\/gen-php",
                    "mode": "public",
                    "plugin": "cdn",
                    "args": [
                        "gen-php"
                    ],
                    "checkers": [
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/src\/mvc\/public\/_ctrl.php",
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/mvc\/public\/_ctrl.php"
                    ]
                }
            },
            "private": [],
            "model": {
                "core\/_definitions": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-core\/src\/mvc\/model\/_definitions.php",
                    "path": "core\/_definitions",
                    "plugin": "core",
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": [
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-core\/\/src\/mvc\/model\/_model.php"
                    ]
                },
                "_init": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/src\/mvc\/model\/_init.php",
                    "path": "_init",
                    "plugin": false,
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": []
                },
                "cdn\/publishing\/gen-php": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/src\/mvc\/model\/publishing\/gen-php.php",
                    "path": "cdn\/publishing\/gen-php",
                    "plugin": "cdn",
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": []
                }
            },
            "html": [],
            "js": [],
            "css": [],
            "component": []
        },
        "retriever_instance": {},
        "retriever_exists": true
    },
    "constants": null,
    "numMethods": 38,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 7,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Mvc\\Common",
        "bbn\\Models\\Tts\\Retriever"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_def": "default",
        "_controllers": [
            "cli",
            "dom",
            "content",
            "public",
            "private"
        ],
        "_filetypes": {
            "model": [
                "php"
            ],
            "html": [
                "html",
                "php"
            ],
            "js": [
                "js"
            ],
            "css": [
                "css",
                "less",
                "scss"
            ]
        },
        "_modes": [
            "image",
            "file",
            "cli",
            "private",
            "dom",
            "public",
            "model",
            "html",
            "js",
            "css"
        ],
        "_known": {
            "cli": [],
            "dom": [],
            "public": {
                "cdn\/publishing\/home": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/mvc\/public\/publishing\/home.php",
                    "path": "cdn\/publishing\/home",
                    "root": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/",
                    "request": "cdn\/publishing\/gen-php",
                    "mode": "public",
                    "plugin": "cdn",
                    "args": [
                        "gen-php"
                    ],
                    "checkers": [
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/src\/mvc\/public\/_ctrl.php",
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/\/src\/mvc\/public\/_ctrl.php"
                    ]
                }
            },
            "private": [],
            "model": {
                "core\/_definitions": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-core\/src\/mvc\/model\/_definitions.php",
                    "path": "core\/_definitions",
                    "plugin": "core",
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": [
                        "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-core\/\/src\/mvc\/model\/_model.php"
                    ]
                },
                "_init": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/src\/mvc\/model\/_init.php",
                    "path": "_init",
                    "plugin": false,
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": []
                },
                "cdn\/publishing\/gen-php": {
                    "file": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/appui-cdn\/src\/mvc\/model\/publishing\/gen-php.php",
                    "path": "cdn\/publishing\/gen-php",
                    "plugin": "cdn",
                    "ext": "php",
                    "mode": "model",
                    "i18n": null,
                    "checkers": []
                }
            },
            "html": [],
            "js": [],
            "css": [],
            "component": []
        },
        "retriever_instance": {},
        "retriever_exists": true,
        "_textdomains": [],
        "_mode": null,
        "_prepath": null,
        "_root": null,
        "alt_root": false,
        "_routes": [],
        "_mvc": null,
        "_plugin": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Mvc",
    "shortName": "Router",
    "summary": ""
}