{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Mvc\\Environment",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Mvc\/Environment.php",
    "startLine": 23,
    "endLine": 693,
    "contentConstructor": {
        "file": "bbn\\Mvc\\Environment",
        "returns": null
    },
    "methods": {
        "detectLanguage": {
            "name": "detectLanguage",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $httpAcceptLanguageHeader = self::_getHttpAcceptLanguageHeader();\n\n    if ($httpAcceptLanguageHeader == null) {\n      return [];\n    }\n\n    $locales = self::_getWeightedLocales($httpAcceptLanguageHeader);\n\n    $sortedLocales = self::_sortLocalesByWeight($locales);\n\n    return array_map(\n      function ($weightedLocale) {\n        return $weightedLocale['locale'];\n      }, $sortedLocales\n    );\n  }",
            "startLine": 79,
            "endLine": 96,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getInput": {
            "name": "getInput",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$_input;\n  }",
            "startLine": 99,
            "endLine": 102,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "setMode": {
            "name": "setMode",
            "summary": "Change the output mode (content-type)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($mode)\n  {\n    if (Router::isMode($mode)) {\n      $this->_mode = $mode;\n    }\n\n    return $this->_mode;\n  }",
            "startLine": 111,
            "endLine": 118,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "mode",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "Environment constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!self::$_initiated) {\n      self::_initialize();\n      $this->_init();\n    }\n  }",
            "startLine": 186,
            "endLine": 192,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "setLocale": {
            "name": "setLocale",
            "summary": "Sets the current locale.",
            "description": "If no parameter is provided and the constant BBN_LANG and BBN_LOCALE are not defined\nthe function will also define those constants.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>If no parameter is provided and the constant BBN_LANG and BBN_LOCALE are not defined\nthe function will also define those constants.<\/p>"
                }
            ],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($locale = NULL)\n  {\n    $locales = [];\n    if (empty($locale)) {\n      array_push(\n        $locales,\n        'en-EN.utf8',\n        'en_EN.utf8',\n        'en-EN',\n        'en-US.utf8',\n        'en_US.utf8',\n        'en-US',\n        'en',\n        'en_US'\n      );\n\n      if (!defined('BBN_LOCALE')) {\n        \/\/ No user detection for CLI: default language\n        if ($this->_mode === 'cli') {\n          if (defined('BBN_LANG')) {\n            $lang = BBN_LANG;\n          }\n        }\n        else {\n          $user_locales = self::detectLanguage();\n          if (!defined('BBN_LANG') && $user_locales) {\n            if (strpos($user_locales[0], '-')) {\n              if ($lang = X::split($user_locales[0], '-')[0]) {\n                define('BBN_LANG', $lang);\n              }\n            }\n            elseif (strpos($user_locales[0], '_')) {\n              if ($lang = X::split($user_locales[0], '_')[0]) {\n                define('BBN_LANG', $lang);\n              }\n            }\n            elseif ($user_locales[0]) {\n              define('BBN_LANG', $user_locales[0]);\n            }\n          }\n\n          if (!defined('BBN_LANG')) {\n            throw new \\Exception(\"Impossible to determine the language\");\n          }\n\n          $lang = BBN_LANG;\n        }\n\n        if (isset($lang)) {\n          array_unshift(\n            $locales,\n            $lang . '-' . strtoupper($lang) . '.utf8',\n            $lang . '_' . strtoupper($lang) . '.utf8',\n            $lang . '-' . strtoupper($lang),\n            $lang\n          );\n\n          if (!empty($user_locales)) {\n            array_unshift($locales, ...$user_locales);\n          }\n        }\n      }\n    }\n    elseif (!strpos($locale, '-') && !strpos($locale, '_')) {\n      if ($locale === 'en') {\n        array_unshift(\n          $locales,\n          'en_US.utf8',\n          'en-US.utf8',\n          'en_US',\n          'en-US'\n        );\n      }\n\n      array_unshift(\n        $locales,\n        strtolower($locale) . '-' . strtoupper($locale) . '.utf8',\n        strtolower($locale) . '_' . strtoupper($locale) . '.utf8',\n        strtolower($locale) . '-' . strtoupper($locale),\n        strtolower($locale)\n      );\n    }\n    else {\n      $locales[] = $locale;\n    }\n\n    if ($confirmed = $this->_tryLocales($locales)) {\n      if (!defined('BBN_LOCALE')) {\n        define('BBN_LOCALE', $confirmed);\n      }\n\n      $this->_locale = $confirmed;\n      if (!isset($lang)) {\n        $lang = X::split(X::split($this->_locale, '-')[0], '_')[0];\n      }\n\n      putenv(\"LANG=\".$this->_locale);\n      setlocale(LC_MESSAGES, $this->_locale);\n    }\n    else {\n      throw new \\Exception(\"Impossible to find a corresponding locale on this server for this app\");\n    }\n  }",
            "startLine": 204,
            "endLine": 306,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "locale",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getLocale": {
            "name": "getLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_locale;\n  }",
            "startLine": 312,
            "endLine": 315,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "setPrepath": {
            "name": "setPrepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n    $path = X::removeEmpty(explode('\/', $path));\n    if (\\count($path)) {\n      foreach ($path as $p) {\n        if (!empty($this->_params[0]) && $this->_params[0] === $p) {\n          array_shift($this->_params);\n          $this->_url = substr($this->_url, \\strlen($p) + 1);\n        } else {\n          throw new \\Exception(\n            X::_(\"The prepath $p doesn't seem to correspond to the current path {$this->_url}\")\n          );\n        }\n      }\n    }\n\n    return true;\n  }",
            "startLine": 322,
            "endLine": 339,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isCli": {
            "name": "isCli",
            "summary": "Returns true if called from CLI\/Cron, false otherwise",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_cli)) {\n      $this->_cli = X::isCli();\n      if ($this->_cli) {\n        $opt = getopt('', ['cli']);\n        if (isset($opt['cli'])) {\n          $this->_cli = 'direct';\n        }\n      }\n    }\n\n    return $this->_cli;\n  }",
            "startLine": 347,
            "endLine": 360,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getUrl": {
            "name": "getUrl",
            "summary": "Get the request url.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_url;\n  }",
            "startLine": 368,
            "endLine": 371,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "simulate": {
            "name": "simulate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url, $post = false, $arguments = NULL)\n  {\n    unset($this->_params);\n    $this->setParams($url . (empty($arguments) ? '' : '\/' . implode('\/', $arguments)));\n    $this->_post = $post ?: null;\n    $this->_init();\n    $this->_url = $url;\n  }",
            "startLine": 380,
            "endLine": 387,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "post",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getMode": {
            "name": "getMode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mode;\n  }",
            "startLine": 393,
            "endLine": 396,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getCli": {
            "name": "getCli",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    global $argv;\n    if ($this->isCli()) {\n      if ($this->isCli() === 'direct') {\n        array_shift($argv);\n      }\n\n      $this->_post = [];\n      if (isset($argv[1])) {\n        $this->setParams($argv[1]);\n        if (isset($argv[2])) {\n          if (!isset($argv[3]) && \\bbn\\Str::isJson($argv[2])) {\n            $this->_post = json_decode($argv[2], 1);\n          } else {\n            for ($i = 2, $iMax = \\count($argv); $i < $iMax; $i++) {\n              $this->_post[] = $argv[$i];\n            }\n          }\n        }\n      }\n\n      return $this->_post;\n    }\n\n    return null;\n  }",
            "startLine": 403,
            "endLine": 429,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getGet": {
            "name": "getGet",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_get)) {\n      $this->_get = [];\n      if (\\count($_GET) > 0) {\n        $this->_get = array_map(\n          function ($a) {\n            return bbn\\Str::correctTypes($a);\n          }, $_GET\n        );\n      }\n    }\n\n    return $this->_get;\n  }",
            "startLine": 435,
            "endLine": 449,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getPost": {
            "name": "getPost",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_post)) {\n      if (self::$_input && \\bbn\\Str::isJson(self::$_input)) {\n        $this->_post = json_decode(self::$_input, 1);\n      }\n      elseif (!empty($_POST)) {\n        $this->_post = $_POST;\n      }\n\n      if (!$this->_post) {\n        $this->_post = [];\n      }\n      else {\n        $this->_has_post = true;\n        $this->_post     = bbn\\Str::correctTypes($this->_post);\n        foreach ($this->_post as $k => $v) {\n          if (X::indexOf($k, '_bbn_') === 0) {\n            if (!defined(strtoupper(substr($k, 1)))) {\n              define(strtoupper(substr($k, 1)), $v);\n            }\n\n            unset($this->_post[$k]);\n          }\n        }\n      }\n    }\n\n    return $this->_post;\n  }",
            "startLine": 455,
            "endLine": 484,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getFiles": {
            "name": "getFiles",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_files)) {\n      $this->_files = [];\n      \/\/ Rebuilding the $_FILES array into $this->_files in a more logical structure\n      if (\\count($_FILES) > 0) {\n        \/\/ Some devices send multiple files with the same name\n        $names = [];\n        foreach ($_FILES as $n => $f) {\n          if (\\is_array($f['name'])) {\n            $this->_files[$n] = [];\n            foreach ($f['name'] as $i => $v) {\n              while (\\in_array($v, $names, true)) {\n                if (!isset($j)) {\n                  $j = 0;\n                }\n\n                $j++;\n                $file = bbn\\Str::fileExt($f['name'][$i], true);\n                $v    = $file[0] . '_' . $j . '.' . $file[1];\n              }\n\n              $this->_files[$n][] = [\n                'name' => $v,\n                'tmp_name' => $f['tmp_name'][$i],\n                'type' => $f['type'][$i],\n                'error' => $f['error'][$i],\n                'size' => $f['size'][$i],\n              ];\n              $names[]            = $v;\n            }\n          } else {\n            while (\\in_array($f['name'], $names, true)) {\n              if (!isset($jj)) {\n                $jj = 0;\n              }\n\n              $jj++;\n              $file       = bbn\\Str::fileExt($f['name'], true);\n              $f['name']  = $file[0] . '_' . $jj . '.' . $file[1];\n            }\n\n            $this->_files[$n] = $f;\n            $names[] = $f['name'];\n          }\n        }\n      }\n\n      \/* @todo Maybe something for managing PUT requests\n      else if (!empty(self::$_input) && !bbn\\Str::isJson(self::$_input)) {\n        $this->_files[] = [\n          'name' => $v,\n          'tmp_name' => $f['tmp_name'][$i],\n          'type' => $f['type'][$i],\n          'error' => $f['error'][$i],\n          'size' => $f['size'][$i],\n        ];\n      }\n      *\/\n    }\n\n    return $this->_files;\n  }",
            "startLine": 490,
            "endLine": 552,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getParams": {
            "name": "getParams",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_params;\n  }",
            "startLine": 558,
            "endLine": 561,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getRequest": {
            "name": "getRequest",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc\\Environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (self::$_initiated) {\n      return $this->_url;\n    }\n\n    return null;\n  }",
            "startLine": 567,
            "endLine": 574,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_initiated": true,
        "_input": "{\"_bbn\":\"public\",\"_bbn_token\":\"uxHAVydr5rut8ds0FT\"}"
    },
    "constants": null,
    "numMethods": 17,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 2,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_initiated": false,
        "_input": null,
        "_has_post": false,
        "_params": null,
        "_mode": null,
        "_url": null,
        "_post": null,
        "_get": null,
        "_files": null,
        "_locale": null,
        "cli": null,
        "new_url": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Mvc",
    "shortName": "Environment",
    "summary": ""
}