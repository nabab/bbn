{
    "doc": {
        "description": "Class dealing with date manipulation\nexamples: test\/loredana\/time\n\n",
        "tags": {
            "copyright": "BBN Solutions",
            "category": "Time and Date",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT"
        }
    },
    "name": "bbn\\Time",
    "namespace": true,
    "realName": "Time",
    "realNamespace": "bbn",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Time.php",
    "startLine": 16,
    "endLine": 235,
    "numMethods": 24,
    "numProperties": 8,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "time": null,
        "interval": null,
        "errors": [],
        "error": false,
        "errorCode": false,
        "errorCodes": [],
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn",
    "shortName": "Time",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct($t)\n  {\n    $this->time = new \\dateTime($t);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 21,
            "endLine": 24,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "t",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getTime": {
            "name": "getTime",
            "summary": "return the property $this->time",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getTime()\n  {\n    return $this->time;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 31,
            "endLine": 34,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getTime",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "return the property $this->time\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * return the property $this->time\n   *\n   * @return void\n   *\/"
        },
        "setInterval": {
            "name": "setInterval",
            "summary": "Define the property $interval instantiating the given $interval to the class DateInterval",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function setInterval(string $interval)\n  {\n    \/\/http:\/\/php.net\/manual\/en\/dateinterval.construct.php *\/\n    $this->interval = new \\DateInterval($interval);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 43,
            "endLine": 47,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setInterval",
            "returns": [],
            "arguments": [
                {
                    "name": "interval",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "allowed http:\/\/php.net\/manual\/en\/dateinterval.construct.php"
                }
            ],
            "doc": {
                "description": "Define the property $interval instantiating the given $interval to the class DateInterval\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$interval",
                        "description": "allowed http:\/\/php.net\/manual\/en\/dateinterval.construct.php"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Define the property $interval instantiating the given $interval to the class DateInterval \n   * \n   *\n   * @param string $interval allowed http:\/\/php.net\/manual\/en\/dateinterval.construct.php\n   * @return void\n   *\/"
        },
        "getInterval": {
            "name": "getInterval",
            "summary": "Return the property $interval if it is set",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function getInterval(string $interval = '')\n  {\n    if ( !empty($interval) ){\n      $this->interval = new \\DateInterval($interval);\n      return $this->interval;\n    }\n    else {\n      return $this->interval;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 55,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getInterval",
            "returns": [],
            "arguments": [
                {
                    "name": "interval",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return the property $interval if it is set\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$interval"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return the property $interval if it is set\n   * \n   * @param string $interval\n   * @return void\n   *\/"
        },
        "format": {
            "name": "format",
            "summary": "return the date in the given $format of in 'Y-m-d H:i:s' format if no argument is given to the function",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function format($format = '')\n  {\n    if ( !empty($format) ){\n      return $this->time->format($format);\n    }\n    else { \n      return $this->time->format('Y-m-d H:i:s');\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 72,
            "endLine": 80,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "format",
            "returns": [],
            "arguments": [
                {
                    "name": "format",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "return the date in the given $format of in 'Y-m-d H:i:s' format if no argument is given to the function\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$format"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * return the date in the given $format of in 'Y-m-d H:i:s' format if no argument is given to the function\n   *\n   * @param string $format\n   * @return void\n   *\/"
        },
        "getYear": {
            "name": "getYear",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function getYear()\n  {\n    return $this->time->format('Y');\n  }",
            "parent": false,
            "trait": false,
            "startLine": 81,
            "endLine": 84,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getYear",
            "returns": [],
            "arguments": []
        },
        "getMonth": {
            "name": "getMonth",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function getMonth()\n  {\n    return $this->time->format('m');\n  }",
            "parent": false,
            "trait": false,
            "startLine": 86,
            "endLine": 89,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMonth",
            "returns": [],
            "arguments": []
        },
        "compare": {
            "name": "compare",
            "summary": "Compares two dates",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function compare($date, $comparator)\n  {\n    \/\/check if the argument $date is an instance of this class\n    if ( $date instanceof $this){\n      $tmp = $date;\n    }\n    else {\n      $tmp = new \\bbn\\Time($date);\n    }\n    switch ( $comparator ){\n      case $comparator === '>':  \n        return $this->getTime() > $tmp->getTime(); \n        break;\n      case $comparator === '>=':  \n        return $this->getTime() >= $tmp->getTime(); \n        break;\n      case $comparator === '<':  \n        return $this->getTime() < $tmp->getTime(); \n        break;\n      case $comparator === '<=':  \n        return $this->getTime() <= $tmp->getTime(); \n        break;\n      case $comparator === '=':  \n        return $this->getTime() == $tmp->getTime(); \n        break;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 98,
            "endLine": 124,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "compare",
            "returns": [],
            "arguments": [
                {
                    "name": "date",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "the string of the date to compare or an object of this class"
                },
                {
                    "name": "comparator",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "allowed comparators '>','>=', '<','<=', '='"
                }
            ],
            "doc": {
                "description": "Compares two dates\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "String|Object",
                        "name": "$date",
                        "description": "the string of the date to compare or an object of this class"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$comparator",
                        "description": "allowed comparators '>','>=', '<','<=', '='"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Compares two dates\n   *\n   * @param String|Object $date the string of the date to compare or an object of this class\n   * @param string $comparator allowed comparators '>','>=', '<','<=', '='\n   * @return Boolean\n   *\/"
        },
        "isBefore": {
            "name": "isBefore",
            "summary": "Return if $this->time is before of the given $date",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isBefore($date)\n  {\n    \/\/check if the argument $date is an instance of this class\n    if ( $date instanceof $this){\n      $tmp = $date;\n    }\n    else {\n      $tmp = new \\bbn\\Time($date);\n    }\n    return $this->getTime() < $tmp->getTime(); \n  }",
            "parent": false,
            "trait": false,
            "startLine": 132,
            "endLine": 142,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isBefore",
            "returns": [],
            "arguments": [
                {
                    "name": "date",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "the string of the date to compare or an object of this class"
                }
            ],
            "doc": {
                "description": "Return if $this->time is before of the given $date\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "String|Object",
                        "name": "$date",
                        "description": "the string of the date to compare or an object of this class"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return if $this->time is before of the given $date\n   *\n   * @param String|Object $date the string of the date to compare or an object of this class\n   * @return boolean\n   *\/"
        },
        "isAfter": {
            "name": "isAfter",
            "summary": "Return if $this->time is after of the given $date",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isAfter($date)\n  {\n    \/\/check if the argument $date is an instance of this class\n    if ( $date instanceof $this){\n      $tmp = $date;\n    }\n    else {\n      $tmp = new \\bbn\\Time($date);\n    }\n    return $this->getTime() > $tmp->getTime(); \n  }",
            "parent": false,
            "trait": false,
            "startLine": 151,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isAfter",
            "returns": [],
            "arguments": [
                {
                    "name": "date",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "the string of the date to compare or an object of this class"
                }
            ],
            "doc": {
                "description": "Return if $this->time is after of the given $date\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "String|Object",
                        "name": "$date",
                        "description": "the string of the date to compare or an object of this class"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return if $this->time is after of the given $date\n   *\n   * @param String|Object $date the string of the date to compare or an object of this class\n   * @return boolean\n   *\/"
        },
        "isSame": {
            "name": "isSame",
            "summary": "Return if $this->time is the same of the given $date",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isSame($date)\n  {\n    \/\/check if the argument $date is an instance of this class\n    if ( $date instanceof $this){\n      $tmp = $date;\n    }\n    else {\n      $tmp = new \\bbn\\Time($date);\n    }\n    return $this->getTime() == $tmp->getTime(); \n  }",
            "parent": false,
            "trait": false,
            "startLine": 170,
            "endLine": 180,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isSame",
            "returns": [],
            "arguments": [
                {
                    "name": "date",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "the string of the date to compare or an object of this class"
                }
            ],
            "doc": {
                "description": "Return if $this->time is the same of the given $date\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "String|Object",
                        "name": "$date",
                        "description": "the string of the date to compare or an object of this class"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return if $this->time is the same of the given $date\n   *\n   * @param String|Object $date the string of the date to compare or an object of this class\n   * @return boolean\n   *\/"
        },
        "add": {
            "name": "add",
            "summary": "Add an the given $interval to $this->time and return a reference to the original object",
            "description": "If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'",
            "description_parts": [
                {
                    "type": "text",
                    "content": "If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'"
                }
            ],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function add(string $interval, $format = ''){\n    $tmp  = new \\bbn\\Time($this->format());\n    $tmp->time->add($this->getInterval($interval));\n    return $tmp->format($format);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 191,
            "endLine": 195,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "add",
            "returns": [],
            "arguments": [
                {
                    "name": "interval",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "format",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "optional"
                }
            ],
            "doc": {
                "description": "Add an the given $interval to $this->time and return a reference to the original object\nIf the argument $format is not given it returns the sql format 'Y-m-d H:i:s'\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$interval"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$format",
                        "description": "optional"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Add an the given $interval to $this->time and return a reference to the original object\n   * If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'\n   * \n   * @param string $interval\n   * @param string $format optional\n   * @return void\n   *\/"
        },
        "sub": {
            "name": "sub",
            "summary": "Subtract the given $interval to $this->time and return a reference to the original object",
            "description": "If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'",
            "description_parts": [
                {
                    "type": "text",
                    "content": "If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'"
                }
            ],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function sub(string $interval, $format = ''){\n    $tmp  = new \\bbn\\Time($this->format());\n    $tmp->time->sub($this->getInterval($interval));\n    return $tmp->format($format);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 205,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "sub",
            "returns": [],
            "arguments": [
                {
                    "name": "interval",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "format",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "optional"
                }
            ],
            "doc": {
                "description": "Subtract the given $interval to $this->time and return a reference to the original object\nIf the argument $format is not given it returns the sql format 'Y-m-d H:i:s'\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$interval"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$format",
                        "description": "optional"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Subtract the given $interval to $this->time and return a reference to the original object\n   * If the argument $format is not given it returns the sql format 'Y-m-d H:i:s'\n   * \n   * @param string $interval\n   * @param string $format optional\n   * @return void\n   *\/"
        },
        "modif": {
            "name": "modif",
            "summary": "Return a reference to $this->time modified of the $modif",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function modif($modif, $format = '')\n  {\n    $tmp = new \\bbn\\Time($this->format());\n    $tmp->time->modify($modif);\n    return $tmp->format($format);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 218,
            "endLine": 223,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "modif",
            "returns": [],
            "arguments": [
                {
                    "name": "modif",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "format",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return a reference to $this->time modified of the $modif\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$modif"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$format"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return a reference to $this->time modified of the $modif\n   *\n   * @param $modif\n   * @param string $format\n   * @return void\n   *\/"
        },
        "endOfMonth": {
            "name": "endOfMonth",
            "summary": "return the end of the month of $this->time",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Time",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Time.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function endOfMonth(){\n    $m = $this->getMonth();\n    $y = $this->getYear();\n    return cal_days_in_month(CAL_GREGORIAN, $m, $y);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 230,
            "endLine": 234,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "endOfMonth",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "return the end of the month of $this->time\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * return the end of the month of $this->time\n   *\n   * @return Number\n   *\/"
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 57,
                "endLine": 64,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "test",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 57,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "test",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 71,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "check",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 71,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "setError": {
            "name": "setError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
            "parent": {
                "name": "setError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 81,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 1,
                "shortName": "setError",
                "returns": [],
                "arguments": [
                    {
                        "name": "err",
                        "position": 0,
                        "type": "string",
                        "type_arr": [
                            "string"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "code",
                        "position": 1,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 81,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setError",
            "returns": [],
            "arguments": [
                {
                    "name": "err",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getError()\n  {\n    return $this->error;\n  }",
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getError()\n  {\n    return $this->error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 98,
                "endLine": 101,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 98,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": []
        },
        "getErrorCode": {
            "name": "getErrorCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
            "parent": {
                "name": "getErrorCode",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 104,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrorCode",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorCode",
            "returns": [],
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 110,
                "endLine": 113,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrors",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrors",
            "returns": [],
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 116,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "log",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 116,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": []
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
                "parent": false,
                "trait": false,
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "isDebug",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * @return boolean\n   *\/"
            },
            "trait": false,
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isDebug",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return boolean\n   *\/"
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "setDebug",
                "returns": [],
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "type_arr": [
                            "bool"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [
                        {
                            "tag": "param",
                            "type": "boolean",
                            "name": "$debug"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
            },
            "trait": false,
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDebug",
            "returns": [],
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "boolean",
                        "name": "$debug"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
        }
    },
    "properties": {
        "time": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Time"
            },
            "declaring_trait": "bbn\\Time",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "interval": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Time"
            },
            "declaring_trait": "bbn\\Time",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "errors": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "errors",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "error": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|string"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCode": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|int"
                    }
                ]
            },
            "parent": {
                "name": "errorCode",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|int"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCodes": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": {
                "name": "errorCodes",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": "",
                "parent": false,
                "value": []
            },
            "value": []
        },
        "debug": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": {
                "name": "debug",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "boolean"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "log": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "log",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        }
    },
    "staticProperties": [],
    "constants": null,
    "uses": [],
    "dummyComments": [
        "\/**\n *\n *\/",
        "\/**\n * Class dealing with date manipulation\n * examples: test\/loredana\/time\n * \n * @copyright BBN Solutions\n * @category  Time and Date\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n *\/"
    ],
    "summary": "Class dealing with date manipulation",
    "description": "examples: test\/loredana\/time",
    "description_parts": [
        {
            "type": "text",
            "content": "examples: test\/loredana\/time"
        }
    ]
}