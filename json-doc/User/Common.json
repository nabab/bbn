{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\User\\Common",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/User\/Common.php",
    "startLine": 15,
    "endLine": 789,
    "numMethods": 29,
    "numProperties": 1,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_mailer": null,
        "auth": false,
        "path": null,
        "tmp_path": null,
        "id": null,
        "data": [],
        "id_group": null,
        "alert": null,
        "cfg": null,
        "db": null,
        "prev_time": null,
        "class_cfg": null,
        "api_request_output": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\User",
    "shortName": "Common",
    "contentConstructor": null,
    "methods": {
        "getData": {
            "name": "getData",
            "summary": "Retrieves data stored in the data property of the user, only if authenticated.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idx)\n  {\n    if (!$this->auth) {\n      throw new Exception(X::_(\"Impossible to retrieve data for an authenticated user\"));\n    }\n\n    return $this->data[$idx] ?? null;\n  }",
            "startLine": 97,
            "endLine": 104,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "idx",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPath": {
            "name": "getPath",
            "summary": "Returns the directory path for the user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->path;\n  }",
            "startLine": 112,
            "endLine": 115,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getTmpDir": {
            "name": "getTmpDir",
            "summary": "Returns the tmp directory path for the user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->tmp_path;\n  }",
            "startLine": 123,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "isAuth": {
            "name": "isAuth",
            "summary": "Returns true if authenticated false otherwise.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->auth;\n  }",
            "startLine": 134,
            "endLine": 137,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getId": {
            "name": "getId",
            "summary": "Returns the user's ID if there is no error.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check()) {\n      return $this->id;\n    }\n\n    return null;\n  }",
            "startLine": 145,
            "endLine": 152,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getGroup": {
            "name": "getGroup",
            "summary": "Returns the user's group's ID if there is no error.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check()) {\n      return $this->id_group;\n    }\n\n    return null;\n  }",
            "startLine": 160,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "expireHotlink": {
            "name": "expireHotlink",
            "summary": "Expires an hotlink by setting the expire column to now.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ($this->check()) {\n      return $this->db->update(\n        $this->class_cfg['tables']['hotlinks'],\n        [$this->class_cfg['arch']['hotlinks']['expire'] => date('Y-m-d H:i:s')],\n        [$this->class_cfg['arch']['hotlinks']['id'] => $id]\n      );\n    }\n\n    return 0;\n  }",
            "startLine": 175,
            "endLine": 186,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getIdFromMagicString": {
            "name": "getIdFromMagicString",
            "summary": "Retrieves a user's ID from the hotlink's magic string.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $key)\n  {\n    if ($val = $this->db->rselect(\n      $this->class_cfg['tables']['hotlinks'], [\n      $this->class_cfg['arch']['hotlinks']['magic'],\n      $this->class_cfg['arch']['hotlinks']['id_user'],\n      ],[\n      $this->class_cfg['arch']['hotlinks']['id'] => $id,\n      [$this->class_cfg['arch']['hotlinks']['expire'], '>', date('Y-m-d H:i:s')]\n      ]\n    )\n    ) {\n      if (self::isMagicString($key, $val[$this->class_cfg['arch']['hotlinks']['magic']])) {\n        return $val['id_user'];\n      }\n    }\n\n    return null;\n  }",
            "startLine": 196,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "key",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "check": {
            "name": "check",
            "summary": "Checks if an error has been thrown or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->getError() ? false : true;\n  }",
            "startLine": 222,
            "endLine": 225,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "logout": {
            "name": "logout",
            "summary": "Unauthenticates, resets the config and destroys the session.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->auth = false;\n    $this->cfg  = [];\n    $this->closeSession();\n  }",
            "startLine": 233,
            "endLine": 238,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getMailer": {
            "name": "getMailer",
            "summary": "Returns an instance of the mailer class.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!$this->_mailer) {\n      if (class_exists($this->class_cfg['mailer'])) {\n        $this->_mailer = new $this->class_cfg['mailer']();\n      }\n      else {\n        throw new Exception(X::_(\"Impossible to find the mailer class %s\", (string)$this->class_cfg['mailer']));\n      }\n    }\n\n    return $this->_mailer;\n  }",
            "startLine": 247,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "forcePassword": {
            "name": "forcePassword",
            "summary": "Changes the password in the database.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($pass)\n  {\n    if ($this->id) {\n      return (bool)$this->db->insert(\n        $this->class_cfg['tables']['passwords'], [\n        $this->class_cfg['arch']['passwords']['pass'] => $this->_hash($pass),\n        $this->class_cfg['arch']['passwords']['id_user'] => $this->id,\n        $this->class_cfg['arch']['passwords']['added'] => date('Y-m-d H:i:s')\n        ]\n      );\n    }\n\n    return false;\n  }",
            "startLine": 267,
            "endLine": 280,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "pass",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getEmail": {
            "name": "getEmail",
            "summary": "Returns the email of the given user or the current one.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($usr = NULL)\n  {\n    if ($this->auth) {\n      if (\\is_null($usr)) {\n        $usr = $this->getSession();\n      }\n      elseif (str::isUid($usr) && ($mgr = $this->getManager())) {\n        $usr = $mgr->getUser($usr);\n      }\n\n      if (isset($this->fields['email'], $usr[$this->fields['email']])) {\n        return $usr[$this->fields['email']];\n      }\n    }\n\n    return null;\n  }",
            "startLine": 288,
            "endLine": 304,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "usr",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "addToTmp": {
            "name": "addToTmp",
            "summary": "Adds a file to the tmp folder of the user and returns its path.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $file, string $name = NULL, $move = true)\n  {\n    if ($this->auth) {\n      $fs   = new System();\n      $path = $this->getTmpDir().microtime(true).'\/';\n      if ($fs->isFile($file) && $fs->createPath($path)) {\n        $dest = $path.($name ?: X::basename($file));\n        if ($move) {\n          if ($fs->move($file, X::dirname($dest)) && $fs->rename(X::dirname($dest).'\/'.X::basename($file), X::basename($dest))) {\n            return $dest;\n          }\n        }\n        elseif ($fs->copy($file, $dest)) {\n          return $dest;\n        }\n      }\n    }\n\n    return null;\n  }",
            "startLine": 315,
            "endLine": 334,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "move",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "crypt": {
            "name": "crypt",
            "summary": "Encrypts the given string.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $st)\n  {\n    if ($enckey = $this->_get_encryption_key()) {\n      return Enc::crypt($st, $enckey) ?: null;\n    }\n\n    return null;\n  }",
            "startLine": 343,
            "endLine": 350,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "decrypt": {
            "name": "decrypt",
            "summary": "Decrypts the given string.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $st)\n  {\n    if ($enckey = $this->_get_encryption_key()) {\n      return Enc::decrypt($st, $enckey) ?: null;\n    }\n\n    return null;\n  }",
            "startLine": 359,
            "endLine": 366,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "makeFingerprint": {
            "name": "makeFingerprint",
            "summary": "Generates a random long string (16-32 chars) used as unique fingerprint.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return Str::genpwd(32, 16);\n  }",
            "startLine": 373,
            "endLine": 376,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "makeMagicString": {
            "name": "makeMagicString",
            "summary": "Returns an array with a key and a magic string used for making hotlinks.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $key = self::makeFingerprint();\n    return [\n      'key' => $key,\n      'hash' => hash('sha256', $key)\n    ];\n  }",
            "startLine": 384,
            "endLine": 391,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "isMagicString": {
            "name": "isMagicString",
            "summary": "Checks if a given string corresponds to the given hash.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $key, string $hash)\n  {\n    return hash('sha256', $key) === $hash;\n  }",
            "startLine": 401,
            "endLine": 404,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "key",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The key"
                },
                {
                    "name": "hash",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The corresponding hash"
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "Returns the first error in an array with the code and description.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return [\n        'code' => $this->error,\n        'text' => $this->class_cfg['errors'][$this->error]\n      ];\n    }\n\n    return null;\n  }",
            "startLine": 429,
            "endLine": 439,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "saveNewPermissionTokens": {
            "name": "saveNewPermissionTokens",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $access_token, string $refresh_token, int $expires_in, string $account_name)\n  {\n    if ($this->id) {\n      $account_exists = $this->db->count(\n        $this->class_cfg['tables']['permission_accounts'],\n        [\n          $this->class_cfg['arch']['permission_accounts']['id_user'] => $this->id,\n          $this->class_cfg['arch']['permission_accounts']['name']    => $account_name,\n        ]\n      );\n      \n      if ($account_exists > 0 ){\n        throw new Exception(X::_('Account already exists!'));\n      }\n      \n      if ($this->db->insert(\n          $this->class_cfg['tables']['permission_accounts'], [\n          $this->class_cfg['arch']['permission_accounts']['id_user'] => $this->id,\n          $this->class_cfg['arch']['permission_accounts']['name']    => $account_name,\n        ]\n      )) {\n        return (bool)$this->db->insert(\n          $this->class_cfg['tables']['permission_tokens'], [\n            $this->class_cfg['arch']['permission_tokens']['id_account']    => $this->db->lastId(),\n            $this->class_cfg['arch']['permission_tokens']['access_token']  => $access_token,\n            $this->class_cfg['arch']['permission_tokens']['refresh_token'] => $refresh_token,\n            $this->class_cfg['arch']['permission_tokens']['expire']        => time() + $expires_in,\n          ]\n        );\n      }\n    }\n\n    return false;\n  }",
            "startLine": 522,
            "endLine": 555,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "access_token",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "token"
                },
                {
                    "name": "refresh_token",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "token"
                },
                {
                    "name": "expires_in",
                    "position": 2,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "in"
                },
                {
                    "name": "account_name",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "name"
                }
            ]
        },
        "getPermissionAccountFromName": {
            "name": "getPermissionAccountFromName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $account_name)\n  {\n    if ($this->id) {\n      return $this->db->rselect(\n        $this->class_cfg['tables']['permission_accounts'],\n        $this->class_cfg['arch']['permission_accounts'],\n        [\n          $this->class_cfg['arch']['permission_accounts']['id_user'] => $this->id,\n          $this->class_cfg['arch']['permission_accounts']['name']    => $account_name,\n        ]\n      );\n    }\n\n    return false;\n  }",
            "startLine": 557,
            "endLine": 571,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "account_name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPermissionTokensFromAccountName": {
            "name": "getPermissionTokensFromAccountName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $account_name)\n  {\n    if ($this->id) {\n      if ($account = $this->getPermissionAccountFromName($account_name)) {\n        return $this->db->rselect(\n          $this->class_cfg['tables']['permission_tokens'],\n          $this->class_cfg['arch']['permission_tokens'],\n          [\n            $this->class_cfg['arch']['permission_tokens']['id_account'] => $account[$this->class_cfg['arch']['permission_accounts']['id']],\n          ]\n        ); \n      }\n    }\n    \n    return false;\n  }",
            "startLine": 577,
            "endLine": 592,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "account_name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "name"
                }
            ]
        },
        "updatePermissionTokens": {
            "name": "updatePermissionTokens",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $account_name, string $access_token, string $refresh_token, int $expire_in)\n  {\n    if ($this->id && $account = $this->getPermissionAccountFromName($account_name)) {\n        return $this->db->update(\n          $this->class_cfg['tables']['permission_tokens'], [\n          $this->class_cfg['arch']['permission_tokens']['access_token']   => $access_token,\n          $this->class_cfg['arch']['permission_tokens']['refresh_token']  => $refresh_token,\n          $this->class_cfg['arch']['permission_tokens']['expire']         => time() + $expire_in,\n        ], [\n            $this->class_cfg['arch']['permission_tokens']['id_account'] => $account[$this->class_cfg['arch']['permission_accounts']['id']]\n          ]\n        );\n    }\n\n    return false;\n  }",
            "startLine": 594,
            "endLine": 609,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "account_name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "access_token",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "refresh_token",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "expire_in",
                    "position": 3,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getApiRequestOutput": {
            "name": "getApiRequestOutput",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->api_request_output;\n  }",
            "startLine": 738,
            "endLine": 741,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getApiNotificationsToken": {
            "name": "getApiNotificationsToken",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser = '')\n  {\n    return $this->db->selectOne([\n      'table' => $this->class_cfg['tables']['api_tokens'],\n      'fields' => $this->class_cfg['arch']['api_tokens']['notifications_token'],\n      'where' => [ \n        $this->class_cfg['arch']['api_tokens']['id_user'] => $idUser ?: $this->id\n      ],\n      'order' => [[\n        'field' => $this->class_cfg['arch']['api_tokens']['last'],\n        'dir' => 'DESC'\n      ]]\n    ]);\n  }",
            "startLine": 743,
            "endLine": 756,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPhoneNumber": {
            "name": "getPhoneNumber",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser = '')\n  {\n    return $this->db->selectOne($this->class_cfg['table'], $this->class_cfg['arch']['users']['phone'], [\n      $this->class_cfg['arch']['users']['id'] => $idUser ?: $this->id\n    ]);\n  }",
            "startLine": 758,
            "endLine": 763,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "hasSkipVerification": {
            "name": "hasSkipVerification",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = '')\n  {\n    if ($cfg = $this->db->selectOne(\n      $this->class_cfg['tables']['users'],\n      $this->class_cfg['arch']['users']['cfg'],\n      [\n        $this->class_cfg['arch']['users']['id'] => $id ?: $this->id\n      ]\n    )) {\n      $cfg = json_decode($cfg);\n      return !empty($cfg->skip_verification);\n    }\n    return false;\n  }",
            "startLine": 766,
            "endLine": 779,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getDbInstance": {
            "name": "getDbInstance",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Common",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db;\n  }",
            "startLine": 784,
            "endLine": 787,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Db"
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": {
        "prev_time": {
            "visibility": "public",
            "doc": {
                "description": "@var mixed",
                "tags": []
            }
        }
    },
    "staticProperties": [],
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}