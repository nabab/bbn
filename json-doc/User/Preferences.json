{
    "doc": {
        "description": "A user's preference system linked to options and user classes\n\nA preference consists in a row with an ID_OPTION and a ID_USER, ID_GROUP, or PUBLIC.\nThe class needs a user object on which each query will be based.\nThis class must be able to:\n- read options with the same arguments as the option class (filtered based on preference existence)\n- retrieve preference(s) for an option\n- write preference by adding to an existing set or setting a unique\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Oct 28, 2015, 10:23:55 +0000",
            "category": "Authentication",
            "license": "http:\/\/opensource.org\/licenses\/MIT MIT",
            "version": "0.1",
            "todo": "Groups and hotlinks features"
        }
    },
    "name": "bbn\\User\\Preferences",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Retriever",
        "bbn\\Models\\Tts\\Dbconfig",
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Current"
    ],
    "interfaces": [],
    "fileName": "\/User\/Preferences.php",
    "startLine": 35,
    "endLine": 2644,
    "numMethods": 104,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 7,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Retriever",
        "bbn\\Models\\Tts\\Dbconfig",
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Current"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_users_options",
            "tables": {
                "user_options": "bbn_users_options",
                "user_options_bits": "bbn_users_options_bits"
            },
            "arch": {
                "user_options": {
                    "id": "id",
                    "id_option": "id_option",
                    "num": "num",
                    "id_user": "id_user",
                    "id_group": "id_group",
                    "id_alias": "id_alias",
                    "public": "public",
                    "id_link": "id_link",
                    "text": "text",
                    "cfg": "cfg"
                },
                "user_options_bits": {
                    "id": "id",
                    "id_user_option": "id_user_option",
                    "id_parent": "id_parent",
                    "id_option": "id_option",
                    "num": "num",
                    "text": "text",
                    "cfg": "cfg"
                }
            }
        },
        "retriever_instance": null,
        "retriever_exists": false,
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "current": null,
        "opt": null,
        "user": null,
        "id_user": null,
        "id_group": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "_is_init_class_cfg": false,
        "fields": null,
        "class_cfg": null,
        "class_table": null,
        "class_table_index": null,
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\User",
    "shortName": "Preferences",
    "contentConstructor": {
        "file": "bbn\\User\\Preferences",
        "returns": []
    },
    "methods": {
        "getPreferences": {
            "name": "getPreferences",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getInstance();\n  }",
            "startLine": 90,
            "endLine": 93,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "bbn\\User\\preferences"
            ],
            "parent": false,
            "arguments": []
        },
        "__construct": {
            "name": "__construct",
            "summary": "Preferences constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, array $cfg = [])\n  {\n      parent::__construct($db);\n    $this->_init_class_cfg($cfg);\n    if ($user = bbn\\User::getInstance()) {\n      $this->_initUser($user);\n    }\n\n    $this->opt = bbn\\Appui\\Option::getInstance();\n    if ($this->user && $this->opt) {\n      self::retrieverInit($this);\n    }\n  }",
            "startLine": 103,
            "endLine": 115,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database connection object"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "A configuration array for tha tables' structure"
                }
            ]
        },
        "getClassCfg": {
            "name": "getClassCfg",
            "summary": "Returns an array describing the structures of the tables for the class.",
            "description": "```\n$pref->getClassCfg();\n\n\/\/ (array) = [\n\/\/   \"table\" => \"bbn_users_options\",\n\/\/   \"tables\" => [\n\/\/     \"user_options\" => \"bbn_users_options\",\n\/\/     \"user_options_bits\" => \"bbn_users_options_bits\"\n\/\/   ],\n\/\/   \"arch\" => [\n\/\/     \"user_options\" => [\n\/\/       \"id\" => \"id\",\n\/\/       \"id_option\" => \"id_option\",\n\/\/       \"num\" => \"num\",\n\/\/       \"id_user\" => \"id_user\",\n\/\/       \"id_group\" => \"id_group\",\n\/\/       \"id_alias\" => \"id_alias\",\n\/\/       \"public\" => \"public\",\n\/\/       \"id_link\" => \"id_link\",\n\/\/       \"text\" => \"text\",\n\/\/       \"cfg\" => \"cfg\"\n\/\/     ],\n\/\/     \"user_options_bits\" => [\n\/\/       \"id\" => \"id\",\n\/\/       \"id_user_option\" => \"id_user_option\",\n\/\/       \"id_parent\" => \"id_parent\",\n\/\/       \"id_option\" => \"id_option\",\n\/\/       \"num\" => \"num\",\n\/\/       \"text\" => \"text\",\n\/\/       \"cfg\" => \"cfg\"\n\/\/     ]\n\/\/   ]\n\/\/ ];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getClassCfg();\n\n\/\/ (array) = [\n\/\/   \"table\" => \"bbn_users_options\",\n\/\/   \"tables\" => [\n\/\/     \"user_options\" => \"bbn_users_options\",\n\/\/     \"user_options_bits\" => \"bbn_users_options_bits\"\n\/\/   ],\n\/\/   \"arch\" => [\n\/\/     \"user_options\" => [\n\/\/       \"id\" => \"id\",\n\/\/       \"id_option\" => \"id_option\",\n\/\/       \"num\" => \"num\",\n\/\/       \"id_user\" => \"id_user\",\n\/\/       \"id_group\" => \"id_group\",\n\/\/       \"id_alias\" => \"id_alias\",\n\/\/       \"public\" => \"public\",\n\/\/       \"id_link\" => \"id_link\",\n\/\/       \"text\" => \"text\",\n\/\/       \"cfg\" => \"cfg\"\n\/\/     ],\n\/\/     \"user_options_bits\" => [\n\/\/       \"id\" => \"id\",\n\/\/       \"id_user_option\" => \"id_user_option\",\n\/\/       \"id_parent\" => \"id_parent\",\n\/\/       \"id_option\" => \"id_option\",\n\/\/       \"num\" => \"num\",\n\/\/       \"text\" => \"text\",\n\/\/       \"cfg\" => \"cfg\"\n\/\/     ]\n\/\/   ]\n\/\/ ];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 158,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "retrieveIds": {
            "name": "retrieveIds",
            "summary": "Returns all preferences' IDs from the option's ID.",
            "description": "```\n$pref->retrieveIds(\"944190af24ef11eca47652540000cfbe\");\n\n\/\/ (array) = [\n\/\/   \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"309f8a1c2c2f11eca47652540000cfbe\",\n\/\/   \"ef2cefe52c2f11eca47652540000cfbe\",\n\/\/   \"042b29722c2f11eca47652540000cfbe\",\n\/\/   \"eac3729c2b6c11eca47652540000cfbe\",\n\/\/   \"d38e7e692cd011eca47652540000cfbe\",\n\/\/   \"26e3dd9a2c2611eca47652540000cfbe\",\n\/\/   \"3ef413ad2b6b11eca47652540000cfbe\",\n\/\/   \"f47d188b2b5911eca47652540000cfbe\",\n\/\/   \"179d85a0284911eca47652540000cfbe\",\n\/\/   \"7238e8932c0e11eca47652540000cfbe\",\n\/\/   \"89ceab0b2aa111eca47652540000cfbe\",\n\/\/   \"96203fbb2b5911eca47652540000cfbe\",\n\/\/ ]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->retrieveIds(\"944190af24ef11eca47652540000cfbe\");\n\n\/\/ (array) = [\n\/\/   \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"309f8a1c2c2f11eca47652540000cfbe\",\n\/\/   \"ef2cefe52c2f11eca47652540000cfbe\",\n\/\/   \"042b29722c2f11eca47652540000cfbe\",\n\/\/   \"eac3729c2b6c11eca47652540000cfbe\",\n\/\/   \"d38e7e692cd011eca47652540000cfbe\",\n\/\/   \"26e3dd9a2c2611eca47652540000cfbe\",\n\/\/   \"3ef413ad2b6b11eca47652540000cfbe\",\n\/\/   \"f47d188b2b5911eca47652540000cfbe\",\n\/\/   \"179d85a0284911eca47652540000cfbe\",\n\/\/   \"7238e8932c0e11eca47652540000cfbe\",\n\/\/   \"89ceab0b2aa111eca47652540000cfbe\",\n\/\/   \"96203fbb2b5911eca47652540000cfbe\",\n\/\/ ]"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL)\n  {\n    return $this->_retrieveIds($id_option, $this->id_user, $this->id_group);\n  }",
            "startLine": 191,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                }
            ]
        },
        "retrieveUserIds": {
            "name": "retrieveUserIds",
            "summary": "Returns preferences' IDs from the option's ID and the given user ID.",
            "description": "```\n$pref->retrieveUserIds('944190af24ef11eca47652540000cfbe');\n\n\/\/ (array) = [\n\/\/   \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"309f8a1c2c2f11eca47652540000cfbe\",\n\/\/   \"ef2cefe52c2f11eca47652540000cfbe\",\n\/\/   \"042b29722c2f11eca47652540000cfbe\",\n\/\/   \"eac3729c2b6c11eca47652540000cfbe\",\n\/\/   \"d38e7e692cd011eca47652540000cfbe\",\n\/\/   \"26e3dd9a2c2611eca47652540000cfbe\",\n\/\/   \"3ef413ad2b6b11eca47652540000cfbe\",\n\/\/   \"f47d188b2b5911eca47652540000cfbe\",\n\/\/   \"179d85a0284911eca47652540000cfbe\",\n\/\/   \"7238e8932c0e11eca47652540000cfbe\",\n\/\/   \"89ceab0b2aa111eca47652540000cfbe\",\n\/\/   \"96203fbb2b5911eca47652540000cfbe\",\n\/\/ ]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->retrieveUserIds('944190af24ef11eca47652540000cfbe');\n\n\/\/ (array) = [\n\/\/   \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"309f8a1c2c2f11eca47652540000cfbe\",\n\/\/   \"ef2cefe52c2f11eca47652540000cfbe\",\n\/\/   \"042b29722c2f11eca47652540000cfbe\",\n\/\/   \"eac3729c2b6c11eca47652540000cfbe\",\n\/\/   \"d38e7e692cd011eca47652540000cfbe\",\n\/\/   \"26e3dd9a2c2611eca47652540000cfbe\",\n\/\/   \"3ef413ad2b6b11eca47652540000cfbe\",\n\/\/   \"f47d188b2b5911eca47652540000cfbe\",\n\/\/   \"179d85a0284911eca47652540000cfbe\",\n\/\/   \"7238e8932c0e11eca47652540000cfbe\",\n\/\/   \"89ceab0b2aa111eca47652540000cfbe\",\n\/\/   \"96203fbb2b5911eca47652540000cfbe\",\n\/\/ ]"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL, string $id_user = NULL)\n  {\n    if (!$id_user) {\n      $id_user = $this->id_user;\n    }\n\n    return $this->_retrieveIds($id_option, $id_user);\n  }",
            "startLine": 225,
            "endLine": 232,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ]
        },
        "retrieveGroupIds": {
            "name": "retrieveGroupIds",
            "summary": "Returns preferences' IDs from the option's ID and the given group ID.",
            "description": "```\n$pref->retrieveGroupIdsIds('944190af24ef11eca47652540000cfbe', '930ac00324ef11eca47652540000cfbe');\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->retrieveGroupIdsIds('944190af24ef11eca47652540000cfbe', '930ac00324ef11eca47652540000cfbe');"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL, string $id_group = NULL)\n  {\n    if (!$id_group) {\n      $id_group = $this->id_group;\n    }\n\n    return $this->_retrieveIds($id_option, null, $id_group);\n  }",
            "startLine": 247,
            "endLine": 254,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_group",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "group"
                }
            ]
        },
        "isAuthorized": {
            "name": "isAuthorized",
            "summary": "Checks if the given user or the current user is authorized to access a user_option.",
            "description": "```\n$pref->isAuthorized(\"930ac00324ef11eca47652540000cfbe\");\n\n\/\/ (bool) = false;\n\n$pref->isAuthorized(\"eac3729c2b6c11eca47652540000cfbe\");\n\n\/\/ (bool) = true;\n````",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->isAuthorized(\"930ac00324ef11eca47652540000cfbe\");\n\n\/\/ (bool) = false;\n\n$pref->isAuthorized(\"eac3729c2b6c11eca47652540000cfbe\");\n\n\/\/ (bool) = true;\n`"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option)\n  {\n    return (bool)$this->get($id_user_option, false);\n  }",
            "startLine": 274,
            "endLine": 277,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option"
                }
            ]
        },
        "has": {
            "name": "has",
            "summary": "Returns true if the current user can access a preference, false otherwise.",
            "description": "```\n$pref->has('9439491824ef11eca47652540000cfbe');\n\n\/\/ (bool) = true;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->has('9439491824ef11eca47652540000cfbe');\n\n\/\/ (bool) = true;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL, bool $force = false)\n  {\n    if (!$force && $this->user->isDev()) {\n      return true;\n    }\n\n    return (bool)$this->retrieveIds($id_option);\n  }",
            "startLine": 294,
            "endLine": 301,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "userHas": {
            "name": "userHas",
            "summary": "Checks if a user has the given preference.",
            "description": "```\n$pref->userHas('042b29722c2f11eca47652540000cfbe');\n\n\/\/ (bool) = false;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->userHas('042b29722c2f11eca47652540000cfbe');\n\n\/\/ (bool) = false;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_user = NULL)\n  {\n    return (bool)$this->_retrieveIds($id_option, $id_user);\n  }",
            "startLine": 318,
            "endLine": 321,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ]
        },
        "groupHas": {
            "name": "groupHas",
            "summary": "Checks if a group has the given preference.",
            "description": "```\n$pref->groupHas('042b29722c2f11eca47652540000cfbe', $pref->getGroup());\n\n\/\/ (bool) = false;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->groupHas('042b29722c2f11eca47652540000cfbe', $pref->getGroup());\n\n\/\/ (bool) = false;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_group)\n  {\n    return (bool)$this->_retrieveIds($id_option, null, $id_group);\n  }",
            "startLine": 337,
            "endLine": 340,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_group",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "group"
                }
            ]
        },
        "getUser": {
            "name": "getUser",
            "summary": "Returns the Id of the current user.",
            "description": "```\n$pref->getUser();\n\n\/\/(string) = \"980dd074514ef11eca56895680000cers\";\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getUser();\n\n\/\/(string) = \"980dd074514ef11eca56895680000cers\";"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->id_user;\n  }",
            "startLine": 354,
            "endLine": 357,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getGroup": {
            "name": "getGroup",
            "summary": "Returns the Id of the current group.",
            "description": "```\n$pref->getGroup();\n\n\/\/(string) = \"980dd074514ef11eca56895680000cers\";\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getGroup();\n\n\/\/(string) = \"980dd074514ef11eca56895680000cers\";"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->id_group;\n  }",
            "startLine": 371,
            "endLine": 374,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "setUser": {
            "name": "setUser",
            "summary": "Changes the current user and return the changed preferences class.",
            "description": "```\n$pref->setUser($ctrl->inc->user);\n\n\/\/(bbn\\User\\Preferences) = $pref;\n\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->setUser($ctrl->inc->user);\n\n\/\/(bbn\\User\\Preferences) = $pref;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\User $user)\n  {\n    $this->_initUser($user);\n    return $this;\n  }",
            "startLine": 390,
            "endLine": 394,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bbn\\User\\preferences"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "user",
                    "position": 0,
                    "type": "bbn\\User",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setGroup": {
            "name": "setGroup",
            "summary": "Changes the current group and return the changed preferences class.",
            "description": "```\n$pref->setGroup('930ac00324ef11eca47652540000cfbe');\n\n\/\/ (bbn\\User\\Preferences) = $pref;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->setGroup('930ac00324ef11eca47652540000cfbe');\n\n\/\/ (bbn\\User\\Preferences) = $pref;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_group)\n  {\n    if (\\bbn\\Str::isUid($id_group)) {\n      $this->id_group = $id_group;\n    }\n\n    return $this;\n  }",
            "startLine": 409,
            "endLine": 416,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bbn\\User\\preferences"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "group"
                }
            ]
        },
        "getCfg": {
            "name": "getCfg",
            "summary": "Gets the cfg array, normalized either from the DB or from the $cfg argument.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = NULL, array $cfg = NULL)\n  {\n    if (\n        (null !== $cfg)\n        || ($cfg = $this->db->selectOne(\n            $this->class_cfg['table'],\n            $this->fields['cfg'],\n            [$this->fields['id'] => $id ]\n        ))\n    ) {\n      if (bbn\\Str::isJson($cfg)) {\n        $cfg = json_decode($cfg, 1);\n      }\n\n      if (\\is_array($cfg)) {\n        $new = [];\n        foreach ($cfg as $k => $v) {\n          if (!\\in_array($k, $this->fields, true)) {\n            $new[$k] = $v;\n          }\n        }\n\n        return $new;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 426,
            "endLine": 453,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getCfgByOption": {
            "name": "getCfgByOption",
            "summary": "Gets the cfg array, normalized either from the DB or from the $cfg argument.",
            "description": "```\n$pref->getCfgByOption(\"9439491824ef11eca47652540000cfbe\");\n\n(array) = [];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getCfgByOption(\"9439491824ef11eca47652540000cfbe\");\n\n(array) = [];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_user = NULL)\n  {\n    if (\n        ($cfg = $this->db->selectOne(\n            $this->class_cfg['table'],\n            $this->fields['cfg'],\n            [\n            $this->fields['id_option'] => $id_option,\n            $this->fields['id_user'] => $id_user ?: $this->id_user,\n            ]\n        ))\n    ) {\n      if (bbn\\Str::isJson($cfg)) {\n        $cfg = json_decode($cfg, 1);\n      }\n\n      return $this->getCfg(false, $cfg);\n    }\n\n    return null;\n  }",
            "startLine": 469,
            "endLine": 489,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ]
        },
        "getLinks": {
            "name": "getLinks",
            "summary": "Gets the preferences which have the option's $id as id_link.",
            "description": "```\n$pref->getLinks(\"9439491824ef11eca47652540000cfbe\");\n\n\/\/(array) = [];\n\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getLinks(\"9439491824ef11eca47652540000cfbe\");\n\n\/\/(array) = [];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    return $this->_getLinks($id, $this->id_user, $this->id_group);\n  }",
            "startLine": 505,
            "endLine": 508,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "Returns the current user's preference based on the given id, his own profile and his group.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, bool $with_config = true)\n  {\n    if (bbn\\Str::isUid($id)) {\n      $table    = $this->db->tsn($this->class_cfg['table'], true);\n      $uid      = $this->db->csn($this->fields['id'], true);\n      $id_user  = $this->db->csn($this->fields['id_user'], true);\n      $id_group = $this->db->csn($this->fields['id_group'], true);\n      $public   = $this->db->csn($this->fields['public'], true);\n      if (\n          $row = $this->db->rselect(\n              [\n              'table' => $table,\n              'fields' => $this->fields,\n              'where' => [\n              'conditions' => [[\n              'field' => $uid,\n              'value' => $id\n              ], [\n              'logic' => 'OR',\n              'conditions' => [[\n              'field' => $id_user,\n              'value' => $this->id_user\n              ], [\n              'field' => $id_group,\n              'value' => $this->id_group\n              ], [\n              'field' => $public,\n              'value' => 1\n              ]]\n              ]]\n              ]\n              ]\n          )\n      ) {\n        if ($with_config) {\n          if (empty($row['cfg']) && !empty($row['id_alias'])) {\n            \/\/if it's the case of a shared list takes the $cfg and the text from the alias\n            $alias       = $this->db->rselect(\n                [\n                'table' => $table,\n                'fields' => ['cfg', 'text'],\n                'where' => [\n                'conditions' => [[\n                  'field' => 'id',\n                  'value' => $row['id_alias']\n                ]]\n                ]\n                ]\n            );\n            $row['cfg']  = $alias['cfg'];\n            $row['text'] = $alias['text'];\n          }\n\n          $cfg = $row[$this->fields['cfg']];\n          unset($row[$this->fields['cfg']]);\n          if ($cfg = json_decode($cfg, true)) {\n            $row = bbn\\X::mergeArrays($cfg, $row);\n          }\n        }\n\n        return $row;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 519,
            "endLine": 584,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getAll": {
            "name": "getAll",
            "summary": "Returns an array of the current user's preferences based on the given id_option, his own profile and his group's.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL, bool $with_config = true)\n  {\n    if ($id_option = $this->_getIdOption($id_option)) {\n      $farch  = $this->fields;\n      $fields = [];\n      foreach ($farch as $k => $f) {\n        $field = $this->class_table . '.' . $f;\n        if ($k === 'cfg') {\n          $fields[$farch['cfg']] = \"IFNULL($field, aliases.$farch[cfg])\";\n        }\n        elseif ($k === 'text') {\n          $fields[$farch['text']] = \"IFNULL($field, aliases.$farch[text])\";\n        }\n        else {\n          $fields[] = $field;\n        }\n      }\n\n      if (\n          $rows = $this->db->rselectAll(\n              [\n              'table' => $this->class_table,\n              'fields' => $fields,\n              'join' => [[\n              'table' => $this->class_table,\n              'type' => 'left',\n              'alias' => 'aliases',\n              'on' => [\n              'conditions' => [[\n              'field' => $farch['id_alias'],\n              'exp' => 'aliases.id'\n              ]]\n              ]]\n              ],\n              'where' => [\n              'conditions' => [\n              [\n              'field' => $farch['id_option'],\n              'value' => $id_option\n              ], [\n              'logic' => 'OR',\n              'conditions' => [\n                [\n                  'field' => $farch['id_user'],\n                  'value' => $this->id_user\n                ], [\n                  'field' => $farch['id_group'],\n                  'value' => $this->id_group\n                ], [\n                  'field' => $farch['public'],\n                  'value' => 1\n                ]\n              ]\n              ]\n              ]\n              ]\n              ]\n          )\n      ) {\n        return $with_config ? array_map(\n            function ($a) use ($farch) {\n              $cfg = $a[$farch['cfg']];\n              unset($a[$farch['cfg']]);\n              if ($cfg = json_decode($cfg, true)) {\n                $a = bbn\\X::mergeArrays($cfg, $a);\n              }\n\n              return $a;\n            },\n            $rows\n        ) : $rows;\n      }\n\n      return [];\n    }\n\n    return null;\n  }",
            "startLine": 595,
            "endLine": 672,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getAllNotMine": {
            "name": "getAllNotMine",
            "summary": "Returns an array of the users' preferences (the current user and group are excluded) based on the given id_option.",
            "description": "```\n$pref->getAllNotMine('9439491824ef11eca47652540000cfbe', true);\n\n\/\/ (array) = [];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getAllNotMine('9439491824ef11eca47652540000cfbe', true);\n\n\/\/ (array) = [];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option = NULL, bool $with_config = true)\n  {\n    if ($id_option = $this->_getIdOption($id_option)) {\n      $fields = $this->fields;\n      if (!$with_config) {\n        unset($fields['cfg']);\n      }\n\n      if (\n          $rows = $this->db->rselectAll(\n              [\n              'table' => $this->class_table,\n              'fields' => $fields,\n              'join' => [[\n              'table' => $this->class_table,\n              'type' => 'left',\n              'alias' => 'aliases',\n              'on' => [\n              'conditions' => [[\n              'field' => $this->fields['id_alias'],\n              'exp' => 'aliases.id'\n              ]]\n              ]\n              ]],\n              'where' => [\n              'conditions' => [[\n              'field' => $this->fields['id_option'],\n              'value' => $id_option\n              ], [\n              'field' => $this->fields['public'],\n              'value' => 0\n              ], [\n              'logic' => 'OR',\n              'conditions' => [[\n              'field' => $this->fields['id_user'],\n              'operator' => '!=',\n              'value' => $this->id_user\n              ], [\n              'field' => $this->fields['id_user'],\n              'operator' => 'isnull'\n              ]]\n              ], [\n              'logic' => 'OR',\n              'conditions' => [[\n              'field' => $this->fields['id_group'],\n              'operator' => 'neq',\n              'value' => $this->id_group\n              ], [\n              'field' => $this->fields['id_group'],\n              'operator' => 'isnull'\n              ]]\n              ]]\n              ]\n              ]\n          )\n      ) {\n        return $with_config ? array_map(\n            function ($a) {\n              $cfg = $a['cfg'];\n              unset($a['cfg']);\n              if (($cfg = json_decode($cfg, true))) {\n                $a = bbn\\X::mergeArrays($cfg, $a);\n              }\n\n              return $a;\n            },\n            $rows\n        ) : $rows;\n      }\n\n      return [];\n    }\n\n    return null;\n  }",
            "startLine": 689,
            "endLine": 763,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config Adds the `cfg` field in the result if true"
                }
            ]
        },
        "getByOption": {
            "name": "getByOption",
            "summary": "Returns the current user's preference and the config if second parameter set to true, based on the given option id, his own profile and his group.",
            "description": "```\n$pref->getByOption('944190af24ef11eca47652540000cfbe', true);\n\n\/\/ (array) = [\n\/\/  \"path\" => \"\/\",\n\/\/  \"host\" => \"\",\n\/\/  \"user\" => \"\",\n\/\/  \"type\" => \"local\",\n\/\/  \"id\" => \"8380126d2b4d11eca47652540000cfbe\",\n\/\/  \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/  \"num\" => null,\n\/\/  \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/  \"id_group\" => null,\n\/\/  \"id_alias\" => null,\n\/\/  \"public\" => 0,\n\/\/  \"id_link\" => null,\n\/\/  \"text\" => 1\n\/\/ ];\n\n$pref->getByOption('944190af24ef11eca47652540000cfbe', false);\n\n\/\/ (array) = [\n\/\/   \"id\" => \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/   \"id_group\" => null,\n\/\/   \"id_alias\" => null,\n\/\/   \"public\" => 0,\n\/\/   \"id_link\" => null,\n\/\/   \"text\" => 1,\n\/\/   \"cfg\" => \"{\"path\":\"\\\/\",\"host\":\"\",\"user\":\"\",\"type\":\"local\"}\"\n\/\/ ]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->getByOption('944190af24ef11eca47652540000cfbe', true);\n\n\/\/ (array) = [\n\/\/  \"path\" => \"\/\",\n\/\/  \"host\" => \"\",\n\/\/  \"user\" => \"\",\n\/\/  \"type\" => \"local\",\n\/\/  \"id\" => \"8380126d2b4d11eca47652540000cfbe\",\n\/\/  \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/  \"num\" => null,\n\/\/  \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/  \"id_group\" => null,\n\/\/  \"id_alias\" => null,\n\/\/  \"public\" => 0,\n\/\/  \"id_link\" => null,\n\/\/  \"text\" => 1\n\/\/ ];\n\n$pref->getByOption('944190af24ef11eca47652540000cfbe', false);\n\n\/\/ (array) = [\n\/\/   \"id\" => \"8380126d2b4d11eca47652540000cfbe\",\n\/\/   \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/   \"id_group\" => null,\n\/\/   \"id_alias\" => null,\n\/\/   \"public\" => 0,\n\/\/   \"id_link\" => null,\n\/\/   \"text\" => 1,\n\/\/   \"cfg\" => \"{\"path\":\"\\\/\",\"host\":\"\",\"user\":\"\",\"type\":\"local\"}\"\n\/\/ ]"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, bool $with_config = true)\n  {\n    if ($id = $this->retrieveUserIds($id_option, $this->id_user)) {\n      return $this->get($id[0], $with_config);\n    }\n\n    return null;\n  }",
            "startLine": 809,
            "endLine": 816,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "option": {
            "name": "option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($o = $this->opt->option(\\func_get_args())) {\n      if (($ids = $this->retrieveIds($o['id'])) && ($cfg = $this->get($ids[0]))) {\n        $o = bbn\\X::mergeArrays($o, $cfg);\n      }\n\n      return $o;\n    }\n\n    return null;\n  }",
            "startLine": 822,
            "endLine": 833,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "fullOptions": {
            "name": "fullOptions",
            "summary": "Returns all the children IDs of the given code with their property and their preferences.",
            "description": "```\n\/\/[\n\/\/ [\n\/\/   \"id\" => \"943d955824ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => null,\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Favourites\",\n\/\/   \"code\" => \"favourites\",\n\/\/   \"value\" => null,\n\/\/   \"num_children\" => 0,\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"9c57439824ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Permissions\",\n\/\/   \"code\" => \"permissions\",\n\/\/   \"num_children\" => 3,\n\/\/   \"icon\" => \"nf nf-fa-key\",\n\/\/   \"alias\" => [\n\/\/     \"id\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/     \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/     \"id_alias\" => null,\n\/\/     \"num\" => null,\n\/\/     \"text\" => \"Permissions\",\n\/\/     \"code\" => \"permissions\",\n\/\/     \"num_children\" => 3,\n\/\/     \"icon\" => \"nf nf-fa-key\"\n\/\/   ],\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"9ee7450224ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Plugins\",\n\/\/   \"code\" => \"plugins\",\n\/\/   \"num_children\" => 0,\n\/\/   \"icon\" => \"nf nf-mdi-puzzle\",\n\/\/   \"alias\" => [\n\/\/     \"id\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/     \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/     \"id_alias\" => null,\n\/\/     \"num\" => null,\n\/\/     \"text\" => \"Plugins\",\n\/\/     \"code\" => \"plugins\",\n\/\/     \"num_children\" => 0,\n\/\/     \"icon\" => \"nf nf-mdi-puzzle\"\n\/\/   ],\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => null,\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Sources\",\n\/\/   \"code\" => \"sources\",\n\/\/   \"value\" => null,\n\/\/   \"num_children\" => 0,\n\/\/   \"items\" => [\n\/\/     [\n\/\/       \"path\" => \"\/home\/\",\n\/\/       \"host\" => \"185.142.53.114\",\n\/\/       \"pass\" => \"******\",\n\/\/       \"user\" => \"root\",\n\/\/       \"type\" => \"ssh\",\n\/\/       \"id\" => \"042b29722c2f11eca47652540000cfbe\",\n\/\/       \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/       \"id_group\" => null,\n\/\/       \"id_alias\" => null,\n\/\/       \"public\" => 0,\n\/\/       \"id_link\" => null,\n\/\/       \"text\" => \"inova\"\n\/\/     ],\n\/\/     [\n\/\/       \"path\" => \"\",\n\/\/       \"host\" => \"qr.dev.bbn.io\",\n\/\/       \"user\" => \"qr\",\n\/\/       \"type\" => \"ssh\",\n\/\/       \"id\" => \"179d85a0284911eca47652540000cfbe\",\n\/\/       \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/       \"id_group\" => null,\n\/\/       \"id_alias\" => null,\n\/\/       \"public\" => 0,\n\/\/       \"id_link\" => null,\n\/\/       \"text\" => \"quentin\"\n\/\/     ],\n\/\/   ]\n\/\/ ]\n\/\/];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "\/\/[\n\/\/ [\n\/\/   \"id\" => \"943d955824ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => null,\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Favourites\",\n\/\/   \"code\" => \"favourites\",\n\/\/   \"value\" => null,\n\/\/   \"num_children\" => 0,\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"9c57439824ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Permissions\",\n\/\/   \"code\" => \"permissions\",\n\/\/   \"num_children\" => 3,\n\/\/   \"icon\" => \"nf nf-fa-key\",\n\/\/   \"alias\" => [\n\/\/     \"id\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/     \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/     \"id_alias\" => null,\n\/\/     \"num\" => null,\n\/\/     \"text\" => \"Permissions\",\n\/\/     \"code\" => \"permissions\",\n\/\/     \"num_children\" => 3,\n\/\/     \"icon\" => \"nf nf-fa-key\"\n\/\/   ],\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"9ee7450224ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Plugins\",\n\/\/   \"code\" => \"plugins\",\n\/\/   \"num_children\" => 0,\n\/\/   \"icon\" => \"nf nf-mdi-puzzle\",\n\/\/   \"alias\" => [\n\/\/     \"id\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/     \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/     \"id_alias\" => null,\n\/\/     \"num\" => null,\n\/\/     \"text\" => \"Plugins\",\n\/\/     \"code\" => \"plugins\",\n\/\/     \"num_children\" => 0,\n\/\/     \"icon\" => \"nf nf-mdi-puzzle\"\n\/\/   ],\n\/\/   \"items\" => [\n\/\/   ]\n\/\/ ],\n\/\/ [\n\/\/   \"id\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/   \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/   \"id_alias\" => null,\n\/\/   \"num\" => null,\n\/\/   \"text\" => \"Sources\",\n\/\/   \"code\" => \"sources\",\n\/\/   \"value\" => null,\n\/\/   \"num_children\" => 0,\n\/\/   \"items\" => [\n\/\/     [\n\/\/       \"path\" => \"\/home\/\",\n\/\/       \"host\" => \"185.142.53.114\",\n\/\/       \"pass\" => \"******\",\n\/\/       \"user\" => \"root\",\n\/\/       \"type\" => \"ssh\",\n\/\/       \"id\" => \"042b29722c2f11eca47652540000cfbe\",\n\/\/       \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/       \"id_group\" => null,\n\/\/       \"id_alias\" => null,\n\/\/       \"public\" => 0,\n\/\/       \"id_link\" => null,\n\/\/       \"text\" => \"inova\"\n\/\/     ],\n\/\/     [\n\/\/       \"path\" => \"\",\n\/\/       \"host\" => \"qr.dev.bbn.io\",\n\/\/       \"user\" => \"qr\",\n\/\/       \"type\" => \"ssh\",\n\/\/       \"id\" => \"179d85a0284911eca47652540000cfbe\",\n\/\/       \"id_option\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"id_user\" => \"930cc07724ef11eca47652540000cfbe\",\n\/\/       \"id_group\" => null,\n\/\/       \"id_alias\" => null,\n\/\/       \"public\" => 0,\n\/\/       \"id_link\" => null,\n\/\/       \"text\" => \"quentin\"\n\/\/     ],\n\/\/   ]\n\/\/ ]\n\/\/];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code)\n  {\n    if ($ops = $this->opt->fullOptions(\\func_get_args())) {\n      foreach ($ops as &$o) {\n        $o['items'] = $this->getAll($o['id']);\n      }\n\n      return $ops;\n    }\n\n    return null;\n  }",
            "startLine": 946,
            "endLine": 957,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "text": {
            "name": "text",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option)\n  {\n    if ($id_option = $this->_getIdOption($id_option)) {\n      return $this->db->selectOne($this->class_table, $this->fields['text'], [$this->fields['id'] => $id_option]);\n    }\n\n    return null;\n  }",
            "startLine": 964,
            "endLine": 971,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                }
            ]
        },
        "items": {
            "name": "items",
            "summary": "Return all the IDs of the children of the given option where the user has a preference in the user's order.",
            "description": "```\n$pref->items('finder', 'appui');\n\n\/\/ (array) = [\n\/\/   \"943d955824ef11eca47652540000cfbe\",\n\/\/   \"9c57439824ef11eca47652540000cfbe\",\n\/\/   \"9ee7450224ef11eca47652540000cfbe\",\n\/\/   \"944190af24ef11eca47652540000cfbe\",\n\/\/ ]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->items('finder', 'appui');\n\n\/\/ (array) = [\n\/\/   \"943d955824ef11eca47652540000cfbe\",\n\/\/   \"9c57439824ef11eca47652540000cfbe\",\n\/\/   \"9ee7450224ef11eca47652540000cfbe\",\n\/\/   \"944190af24ef11eca47652540000cfbe\",\n\/\/ ]"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code)\n  {\n    \/\/ Gets the Ids of the corresponding options in their natural order (num or text)\n    if ($items = $this->opt->items(\\func_get_args())) {\n      \/\/ Creating an array based on the user's order\n      $res = [];\n      \/\/ Replacing regular num values by user's values if any\n      foreach ($items as $i => $it) {\n        $res[] = ['id' => $it, 'num' => $i + 1];\n        if ($tmp = $this->get($it)) {\n          if (isset($tmp['num'])) {\n            $res[$i]['num'] = $tmp['num'];\n          }\n        }\n      }\n      \/\/ Reordering the array based on num\n      X::sortBy($res, 'num');\n      \/\/ Returns a simple array with only the IDs\n      return array_map(\n          function ($a) {\n            return $a['id'];\n          },\n          $res\n      );\n    }\n\n    return $items;\n  }",
            "startLine": 992,
            "endLine": 1019,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "options": {
            "name": "options",
            "summary": "Returns all children of the given code with they own attributes.",
            "description": "```\n$pref->options('finder', 'appui');\n\n\/\/ (array)  = [\n\/\/     [\n\/\/       \"id\" => \"943d955824ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => null,\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Favourites\",\n\/\/       \"code\" => \"favourites\",\n\/\/       \"value\" => null,\n\/\/       \"num_children\" => 0,\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"9c57439824ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Permissions\",\n\/\/       \"code\" => \"permissions\",\n\/\/       \"num_children\" => 3,\n\/\/       \"icon\" => \"nf nf-fa-key\",\n\/\/       \"alias\" => [\n\/\/         \"id\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/         \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/         \"id_alias\" => null,\n\/\/         \"num\" => null,\n\/\/         \"text\" => \"Permissions\",\n\/\/         \"code\" => \"permissions\",\n\/\/         \"num_children\" => 3,\n\/\/         \"icon\" => \"nf nf-fa-key\"\n\/\/       ],\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"9ee7450224ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Plugins\",\n\/\/       \"code\" => \"plugins\",\n\/\/       \"num_children\" => 0,\n\/\/       \"icon\" => \"nf nf-mdi-puzzle\",\n\/\/       \"alias\" => [\n\/\/         \"id\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/         \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/         \"id_alias\" => null,\n\/\/         \"num\" => null,\n\/\/         \"text\" => \"Plugins\",\n\/\/         \"code\" => \"plugins\",\n\/\/         \"num_children\" => 0,\n\/\/         \"icon\" => \"nf nf-mdi-puzzle\"\n\/\/       ],\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => null,\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Sources\",\n\/\/       \"code\" => \"sources\",\n\/\/       \"value\" => null,\n\/\/       \"num_children\" => 0,\n\/\/       \"items\" => null\n\/\/     ]\n\/\/   ];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->options('finder', 'appui');\n\n\/\/ (array)  = [\n\/\/     [\n\/\/       \"id\" => \"943d955824ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => null,\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Favourites\",\n\/\/       \"code\" => \"favourites\",\n\/\/       \"value\" => null,\n\/\/       \"num_children\" => 0,\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"9c57439824ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Permissions\",\n\/\/       \"code\" => \"permissions\",\n\/\/       \"num_children\" => 3,\n\/\/       \"icon\" => \"nf nf-fa-key\",\n\/\/       \"alias\" => [\n\/\/         \"id\" => \"9891c4d624ef11eca47652540000cfbe\",\n\/\/         \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/         \"id_alias\" => null,\n\/\/         \"num\" => null,\n\/\/         \"text\" => \"Permissions\",\n\/\/         \"code\" => \"permissions\",\n\/\/         \"num_children\" => 3,\n\/\/         \"icon\" => \"nf nf-fa-key\"\n\/\/       ],\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"9ee7450224ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Plugins\",\n\/\/       \"code\" => \"plugins\",\n\/\/       \"num_children\" => 0,\n\/\/       \"icon\" => \"nf nf-mdi-puzzle\",\n\/\/       \"alias\" => [\n\/\/         \"id\" => \"98a3dfca24ef11eca47652540000cfbe\",\n\/\/         \"id_parent\" => \"988d97ee24ef11eca47652540000cfbe\",\n\/\/         \"id_alias\" => null,\n\/\/         \"num\" => null,\n\/\/         \"text\" => \"Plugins\",\n\/\/         \"code\" => \"plugins\",\n\/\/         \"num_children\" => 0,\n\/\/         \"icon\" => \"nf nf-mdi-puzzle\"\n\/\/       ],\n\/\/       \"items\" => null\n\/\/     ],\n\/\/     [\n\/\/       \"id\" => \"944190af24ef11eca47652540000cfbe\",\n\/\/       \"id_parent\" => \"9439491824ef11eca47652540000cfbe\",\n\/\/       \"id_alias\" => null,\n\/\/       \"num\" => null,\n\/\/       \"text\" => \"Sources\",\n\/\/       \"code\" => \"sources\",\n\/\/       \"value\" => null,\n\/\/       \"num_children\" => 0,\n\/\/       \"items\" => null\n\/\/     ]\n\/\/   ];"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code)\n  {\n    \/\/ List of the options' id corresponding to the given code\n    if ($list = $this->items(\\func_get_args())) {\n      $res = [];\n      foreach ($list as $i => $li) {\n        $res[$i]          = $this->opt->option($li);\n        $res[$i]['items'] = $this->get($li);\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 1101,
            "endLine": 1115,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "order": {
            "name": "order",
            "summary": "Changes the position of the given option among its sortable list.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, int $index, bool $upd = false)\n  {\n    \/\/ What matters are the info from the parent\n    $id_parent = $this->opt->getIdParent($id_option);\n    \/\/ Only usable on sortable options\n    if (($id_parent !== false) && $this->opt->isSortable($id_parent)) {\n      \/\/ List of options IDs with personalized order\n      $items = $this->items($id_parent);\n      \/\/ Creating a new array of arrays with ID and NUM indexes\n      $res     = [];\n      $o_index = false;\n      foreach ($items as $i => $it) {\n        $res[] = [\n            $this->fields['id'] => $it,\n            $this->fields['num'] => $i + 1\n        ];\n        \/\/ If user has preference on that option, NUM will be set to the user's value\n        if ($cfg = $this->get($it)) {\n          $res[$i] = X::mergeArrays($res[$i], $cfg);\n        }\n        \/\/ This is the index of the given option\n        if ($it === $id_option) {\n          $o_index = $i;\n        }\n      }\n\n      if ($o_index === false) {\n        throw new \\Exception(X::_('Impossible to find this option'));\n      }\n      \/\/ Changing the position of all the affected options\n      if ($o_index > $index) {\n        for ($i = $index; $i < $o_index; $i++) {\n          $res[$i][$this->fields['num']]++;\n        }\n      }\n      elseif ($o_index < $index) {\n        for ($i = $o_index + 1; $i <= $index; $i++) {\n          $res[$i][$this->fields['num']]--;\n        }\n      }\n      \/\/ Changing the given option's NUM\n      $res[$o_index][$this->fields['num']] = $index + 1;\n      foreach ($res as $i => $r) {\n        if ($upd) {\n          $this->updateByOption($r[$this->fields['id']], $r);\n        }\n        else {\n          $this->add($r[$this->fields['id']], $r);\n        }\n      }\n\n      X::sortBy($res, $this->fields['num']);\n      return $res;\n    }\n  }",
            "startLine": 1127,
            "endLine": 1181,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option The option to modify"
                },
                {
                    "name": "index",
                    "position": 1,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new position"
                },
                {
                    "name": "upd",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "setByOption": {
            "name": "setByOption",
            "summary": "Sets the preference row for the current user by the option's ID",
            "description": "```\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, array $cfg)\n  {\n    if ($id = $this->retrieveUserIds($id_option, $this->id_user)) {\n      return $this->set($id[0], $cfg);\n    }\n\n    return $this->_insert($id_option, $cfg);\n  }",
            "startLine": 1195,
            "endLine": 1202,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "set": {
            "name": "set",
            "summary": "Sets the preference config for the current user by the preference's ID and returns the number of rows change.",
            "description": "```\n$pref->set('042b29722c2f11eca47652540000cfbe', []);\n\n\/\/ (int) = 1;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->set('042b29722c2f11eca47652540000cfbe', []);\n\n\/\/ (int) = 1;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $cfg = NULL)\n  {\n    return $this->db->update(\n        $this->class_cfg['table'],\n        [\n        $this->fields['cfg'] => $cfg ? json_encode($this->getCfg(false, $cfg)) : null\n        ],\n        [\n        $this->fields['id'] => $id\n        ]\n    );\n  }",
            "startLine": 1218,
            "endLine": 1229,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Sets the preference row for the current user by the preference's ID and returns the number of rows change.",
            "description": "```\npref->update('106fc38f2b7f11eca47652540000cfbe', [\n \"num\" => null,\n \"id_user\" => \"5d02d5ee269d11eca47652540000cfbe\",\n \"id_alias\" => null,\n \"id_link\" => null,\n \"text\" => \"Nextcloud\"\n]);\n\n\/\/ (int) = 1;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "pref->update('106fc38f2b7f11eca47652540000cfbe', [\n \"num\" => null,\n \"id_user\" => \"5d02d5ee269d11eca47652540000cfbe\",\n \"id_alias\" => null,\n \"id_link\" => null,\n \"text\" => \"Nextcloud\"\n]);\n\n\/\/ (int) = 1;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $cfg)\n  {\n      return $this->db->update(\n          $this->class_cfg['table'],\n          [\n          $this->fields['text'] => $cfg[$this->fields['text']] ?? null,\n          $this->fields['num'] => $cfg[$this->fields['num']] ?? null,\n          $this->fields['id_link'] => $cfg[$this->fields['id_link']] ?? null,\n          $this->fields['id_alias'] => $cfg[$this->fields['id_alias']] ?? null,\n          $this->fields['id_user'] => $this->id_user,\n          $this->fields['cfg'] => ($tmp = $this->getCfg(false, $cfg)) ? json_encode($tmp) : null\n          ],\n          [\n              $this->fields['id'] => $id\n          ]\n      );\n  }",
            "startLine": 1251,
            "endLine": 1267,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "updateByOption": {
            "name": "updateByOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, array $cfg)\n  {\n    if ($id = $this->retrieveUserIds($id_option, $this->id_user)) {\n      return $this->update($id[0], $cfg);\n    }\n\n    return $this->_insert($id_option, $cfg);\n  }",
            "startLine": 1275,
            "endLine": 1282,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Adds a new preference for the given option for the current user and returns the new preference ID.",
            "description": "```\n$pref->add('9439491824ef11eca47652540000cfbe', [\n \"num\" => null,\n \"id_user\" => \"5d02d5ee269d11eca47652540000cfbe\",\n \"id_group\" => null,\n \"id_alias\" => null,\n \"public\" => 0,\n \"id_link\" => null,\n \"text\" => \"Test\"\n]);\n\n\/\/ (String) = \"3ad7768e30c311eca47652540000cfbe\";\n\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->add('9439491824ef11eca47652540000cfbe', [\n \"num\" => null,\n \"id_user\" => \"5d02d5ee269d11eca47652540000cfbe\",\n \"id_group\" => null,\n \"id_alias\" => null,\n \"public\" => 0,\n \"id_link\" => null,\n \"text\" => \"Test\"\n]);\n\n\/\/ (String) = \"3ad7768e30c311eca47652540000cfbe\";"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, array $cfg)\n  {\n    if (\n        ($id_option = $this->_getIdOption($id_option))\n        && !$this->retrieveUserIds($id_option)\n        && $this->_insert($id_option, $cfg)\n    ) {\n      return $this->db->lastId();\n    }\n    return null;\n  }",
            "startLine": 1307,
            "endLine": 1317,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addToGroup": {
            "name": "addToGroup",
            "summary": "Adds a new preference for the given option for the current user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, array $cfg)\n  {\n    if (\n        ($id_option = $this->_getIdOption($id_option))\n        && $this->_insert($id_option, $cfg)\n    ) {\n      return $this->db->lastId();\n    }\n\n    return null;\n  }",
            "startLine": 1328,
            "endLine": 1338,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes the given preference.",
            "description": "```\n$pref->delete('3ad7768e30c311eca47652540000cfbe');\n\n\/\/ (int) = 1;\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$pref->delete('3ad7768e30c311eca47652540000cfbe');\n\n\/\/ (int) = 1;"
                }
            ],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    return $this->db->delete(\n        [\n        'table' => $this->class_cfg['table'],\n        'where' => [\n        'logic' => 'AND',\n        'conditions' => [\n          [\n            'field' => $this->fields['id'],\n            'value' => $id\n          ],\n          [\n            'logic' => 'OR',\n            'conditions' => [\n              [\n                'field' => $this->fields['id_user'],\n                'value' => $this->id_user\n              ], [\n                'field' => $this->fields['id_group'],\n                'value' => $this->id_group\n              ], [\n                'field' => $this->fields['public'],\n                'value' => 1\n              ]\n            ]\n          ]\n        ]\n        ]\n        ]\n    );\n  }",
            "startLine": 1353,
            "endLine": 1384,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "deleteUserOption": {
            "name": "deleteUserOption",
            "summary": "Deletes all the given or current user's preferences for the given option",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_user = NULL)\n  {\n    if ($id_option = $this->_getIdOption($id_option)) {\n      return $this->db->delete(\n          $this->class_cfg['table'],\n          [\n          $this->fields['id_option'] => $id_option,\n          $this->fields['id_user'] => $id_user ?: $this->id_user\n          ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 1395,
            "endLine": 1408,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ]
        },
        "deleteGroupOption": {
            "name": "deleteGroupOption",
            "summary": "Deletes all the given group's preferences for the given option",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_group)\n  {\n    if ($id_option = $this->_getIdOption($id_option)) {\n      return $this->db->delete(\n          $this->class_cfg['table'],\n          [\n          $this->fields['id_option'] => $id_option,\n          $this->fields['id_group'] => $id_group\n          ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 1419,
            "endLine": 1432,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_group",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "group"
                }
            ]
        },
        "setCfg": {
            "name": "setCfg",
            "summary": "Sets (or unsets) the cfg field of a given preference based on its ID",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = NULL, array $cfg = NULL)\n  {\n    if (null !== $cfg) {\n      $cfg    = $this->getCfg(null, $cfg);\n      $config = json_encode($cfg);\n    }\n    else {\n      $config = null;\n    }\n\n    return $this->db->update(\n        $this->class_cfg['table'],\n        [\n        $this->fields['cfg'] => $config\n        ],\n        [\n        $this->fields['id'] => $id\n        ]\n    );\n  }",
            "startLine": 1442,
            "endLine": 1461,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setText": {
            "name": "setText",
            "summary": "Sets (or unsets) the text field of the given preference and returns the result of the executed query",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $text = NULL)\n  {\n    return $this->db->update(\n        $this->class_cfg['table'],\n        [\n        $this->fields['text'] => $text\n        ],\n        [\n        $this->fields['id'] => $id\n        ]\n    );\n  }",
            "startLine": 1471,
            "endLine": 1482,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setLink": {
            "name": "setLink",
            "summary": "Sets (or unsets) the id_link field of the given preference and returns the result of the executed query",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $id_link = NULL)\n  {\n    return $this->db->update(\n        $this->class_cfg['table'],\n        [\n        $this->fields['id_link'] => $id_link\n        ],\n        [\n        $this->fields['id'] => $id\n        ]\n    );\n  }",
            "startLine": 1492,
            "endLine": 1503,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_link",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "link"
                }
            ]
        },
        "addLink": {
            "name": "addLink",
            "summary": "Sets (or unsets) the id_link field of the given preference and returns the result of the executed query",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, string $id_link)\n  {\n    $id = $this->db->selectOne(\n        $this->class_cfg['table'],\n        $this->fields['id'],\n        [\n        $this->fields['id_user'] => $this->id_user,\n        $this->fields['id_option'] => $id_option\n        ]\n    );\n    if ($id) {\n      if (\n          $this->db->update(\n              $this->class_cfg['table'],\n              [\n              $this->fields['id_link'] => $id_link\n              ],\n              ['id' => $id]\n          )\n      ) {\n        return $id;\n      }\n    }\n    elseif (\n        $this->db->insert(\n            $this->class_cfg['table'],\n            [\n            $this->fields['id_user'] => $this->id_user,\n            $this->fields['id_option'] => $id_option,\n            $this->fields['id_link'] => $id_link\n            ]\n        )\n    ) {\n      return $this->db->lastId();\n    }\n\n    return null;\n  }",
            "startLine": 1513,
            "endLine": 1550,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_link",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "link"
                }
            ]
        },
        "getShared": {
            "name": "getShared",
            "summary": "Returns an array",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (bbn\\Str::isUid($id)) {\n      return $this->db->rselectAll(\n          $this->class_table,\n          [\n          $this->fields['id'],\n          $this->fields['id_user'],\n          $this->fields['id_group']\n          ],\n          [\n          $this->fields['id_alias'] => $id\n          ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 1559,
            "endLine": 1576,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "makePublic": {
            "name": "makePublic",
            "summary": "Makes (or unmakes) the given preference public.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, bool $cancel = false)\n  {\n    if ($cfg = $this->get($id)) {\n      return $this->db->update(\n          $this->class_table,\n          ['public' => $cancel ? 0 : 1],\n          [\n          $this->fields['id'] => $id\n          ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 1587,
            "endLine": 1600,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cancel",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "shareWithGroup": {
            "name": "shareWithGroup",
            "summary": "Shares (or unshares) the given preference to the given group.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $id_group, bool $cancel = false)\n  {\n    if ($cfg = $this->get($id)) {\n      $id_share = $this->db->selectOne(\n          $this->class_table,\n          $this->fields['id'],\n          [\n          'id_alias' => $id,\n          'id_group' => $id_group\n          ]\n      );\n      if ($cancel && $id_share) {\n        return $this->db->delete($this->class_table, [$this->fields['id'] => $id_share]);\n      }\n      elseif (!$cancel && !$id_share) {\n        return $this->db->insert(\n            $this->class_table,\n            [\n            'id_option' => $cfg['id_option'],\n            'id_alias' => $id,\n            'id_group' => $id_group\n            ]\n        );\n      }\n\n      return 0;\n    }\n\n    return null;\n  }",
            "startLine": 1612,
            "endLine": 1641,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_group",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "group"
                },
                {
                    "name": "cancel",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "shareWithUser": {
            "name": "shareWithUser",
            "summary": "Shares (or unshares) the given preference to the given user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $id_user, bool $cancel = false)\n  {\n    if ($cfg = $this->get($id)) {\n      $id_share = $this->db->selectOne(\n          $this->class_table,\n          $this->fields['id'],\n          [\n          'id_alias' => $id,\n          'id_user' => $id_user\n          ]\n      );\n      if ($cancel && $id_share) {\n        return $this->db->delete($this->class_table, [$this->fields['id'] => $id_share]);\n      }\n      elseif (!$cancel && !$id_share) {\n        return $this->db->insert(\n            $this->class_table,\n            [\n            'id_option' => $cfg['id_option'],\n            'id_alias' => $id,\n            'id_user' => $id_user\n            ]\n        );\n      }\n\n      return 0;\n    }\n\n    return null;\n  }",
            "startLine": 1653,
            "endLine": 1682,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "cancel",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "addBit": {
            "name": "addBit",
            "summary": "Adds a bit to a preference",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option, array $cfg)\n  {\n    if (\n        ($id_user_option = $this->_getIdOption($id_user_option))\n        && $this->isAuthorized($id_user_option)\n        && ($c = $this->class_cfg['arch']['user_options_bits'])\n    ) {\n      $to_cfg = $this->getBitCfg(null, $cfg);\n      if (isset($to_cfg['items'])) {\n        unset($to_cfg['items']);\n      }\n\n      if (!empty($to_cfg)) {\n        if (!empty($cfg[$c['cfg']])) {\n          if (\\bbn\\Str::isJson($cfg[$c['cfg']])) {\n            $cfg[$c['cfg']] = json_decode($cfg[$c['cfg']], true);\n          }\n\n          if (\\is_array($cfg[$c['cfg']])) {\n            $cfg[$c['cfg']] = array_merge($cfg[$c['cfg']], $to_cfg);\n          }\n          else {\n            $cfg[$c['cfg']] = $to_cfg;\n          }\n        }\n        else {\n          $cfg[$c['cfg']] = $to_cfg;\n        }\n\n        $cfg[$c['cfg']] = json_encode($cfg[$c['cfg']]);\n      }\n\n      if (\n          $this->db->insert(\n              $this->class_cfg['tables']['user_options_bits'],\n              [\n              $c['id_user_option'] => $id_user_option,\n              $c['id_parent'] => $cfg[$c['id_parent']] ?? null,\n              $c['id_option'] => $cfg[$c['id_option']] ?? null,\n              $c['num'] => $cfg[$c['num']] ?? null,\n              $c['text'] => $cfg[$c['text']] ?? '',\n              $c['cfg'] => $cfg[$c['cfg']] ?? null,\n              ]\n          )\n      ) {\n        return $this->db->lastId();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 1693,
            "endLine": 1743,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option The preference's ID"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's values"
                }
            ]
        },
        "deleteBit": {
            "name": "deleteBit",
            "summary": "Deletes a preference's bit",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (\\bbn\\Str::isUid($id)) {\n      return $this->db->deleteIgnore(\n          $this->class_cfg['tables']['user_options_bits'],\n          [$this->class_cfg['arch']['user_options_bits']['id'] => $id]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 1752,
            "endLine": 1762,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                }
            ]
        },
        "deleteBits": {
            "name": "deleteBits",
            "summary": "Deletes all bits from a preference",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option)\n  {\n    if (\\bbn\\Str::isUid($id_user_option) && $this->isAuthorized($id_user_option)) {\n      $tree = $this->getTree($id_user_option);\n      $i = 0;\n      if ($tree && !empty($tree['items'])) {\n        $this->deleteSubBits($tree['items'], $id_user_option);\n        $i += (int)$this->deleteBit($tree['id']);\n      }\n\n      return $i;\n    }\n\n    return null;\n  }",
            "startLine": 1790,
            "endLine": 1804,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                }
            ]
        },
        "updateBit": {
            "name": "updateBit",
            "summary": "Updates a preference's bit",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $cfg, bool $merge_config = true)\n  {\n    if (\\bbn\\Str::isUid($id)) {\n      $c = $this->class_cfg['arch']['user_options_bits'];\n      if (\\array_key_exists($c['id'], $cfg)) {\n        unset($cfg[$c['id']]);\n      }\n\n      if (!empty($cfg[$c['cfg']]) && \\bbn\\Str::isJson($cfg[$c['cfg']])) {\n        $cfg[$c['cfg']] = json_decode($cfg[$c['cfg']], true);\n      }\n\n      $to_cfg = $this->getBitCfg(null, $cfg[$c['cfg']] ?? $cfg);\n      if (isset($to_cfg['items'])) {\n        unset($to_cfg['items']);\n      }\n\n      $update   = [];\n      $from_cfg = $this->getBitCfg($id);\n      if (!empty($to_cfg)) {\n        if ($merge_config && !empty($from_cfg)) {\n          $update['cfg'] = json_encode(array_merge($from_cfg, $to_cfg));\n        }\n        else {\n          $update['cfg'] = json_encode($to_cfg);\n        }\n      }\n      elseif (!$merge_config) {\n        $update['cfg'] = null;\n      }\n\n      if (isset($cfg[$c['id_parent']])) {\n        $update[$c['id_parent']] = $cfg[$c['id_parent']];\n      }\n      if (isset($cfg[$c['id_option']])) {\n        $update[$c['id_option']] = $cfg[$c['id_option']];\n      }\n      if (isset($cfg[$c['num']])) {\n        $update[$c['num']] = $cfg[$c['num']];\n      }\n      if (isset($cfg[$c['text']])) {\n        $update[$c['text']] = $cfg[$c['text']];\n      }\n\n      return count($update) ? $this->db->update(\n          $this->class_cfg['tables']['user_options_bits'],\n          $update,\n          [$c['id'] => $id]\n      ) : 0;\n    }\n\n    return null;\n  }",
            "startLine": 1815,
            "endLine": 1867,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's values"
                },
                {
                    "name": "merge_config",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getBit": {
            "name": "getBit",
            "summary": "Returns a single preference's bit",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, bool $with_config = true)\n  {\n    if (\n        \\bbn\\Str::isUid($id)\n        && ($bit = $this->db->rselect(\n            $this->class_cfg['tables']['user_options_bits'],\n            [],\n            [\n            $this->class_cfg['arch']['user_options_bits']['id'] => $id\n            ]\n        ))\n    ) {\n      if ($this->isAuthorized($bit['id_user_option'])) {\n        if ($with_config) {\n          return $this->explodeBitCfg($bit);\n        }\n\n        return $bit;\n      }\n    }\n\n    return [];\n  }",
            "startLine": 1878,
            "endLine": 1900,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getBits": {
            "name": "getBits",
            "summary": "Returns the bits list of a preference",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option, $id_parent = false, bool $with_config = true)\n  {\n    if ($this->isAuthorized($id_user_option)) {\n      $c     = $this->class_cfg['arch']['user_options_bits'];\n      $t     = $this;\n      $where = [[\n        'field' => $c['id_user_option'],\n        'value' => $id_user_option\n      ]];\n      if (\\is_null($id_parent) || \\bbn\\Str::isUid($id_parent)) {\n        $where[] = [\n          'field' => $c['id_parent'],\n          empty($id_parent) ? 'operator' : 'value' => $id_parent ?: 'isnull'\n        ];\n      }\n\n      if (\n          \\bbn\\Str::isUid($id_user_option)\n          && ($bits = $this->db->rselectAll(\n              [\n              'table' => $this->class_cfg['tables']['user_options_bits'],\n              'fields' => [],\n              'where' => [\n              'conditions' => $where\n              ],\n              'order' => [[\n              'field' => $c['num'],\n              'dir' => 'ASC'\n              ]]\n              ]\n          ))\n      ) {\n        if (!empty($with_config)) {\n          return array_map(\n              function ($b) use ($t) {\n                return $t->explodeBitCfg($b);\n              },\n              $bits\n          );\n        }\n\n        return $bits;\n      }\n    }\n\n    return [];\n  }",
            "startLine": 1912,
            "endLine": 1958,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "parent The bits'parent ID"
                },
                {
                    "name": "with_config",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getBitsByIdOption": {
            "name": "getBitsByIdOption",
            "summary": "Returns the bits list of an option's id",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_opt, $id_parent = false, bool $with_config = true)\n  {\n    $c     = $this->class_cfg['arch']['user_options_bits'];\n    $where = [[\n      'field' => $c['id_user_option'],\n      'value' => $id_opt\n    ]];\n    if (\\is_null($id_parent) || \\bbn\\Str::isUid($id_parent)) {\n      $where[] = [\n        'field' => $c['id_parent'],\n        empty($id_parent) ? 'operator' : 'value' => $id_parent ?: 'isnull'\n      ];\n    }\n\n    if (\n        \\bbn\\Str::isUid($id_opt)\n        && ($bits = $this->db->rselectAll(\n            [\n            'table' => $this->class_cfg['tables']['user_options_bits'],\n            'fields' => [],\n            'where' => $where,\n            'order' => [[\n            'field' => $c['num'],\n            'dir' => 'ASC'\n            ]]\n            ]\n        ))\n    ) {\n      $res = [];\n      foreach ($bits as $bit) {\n        if ($this->isAuthorized($bit['id_user_option'])) {\n          $res[] = $with_config ? $this->explodeBitCfg($bit) : $bit;\n        }\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 1970,
            "endLine": 2009,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_opt",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "opt"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "parent The bits'parent ID"
                },
                {
                    "name": "with_config",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config"
                }
            ]
        },
        "getFullBits": {
            "name": "getFullBits",
            "summary": "Returns the hierarchical bits list of a preference",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option, string $id_parent = NULL, bool $with_config = true)\n  {\n    if ($this->isAuthorized($id_user_option)) {\n      $c = $this->class_cfg['arch']['user_options_bits'];\n      $t = $this;\n      return array_map(\n          function ($b) use ($t, $c, $id_user_option, $with_config) {\n            if (!empty($with_config)) {\n              $b = $t->explodeBitCfg($b);\n            }\n\n            $b['items'] = $t->getFullBits($id_user_option, $b[$c['id']], $with_config);\n            return $b;\n          },\n          $this->db->rselectAll(\n              [\n              'table' => $this->class_cfg['tables']['user_options_bits'],\n              'fields' => [],\n              'where' => [\n              'conditions' => [[\n              'field' => $c['id_user_option'],\n              'value' => $id_user_option\n              ], [\n              'field' => $c['id_parent'],\n              empty($id_parent) ? 'operator' : 'value' => $id_parent ?: 'isnull'\n              ]]\n              ],\n              'order' => [$c['num'] => 'ASC']\n              ]\n          )\n      );\n    }\n\n    return [];\n  }",
            "startLine": 2021,
            "endLine": 2055,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option The preference's ID"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "parent The parent's ID of a bit. Default: null"
                },
                {
                    "name": "with_config",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config Set it to false if you don't want the preference's cfg field values on the results."
                }
            ]
        },
        "getBitsOrder": {
            "name": "getBitsOrder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option)\n  {\n    if ($this->isAuthorized($id_user_option)) {\n      $tab1 = $this->class_cfg['tables']['user_options'];\n      $tab2 = $this->class_cfg['tables']['user_options_bits'];\n      $cfg  = $this->class_cfg['arch']['user_options'];\n      $cfg2 = $this->class_cfg['arch']['user_options_bits'];\n      if ($this->db->selectOne($tab1, $cfg['id_user'], ['id' => $id_user_option]) === $this->id_user) {\n        return $this->db->getColumnValues($tab2, $cfg2['id_option'], [$cfg2['id_user_option'] => $id_user_option], [$cfg2['num'] => 'ASC']);\n      }\n    }\n\n    return null;\n  }",
            "startLine": 2063,
            "endLine": 2076,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option"
                }
            ]
        },
        "getTree": {
            "name": "getTree",
            "summary": "Returns a preference and its hierarchical bits list",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, bool $with_config = true)\n  {\n    if (\n        \\bbn\\Str::isUid($id)\n        && ($p = $this->get($id, $with_config))\n    ) {\n      $p['items'] = $this->getFullBits($id, null, $with_config);\n      return $p;\n    }\n\n    return [];\n  }",
            "startLine": 2086,
            "endLine": 2097,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The preference's ID"
                },
                {
                    "name": "with_config",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "config Set it to false if you don't want the preference's cfg field values on the results."
                }
            ]
        },
        "explodeBitCfg": {
            "name": "explodeBitCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($bit)\n  {\n    $c = $this->class_cfg['arch']['user_options_bits'];\n    if (\n        !empty($bit[$c['cfg']])\n        && ($cfg = json_decode($bit[$c['cfg']], true))\n    ) {\n      foreach ($cfg as $i => $v) {\n        if (!array_key_exists($i, $bit)) {\n          $bit[$i] = $v;\n        }\n      }\n    }\n\n    unset($bit[$c['cfg']]);\n    return $bit;\n  }",
            "startLine": 2104,
            "endLine": 2120,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "bit",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "nextBitNum": {
            "name": "nextBitNum",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (\n        \\bbn\\Str::isUid($id)\n        && ($max = $this->db->selectOne(\n            $this->class_cfg['tables']['user_options_bits'],\n            'MAX(num)',\n            [$this->class_cfg['arch']['user_options_bits']['id_user_option'] => $id]\n        ))\n    ) {\n      return $max + 1;\n    }\n\n    return null;\n  }",
            "startLine": 2127,
            "endLine": 2141,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getBitCfg": {
            "name": "getBitCfg",
            "summary": "Gets the bit's cfg array, normalized either from the DB or from the $cfg argument",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = NULL, array $cfg = NULL)\n  {\n    if (\n        (null !== $cfg)\n        || ($cfg = $this->db->selectOne(\n            $this->class_cfg['tables']['user_options_bits'],\n            $this->class_cfg['arch']['user_options_bits']['cfg'],\n            [$this->class_cfg['arch']['user_options_bits']['id'] => $id ]\n        ))\n    ) {\n      $fields = array_values($this->class_cfg['arch']['user_options_bits']);\n      if (bbn\\Str::isJson($cfg)) {\n        $cfg = json_decode($cfg, 1);\n      }\n\n      if (\\is_array($cfg)) {\n        $new = [];\n        foreach ($cfg as $k => $v) {\n          if (!\\in_array($k, $fields, true)) {\n            $new[$k] = $v;\n          }\n        }\n\n        return $new;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 2151,
            "endLine": 2179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "orderBit": {
            "name": "orderBit",
            "summary": "Orders a bit.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, int $pos)\n  {\n    if (\n        \\bbn\\Str::isUid($id)\n        && ($cf = $this->getClassCfg())\n        && ($cfg = $cf['arch']['user_options_bits'])\n        && ($bit = $this->getBit($id))\n        && ($old = (int)$bit[$cfg['num']])\n        && !empty($pos)\n        && ($old !== $pos)\n        && ($bits = $this->getBits($bit[$cfg['id_user_option']], $bit[$cfg['id_parent']]))\n    ) {\n      $past_new = false;\n      $past_old = false;\n      $p        = 1;\n      $changed  = 0;\n      foreach ($bits as $ele) {\n        $upd = [];\n        if ($past_old && !$past_new) {\n          $upd[$cfg['num']] = $p - 1;\n        }\n        elseif (!$past_old && $past_new) {\n          $upd[$cfg['num']] = $p + 1;\n        }\n\n        if ($id === $ele['id']) {\n          $upd[$cfg['num']] = $pos;\n          $past_old         = 1;\n        }\n        elseif ($p === $pos) {\n          $upd[$cfg['num']] = $p + ($pos > $old ? -1 : 1);\n          $past_new         = 1;\n        }\n\n        if (!empty($upd)) {\n          $changed += $this->db->update($cf['tables']['user_options_bits'], $upd, [$cfg['id'] => $ele['id']]);\n        }\n\n        if ($past_new && $past_old) {\n          break;\n        }\n\n        $p++;\n      }\n\n      return (bool)$changed;\n    }\n\n    return null;\n  }",
            "startLine": 2190,
            "endLine": 2239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                },
                {
                    "name": "pos",
                    "position": 1,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new position"
                }
            ]
        },
        "fixBitsOrder": {
            "name": "fixBitsOrder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option, string $id_parent = NULL, $deep = false)\n  {\n    if (\n        \\bbn\\Str::isUid($id_user_option)\n        && (\\bbn\\Str::isUid($id_parent) || \\is_null($id_parent))\n    ) {\n      $cfg   = $this->class_cfg['arch']['user_options_bits'];\n      $fixed = 0;\n      foreach ($this->getBits($id_user_option, $id_parent, false) as $i => $b) {\n        if ($deep) {\n          $fixed += $this->fixBitsOrder($id_user_option, $b[$cfg['id']], $deep);\n        }\n\n        if ($b[$cfg['num']] !== ($i + 1)) {\n          $fixed += $this->db->update($this->class_cfg['tables']['user_options_bits'], [$cfg['num'] => $i + 1], [$cfg['id'] => $b[$cfg['id']]]);\n        }\n      }\n\n      return $fixed;\n    }\n\n    return null;\n  }",
            "startLine": 2249,
            "endLine": 2271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "parent"
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "moveBit": {
            "name": "moveBit",
            "summary": "Moves a bit.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $id_parent = NULL)\n  {\n    if (\n        \\bbn\\Str::isUid($id)\n        && ((\\bbn\\Str::isUid($id_parent) && $this->getBit($id_parent))\n        || \\is_null($id_parent)        )\n        && ($bit = $this->getBit($id))\n        && ($cf = $this->getClassCfg())\n        && ($cfg = $cf['arch']['user_options_bits'])\n    ) {\n      $upd = [\n        $cfg['id_parent'] => $id_parent,\n        $cfg['num'] => $this->getMaxBitNum($bit[$cfg['id_user_option']], $id_parent, true)\n      ];\n      return (bool)$this->db->update($cf['tables']['user_options_bits'], $upd, [$cfg['id'] => $id]);\n    }\n\n    return null;\n  }",
            "startLine": 2282,
            "endLine": 2300,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The new parent's ID"
                }
            ]
        },
        "getMaxBitNum": {
            "name": "getMaxBitNum",
            "summary": "Gets the maximum num value of the user option's bits.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user_option, string $id_parent = NULL, bool $incr = false)\n  {\n    if (\n        \\bbn\\Str::isUid($id_user_option)\n        && (\\bbn\\Str::isUid($id_parent) || is_null($id_parent))\n        && ($cf = $this->getClassCfg())\n        && ($cfg = $cf['arch']['user_options_bits'])\n    ) {\n      if (\n          $max = $this->db->selectOne(\n              [\n              'table' => $cf['tables']['user_options_bits'],\n              'fields' => [\"MAX($cfg[num])\"],\n              'where' => [\n              'conditions' => [[\n              'field' => $cfg['id_user_option'],\n              'value' => $id_user_option\n              ], [\n              'field' => $cfg['id_parent'],\n              empty($id_parent) ? 'operator' : 'value' => $id_parent ?: 'isnull'\n              ]]\n              ]\n              ]\n          )\n      ) {\n          $max = (int)$max;\n          return $incr ? $max + 1 : $max;\n      }\n      return 0;\n    }\n    return 0;\n  }",
            "startLine": 2311,
            "endLine": 2342,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user_option The user option's ID"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "parent      The parent's ID"
                },
                {
                    "name": "incr",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Set it to true if you want the result increased by 1"
                }
            ]
        },
        "getByBit": {
            "name": "getByBit",
            "summary": "Gets a preference row from a bit ID",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    $t =& $this;\n    if (\\bbn\\Str::isUid($id)) {\n      return $this->db->rselect(\n          [\n          'table' => $this->class_cfg['table'],\n          'fields' => array_map(\n              function ($v) use ($t) {\n                return $t->db->cfn($v, $t->class_cfg['table']);\n              },\n              array_values($this->class_cfg['arch']['user_options'])\n          ),\n          'join' => [[\n          'table' => $this->class_cfg['tables']['user_options_bits'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->class_cfg['arch']['user_options_bits']['id_user_option'],\n              'exp' => $this->class_cfg['table'] . '.' . $this->fields['id']\n            ]]\n          ]\n          ]],\n          'where' => [\n          $this->class_cfg['tables']['user_options_bits'] . '.' . $this->class_cfg['arch']['user_options_bits']['id'] => $id\n          ]\n          ]\n      );\n    }\n    return null;\n  }",
            "startLine": 2351,
            "endLine": 2380,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                }
            ]
        },
        "getIdByBit": {
            "name": "getIdByBit",
            "summary": "Gets the preference's ID from a bit ID",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (\\bbn\\Str::isUid($id) && ($p = $this->getByBit($id))) {\n      return $this->db->selectOne(\n          [\n          'table' => $this->class_cfg['table'],\n          'field' => $this->class_cfg['table'] . '.' . $this->fields['id'],\n          'join' => [[\n          'table' => $this->class_cfg['tables']['user_options_bits'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->class_cfg['arch']['user_options_bits']['id_user_option'],\n              'exp' => $this->class_cfg['table'] . '.' . $this->fields['id']\n            ]]\n          ]\n          ]],\n          'where' => [\n          $this->class_cfg['tables']['user_options_bits'] . '.' . $this->class_cfg['arch']['user_options_bits']['id'] => $id\n          ]\n          ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 2389,
            "endLine": 2413,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The bit's ID"
                }
            ]
        },
        "textValue": {
            "name": "textValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option, $id_user = NULL, $id_group = NULL)\n  {\n    if (\\bbn\\Str::isUid($id_option)) {\n      $res = [];\n      if ($ids = $this->_retrieveIds($id_option, $id_user, $id_group)) {\n        foreach ($ids as $id) {\n          $res[] = $this->db->rselect(\n              $this->class_cfg['table'],\n              [\n              'value' => $this->fields['id'],\n              'text' => $this->fields['text']\n              ],\n              ['id' => $id]\n          );\n        }\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 2423,
            "endLine": 2444,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_group",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "group"
                }
            ]
        },
        "getDb": {
            "name": "getDb",
            "summary": "Returns the bbn\\Db instance",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db;\n  }",
            "startLine": 2451,
            "endLine": 2454,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Db"
            ],
            "parent": false,
            "arguments": []
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 64,
            "endLine": 71,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getInstance": {
            "name": "getInstance",
            "summary": "Returns the instance of the singleton or null.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$retriever_instance;\n  }",
            "startLine": 44,
            "endLine": 47,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "self"
            ],
            "parent": false,
            "arguments": []
        },
        "retrieverExists": {
            "name": "retrieverExists",
            "summary": "Returns true if an instance as been initiated.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$retriever_exists;\n  }",
            "startLine": 54,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter)\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    $f = $this->class_cfg['arch'][$this->class_table_index];\n    if (is_string($filter)) {\n      $cfg = [$f['id'] => $filter];\n    }\n    elseif (is_array($filter)) {\n      $cfg = $filter;\n    }\n\n    if (!empty($cfg) && $arr = $this->db->count(\n      $this->class_table,\n      $cfg\n    )) {\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 37,
            "endLine": 59,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getFields": {
            "name": "getFields",
            "summary": "Returns the fields of the main table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 78,
            "endLine": 81,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "insert": {
            "name": "insert",
            "summary": "Inserts a new row in the table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $data)\n  {\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      if ($this->db->insert($ccfg['table'], $data)) {\n        return $this->db->lastId();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 91,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "selectOne": {
            "name": "selectOne",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $field, $filter, array $order = [])\n  {\n    if ($res = $this->dbConfigSingleSelection($filter, $order, false, [$field])) {\n      return $res[$field] ?? null;\n    }\n\n    return null;\n  }",
            "startLine": 159,
            "endLine": 166,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "field",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "filter",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "select": {
            "name": "select",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, true);\n  }",
            "startLine": 177,
            "endLine": 180,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "stdClass"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "rselect": {
            "name": "rselect",
            "summary": "Retrieves a row as an array from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, false);\n  }",
            "startLine": 191,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "count": {
            "name": "count",
            "summary": "Returns the number of rows from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter = [])\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    return $this->db->count($this->class_table, $filter);\n  }",
            "startLine": 204,
            "endLine": 211,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "selectAll": {
            "name": "selectAll",
            "summary": "Returns an array of rows as objects from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, true);\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "rselectAll": {
            "name": "rselectAll",
            "summary": "Returns an array of rows as arrays from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, false);\n  }",
            "startLine": 240,
            "endLine": 243,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 193,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTreeRef": {
            "name": "getOptionsTreeRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTreeRef(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 218,
            "endLine": 221,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsRef": {
            "name": "getOptionsRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptionsRef(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 230,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 236,
            "endLine": 239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValueRef": {
            "name": "getOptionsTextValueRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptionsRef($id) : [];\n  }",
            "startLine": 242,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 254,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 260,
            "endLine": 272,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 275,
            "endLine": 278,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 281,
            "endLine": 284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 287,
            "endLine": 290,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 293,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "setCurrent": {
            "name": "setCurrent",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_option)\n  {\n    self::_set_current($id_option);\n  }",
            "startLine": 29,
            "endLine": 32,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "void"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                }
            ]
        },
        "getCurrent": {
            "name": "getCurrent",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Preferences",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$current;\n  }",
            "startLine": 37,
            "endLine": 40,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_users_options",
            "tables": {
                "user_options": "bbn_users_options",
                "user_options_bits": "bbn_users_options_bits"
            },
            "arch": {
                "user_options": {
                    "id": "id",
                    "id_option": "id_option",
                    "num": "num",
                    "id_user": "id_user",
                    "id_group": "id_group",
                    "id_alias": "id_alias",
                    "public": "public",
                    "id_link": "id_link",
                    "text": "text",
                    "cfg": "cfg"
                },
                "user_options_bits": {
                    "id": "id",
                    "id_user_option": "id_user_option",
                    "id_parent": "id_parent",
                    "id_option": "id_option",
                    "num": "num",
                    "text": "text",
                    "cfg": "cfg"
                }
            }
        },
        "retriever_instance": {},
        "retriever_exists": true,
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "current": null
    },
    "constants": null,
    "summary": "A user's preference system linked to options and user classes",
    "description": "A preference consists in a row with an ID_OPTION and a ID_USER, ID_GROUP, or PUBLIC.\nThe class needs a user object on which each query will be based.\nThis class must be able to:\n- read options with the same arguments as the option class (filtered based on preference existence)\n- retrieve preference(s) for an option\n- write preference by adding to an existing set or setting a unique",
    "description_parts": [
        {
            "type": "text",
            "content": "<p>A preference consists in a row with an ID_OPTION and a ID_USER, ID_GROUP, or PUBLIC.\nThe class needs a user object on which each query will be based.\nThis class must be able to:<\/p>\n<ul>\n<li>read options with the same arguments as the option class (filtered based on preference existence)<\/li>\n<li>retrieve preference(s) for an option<\/li>\n<li>write preference by adding to an existing set or setting a unique<\/li>\n<\/ul>"
        }
    ]
}