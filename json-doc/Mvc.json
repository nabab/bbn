{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Mvc",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Singleton",
        "bbn\\Mvc\\Common"
    ],
    "interfaces": {
        "bbn\\Mvc\\Api": {
            "name": "bbn\\Mvc\\Api"
        }
    },
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Mvc.php",
    "startLine": 42,
    "endLine": 1440,
    "contentConstructor": {
        "file": "bbn\\Mvc",
        "returns": null
    },
    "methods": {
        "initPath": {
            "name": "initPath",
            "summary": "Sets all the different paths' properties.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if (!self::$_app_name) {\n          self::$_app_name   = BBN_APP_NAME;\n          self::$_app_path   = BBN_APP_PATH;\n          self::$_app_prefix = BBN_APP_PREFIX;\n          self::$_cur_path   = BBN_CUR_PATH;\n          self::$_lib_path   = BBN_LIB_PATH;\n          self::$_data_path  = BBN_DATA_PATH;\n      }\n  }",
            "startLine": 174,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAppName": {
            "name": "getAppName",
            "summary": "Returns the current app's name.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return self::$_app_name;\n  }",
            "startLine": 192,
            "endLine": 195,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppPrefix": {
            "name": "getAppPrefix",
            "summary": "Returns the current app's prefix if any.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return self::$_app_prefix;\n  }",
            "startLine": 203,
            "endLine": 206,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getAppPath": {
            "name": "getAppPath",
            "summary": "Returns the current app's full path (with src\/ at the end if raw if false).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($raw = false)\n  {\n        return self::$_app_path.($raw ? '' : 'src\/');\n  }",
            "startLine": 216,
            "endLine": 219,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "raw",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "getCurPath": {
            "name": "getCurPath",
            "summary": "Returns the web public path of the app.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return self::$_cur_path;\n  }",
            "startLine": 227,
            "endLine": 230,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getLibPath": {
            "name": "getLibPath",
            "summary": "Returns the full path of the libraries (vendor folder).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return self::$_lib_path;\n  }",
            "startLine": 238,
            "endLine": 241,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getDataPath": {
            "name": "getDataPath",
            "summary": "Returns the full path of the data; if plugin is provided gives the path for the plugin's data.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n        return BBN_DATA_PATH.($plugin ? 'plugins\/'.$plugin.'\/' : '');\n  }",
            "startLine": 251,
            "endLine": 254,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getTmpPath": {
            "name": "getTmpPath",
            "summary": "Returns the full path of the temp data; if plugin is provided gives the path for the plugin's temp data.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n        return self::$_app_name ? self::getDataPath().'tmp\/'.($plugin ? $plugin.'\/' : '') : '';\n  }",
            "startLine": 264,
            "endLine": 267,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getLogPath": {
            "name": "getLogPath",
            "summary": "Returns the full path of the logs.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n        return self::$_app_name ? self::getDataPath().'logs\/'.($plugin ? $plugin.'\/' : '') : '';\n  }",
            "startLine": 279,
            "endLine": 282,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getCachePath": {
            "name": "getCachePath",
            "summary": "Returns ths full path of the cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n        return BBN_DATA_PATH.'cache\/'.($plugin ? $plugin.'\/' : '');\n  }",
            "startLine": 294,
            "endLine": 297,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getContentPath": {
            "name": "getContentPath",
            "summary": "Returns the full path of the content data; if plugin is provided gives the path for the plugin's content data.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n        return self::$_app_name ? self::getDataPath().($plugin ? 'plugins\/'.$plugin.'\/' : 'content\/') : '';\n  }",
            "startLine": 307,
            "endLine": 310,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getPluginUrl": {
            "name": "getPluginUrl",
            "summary": "Returns the URL part of the given plugin.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin_name)\n  {\n      if ($mvc = self::getInstance()) {\n          return $mvc->pluginUrl($plugin_name);\n      }\n\n        return null;\n  }",
            "startLine": 320,
            "endLine": 327,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin_name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPluginPath": {
            "name": "getPluginPath",
            "summary": "Returns the path of the given plugin.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($plugin_name)\n  {\n      if ($mvc = self::getInstance()) {\n          return $mvc->pluginPath($plugin_name);\n      }\n\n        return null;\n  }",
            "startLine": 337,
            "endLine": 344,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin_name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getUserTmpPath": {
            "name": "getUserTmpPath",
            "summary": "Returns path for the user's temp dir",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n      if (!self::$_app_name) {\n          return null;\n      }\n\n      if (!$id_user) {\n          $usr = \\bbn\\User::getInstance();\n        if ($usr) {\n            $id_user = $usr->getId();\n        }\n      }\n\n      if ($id_user) {\n          return self::getDataPath().'users\/'.$id_user.'\/tmp\/'.($plugin ? $plugin.'\/' : '');\n      }\n\n        return null;\n  }",
            "startLine": 355,
            "endLine": 373,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getUserDataPath": {
            "name": "getUserDataPath",
            "summary": "Returns path for the user's dir",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n      if (!self::$_app_name) {\n          return null;\n      }\n\n      if (!$id_user) {\n          $usr = \\bbn\\User::getInstance();\n        if ($usr) {\n            $id_user = $usr->getId();\n        }\n      }\n\n      if ($id_user) {\n          return self::getDataPath().'users\/'.$id_user.'\/data\/'.($plugin ? $plugin.'\/' : '');\n          ;\n      }\n\n        return null;\n  }",
            "startLine": 383,
            "endLine": 402,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "includeModel": {
            "name": "includeModel",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($bbn_inc_file, $model)\n  {\n      if (is_file($bbn_inc_file)) {\n          ob_start();\n          $d = include $bbn_inc_file;\n          ob_end_clean();\n        if (\\is_object($d)) {\n            $d = X::toArray($d);\n        }\n\n        if (!\\is_array($d)) {\n            return false;\n        }\n\n          return $d;\n      }\n\n        return false;\n  }",
            "startLine": 405,
            "endLine": 423,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "bbn_inc_file",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "model",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getCookie": {
            "name": "getCookie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return empty($_COOKIE[BBN_APP_NAME]) ? false : json_decode($_COOKIE[BBN_APP_NAME], true)['value'];\n  }",
            "startLine": 426,
            "endLine": 429,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "addAuthorizedRoute": {
            "name": "addAuthorizedRoute",
            "summary": "Add a route to authorized routes list if not already exists.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        $res = 0;\n      foreach (\\func_get_args() as $a) {\n        if (!in_array($a, $this->authorized_routes, true)) {\n            $this->authorized_routes[] = $a;\n            $res++;\n        }\n      }\n\n        return $res;\n  }",
            "startLine": 437,
            "endLine": 448,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": []
        },
        "addForbiddenRoute": {
            "name": "addForbiddenRoute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        $res = 0;\n      foreach (\\func_get_args() as $a) {\n        if (!in_array($a, $this->forbidden_routes, true)) {\n            $this->forbidden_routes[] = $a;\n            $res++;\n        }\n      }\n\n        return $res;\n  }",
            "startLine": 451,
            "endLine": 462,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": []
        },
        "isAuthorizedRoute": {
            "name": "isAuthorizedRoute",
            "summary": "Checks if a route is authorized.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url)\n  {\n      if (in_array($url, $this->authorized_routes, true)) {\n          return true;\n      }\n\n      foreach ($this->authorized_routes as $ar) {\n        if (substr($ar, -1) === '*') {\n          if ((strlen($ar) === 1) || (strpos($url, substr($ar, 0, -1)) === 0)) {\n            if (in_array($url, $this->forbidden_routes, true)) {\n                return false;\n            }\n\n            foreach ($this->forbidden_routes as $ar2) {\n              if (substr($ar2, -1) === '*') {\n                if (strpos($url, substr($ar2, 0, -1)) === 0) {\n                  return false;\n                }\n              }\n            }\n\n            return true;\n          }\n        }\n      }\n\n        return false;\n  }",
            "startLine": 471,
            "endLine": 498,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setRoot": {
            "name": "setRoot",
            "summary": "Sets the root of the application in the URL (base href).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($root)\n  {\n        \/** @todo a proper verification of the path *\/\n      if (strpos($root, '\/', -1) === false) {\n          $root .= '\/';\n      }\n\n        $this->root = $root;\n  }",
            "startLine": 507,
            "endLine": 515,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "root",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getRoot": {
            "name": "getRoot",
            "summary": "Returns the root of the application in the URL (base href).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->root;\n  }",
            "startLine": 523,
            "endLine": 526,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "setLocale": {
            "name": "setLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($locale)\n  {\n        $this->env->setLocale($locale);\n        $this->initLocaleDomain();\n  }",
            "startLine": 529,
            "endLine": 533,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "locale",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLocale": {
            "name": "getLocale",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getLocale();\n  }",
            "startLine": 536,
            "endLine": 539,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "fetchDir": {
            "name": "fetchDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir, $mode)\n  {\n        return $this->router->fetchDir($dir, $mode);\n  }",
            "startLine": 542,
            "endLine": 545,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "includePhpView": {
            "name": "includePhpView",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($bbn_inc_file, $bbn_inc_content, array $bbn_inc_data = [])\n  {\n        $randoms = [];\n        $_random = function ($i) use (&$randoms) {\n          if (!isset($randoms[$i])) {\n              $randoms[$i] = md5(Str::genpwd());\n          }\n\n            return $randoms[$i];\n        };\n        $fn      = function () use ($bbn_inc_file, $bbn_inc_content, $bbn_inc_data, $_random) {\n          if ($bbn_inc_content) {\n              ob_start();\n            if (\\count($bbn_inc_data)) {\n              foreach ($bbn_inc_data as $bbn_inc_key => $bbn_inc_val) {\n                $$bbn_inc_key = $bbn_inc_val;\n              }\n\n                unset($bbn_inc_key, $bbn_inc_val);\n            }\n\n              unset($bbn_inc_data);\n              \/*\n              try {\n                eval('?>'.$bbn_inc_content);\n              }\n              catch (\\Exception $e){\n                \/\/error_log($e->getMessage());\n                X::logError($e->getCode(), , $bbn_inc_file, 1);\n              }\n              *\/\n              eval('use bbn\\X as xx; use bbn\\Str as st; ?>'.$bbn_inc_content);\n\n              $c = ob_get_contents();\n              ob_end_clean();\n              return $c;\n          }\n\n            return '';\n        };\n        return $fn();\n  }",
            "startLine": 548,
            "endLine": 589,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "bbn_inc_file",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "bbn_inc_content",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "bbn_inc_data",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "setDbInController": {
            "name": "setDbInController",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($r = false)\n  {\n        self::$db_in_controller = $r;\n  }",
            "startLine": 612,
            "endLine": 615,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "r",
                    "position": 0,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "getDebug": {
            "name": "getDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return self::$_is_debug;\n  }",
            "startLine": 621,
            "endLine": 624,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "debug": {
            "name": "debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($state = 1)\n  {\n        self::$_is_debug = (bool)$state;\n  }",
            "startLine": 627,
            "endLine": 630,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "state",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "This should be called only once from within the app",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($db = NULL, $routes = [])\n  {\n        self::singletonInit($this);\n        self::initPath();\n        $this->env = new Mvc\\Environment();\n      if (\\is_object($db) && ($class = \\get_class($db)) && ($class === 'PDO' || strpos($class, '\\Db') !== false)) {\n          $this->db = $db;\n      } else {\n          $this->db = null;\n      }\n\n        $this->inc = new \\stdClass();\n      if (\\is_array($routes) && isset($routes['root'])) {\n        foreach ($routes['root'] as $url => &$route) {\n          if (isset($route['root']) && defined('BBN_'.strtoupper($route['root']).'_PATH')) {\n            $route['path'] = constant('BBN_'.strtoupper($route['root']).'_PATH').$route['path'];\n          }\n\n          if (!empty($route['path']) && (substr($route['path'], -1) !== '\/')) {\n              $route['path'] .= '\/';\n          }\n\n          if (isset($route['path'])) {\n              $route['url'] = $url;\n              $this->registerPlugin($route);\n          }\n        }\n      }\n\n        $this->initLocaleDomain();\n        $this->router = new Mvc\\Router($this, $routes);\n        $this->route();\n  }",
            "startLine": 674,
            "endLine": 706,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "An array of routes usually defined in \/_appui\/current\/cfg\/routes.json<\/em>"
                },
                {
                    "name": "routes",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "destory": {
            "name": "destory",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      self::$singleton_instance = null;\n      self::$singleton_exists   = false;\n      self::$_app_name          = null;\n  }",
            "startLine": 709,
            "endLine": 714,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether a corresponding file has been found or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->info ? true : false;\n  }",
            "startLine": 722,
            "endLine": 725,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getPlugins": {
            "name": "getPlugins",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->plugins;\n  }",
            "startLine": 728,
            "endLine": 731,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "hasPlugin": {
            "name": "hasPlugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin)\n  {\n        return isset($this->plugins[$plugin]);\n  }",
            "startLine": 734,
            "endLine": 737,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isPlugin": {
            "name": "isPlugin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin)\n  {\n        \/** @todo This function! *\/\n        return isset($this->plugins[$plugin]);\n  }",
            "startLine": 740,
            "endLine": 744,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "pluginPath": {
            "name": "pluginPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin, $raw = false)\n  {\n      if ($this->hasPlugin($plugin)) {\n          return $this->plugins[$plugin]['path'].($raw ? '' : 'src\/');\n      }\n  }",
            "startLine": 747,
            "endLine": 752,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "raw",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "pluginUrl": {
            "name": "pluginUrl",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin)\n  {\n        return $this->hasPlugin($plugin) ? substr($this->plugins[$plugin]['url'], \\strlen($this->root)) : false;\n  }",
            "startLine": 755,
            "endLine": 758,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "pluginName": {
            "name": "pluginName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n      foreach ($this->plugins as $name => $p) {\n        if (strpos($path, $p['url']) === 0) {\n            return $name;\n        }\n      }\n\n        return false;\n  }",
            "startLine": 761,
            "endLine": 770,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getRoute": {
            "name": "getRoute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, $root = NULL)\n  {\n        return $this->router->route($path, $mode, $root);\n  }",
            "startLine": 786,
            "endLine": 789,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "root",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getFile": {
            "name": "getFile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->info['file'];\n  }",
            "startLine": 792,
            "endLine": 795,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getUrl": {
            "name": "getUrl",
            "summary": "Get the request url.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getUrl();\n  }",
            "startLine": 803,
            "endLine": 806,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getRequest": {
            "name": "getRequest",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getRequest();\n  }",
            "startLine": 809,
            "endLine": 812,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getParams": {
            "name": "getParams",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getParams();\n  }",
            "startLine": 815,
            "endLine": 818,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getPost": {
            "name": "getPost",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getPost();\n  }",
            "startLine": 821,
            "endLine": 824,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getGet": {
            "name": "getGet",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getGet();\n  }",
            "startLine": 827,
            "endLine": 830,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getFiles": {
            "name": "getFiles",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getFiles();\n  }",
            "startLine": 833,
            "endLine": 836,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getMode": {
            "name": "getMode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->getMode();\n  }",
            "startLine": 839,
            "endLine": 842,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "setMode": {
            "name": "setMode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($mode)\n  {\n        return $this->env->setMode($mode);\n  }",
            "startLine": 845,
            "endLine": 848,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "mode",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isCli": {
            "name": "isCli",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n        return $this->env->isCli();\n  }",
            "startLine": 851,
            "endLine": 854,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "reroute": {
            "name": "reroute",
            "summary": "This will reroute a controller to another one seemlessly. Chainable",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path = '', $post = false, $arguments = false)\n  {\n        $this->env->simulate($path, $post, $arguments);\n        $this->is_routed     = false;\n        $this->is_controlled = null;\n        $this->info          = null;\n        $this->router->reset();\n        $this->route();\n      if ($arguments || !isset($this->info['args'])) {\n          $this->info['args'] = $arguments;\n      }\n\n      if (!$this->controller) {\n          throw new \\Exception(X::_('Controller is not set'));\n      }\n\n        $this->controller->reset($this->info);\n\n        return $this;\n  }",
            "startLine": 863,
            "endLine": 882,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "post",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "hasView": {
            "name": "hasView",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path = '', $mode = 'html')\n  {\n        return array_key_exists($mode, self::$_loaded_views) && isset(self::$_loaded_views[$mode][$path]);\n  }",
            "startLine": 890,
            "endLine": 893,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "html",
                    "default_name": ""
                }
            ]
        },
        "addToViews": {
            "name": "addToViews",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, bbn\\Mvc\\View $view)\n  {\n      if (!array_key_exists($mode, self::$_loaded_views[$mode])) {\n          self::$_loaded_views[$mode] = [];\n      }\n\n        self::$_loaded_views[$mode][$path] = $view;\n  }",
            "startLine": 902,
            "endLine": 909,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "void"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "view",
                    "position": 2,
                    "type": "bbn\\Mvc\\View",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getView": {
            "name": "getView",
            "summary": "This will get a view.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode = 'html', array $data = NULL)\n  {\n      if (!router::isMode($mode) || !($path = Router::parse($path))) {\n          throw new \\Exception(\n            X::_(\"Incorrect mode $path $mode\")\n          );\n      }\n\n        $view = null;\n      if ($this->hasView($path, $mode)) {\n          $view = self::$_loaded_views[$mode][$path];\n      } elseif ($info = $this->router->route($path, $mode)) {\n          $view = new Mvc\\View($info);\n          $this->addToViews($path, $mode, $view);\n      }\n\n      if (\\is_object($view) && $view->check()) {\n          return $view->get($data);\n      }\n\n        return '';\n  }",
            "startLine": 921,
            "endLine": 942,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "html",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "viewExists": {
            "name": "viewExists",
            "summary": "Checks whether the given view exists or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode = 'html')\n  {\n      if (!router::isMode($mode) || !($path = Router::parse($path))) {\n          return false;\n      }\n\n      if ($this->hasView($path, $mode)) {\n          return true;\n      }\n\n      if ($this->router->route($path, $mode)) {\n          return true;\n      }\n\n        return false;\n  }",
            "startLine": 952,
            "endLine": 967,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "html",
                    "default_name": ""
                }
            ]
        },
        "modelExists": {
            "name": "modelExists",
            "summary": "Checks whether the given model exists or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n      if ($this->router->route($path, 'model')) {\n          return true;\n      }\n\n        return false;\n  }",
            "startLine": 976,
            "endLine": 983,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getExternalView": {
            "name": "getExternalView",
            "summary": "This will get a view from a different root.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($full_path, $mode = 'html', array $data = NULL)\n  {\n      if (!router::isMode($mode) && ($full_path = Str::parsePath($full_path))) {\n          throw new \\Exception(\n            X::_(\"Incorrect mode $full_path $mode\")\n          );\n      }\n\n      if (($this->getMode() === 'dom') && (!defined('BBN_DEFAULT_MODE') || (BBN_DEFAULT_MODE !== 'dom'))) {\n          $full_path .= ($full_path === '' ? '' : '\/').'index';\n      }\n\n        $view = null;\n      if ($this->hasView($full_path, $mode)) {\n          $view = self::$_loaded_views[$mode][$full_path];\n      } elseif ($info = $this->router->route(basename($full_path), 'free-'.$mode, \\dirname($full_path))) {\n          $view = new Mvc\\View($info);\n          $this->addToViews($full_path, $mode, $view);\n      }\n\n      if (\\is_object($view) && $view->check()) {\n          return $view->get($data);\n      }\n\n        return '';\n  }",
            "startLine": 994,
            "endLine": 1019,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "full_path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "html",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getPluginFromComponent": {
            "name": "getPluginFromComponent",
            "summary": "Retrieves the plugin's name from the component's name if any.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n        return $this->router->getPluginFromComponent($name);\n  }",
            "startLine": 1029,
            "endLine": 1032,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "routeComponent": {
            "name": "routeComponent",
            "summary": "Retrieves component's data from the given plugin name if exists.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n        return $this->router->routeComponent($name);\n  }",
            "startLine": 1042,
            "endLine": 1045,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "customPluginView": {
            "name": "customPluginView",
            "summary": "Retrieves a view of a custom plugin.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, array $data, $plugin)\n  {\n      if ($plugin && ($route = $this->router->routeCustomPlugin(Router::parse($path), $mode, $plugin))) {\n          $view = new Mvc\\View($route);\n        if ($view->check()) {\n            return \\is_array($data) ? $view->get($data) : $view->get();\n        }\n\n          return '';\n      }\n\n        return null;\n  }",
            "startLine": 1058,
            "endLine": 1070,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "customPluginModel": {
            "name": "customPluginModel",
            "summary": "Retrieves a model of a custom plugin.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $plugin, $ttl = NULL)\n  {\n      if ($plugin && ($route = $this->router->routeCustomPlugin(router::parse($path), 'model', $plugin))) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n        if ($ttl) {\n            return $model->getFromCache($data, '', $ttl);\n        }\n\n          return $model->get($data);\n      }\n\n        return null;\n  }",
            "startLine": 1084,
            "endLine": 1096,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 4,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 4,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "hasSubpluginModel": {
            "name": "hasSubpluginModel",
            "summary": "Returns true if the subplugin model exists.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $plugin, $subplugin)\n  {\n        return !!$this->router->routeSubplugin(router::parse($path), 'model', $plugin, $subplugin);\n  }",
            "startLine": 1108,
            "endLine": 1111,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The plugin"
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The subplugin"
                },
                {
                    "name": "subplugin",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "subpluginModel": {
            "name": "subpluginModel",
            "summary": "Get a subplugin model (a plugin inside the plugin directory of another plugin).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $plugin, $subplugin, $ttl = NULL)\n  {\n      if ($plugin\n          && $subplugin\n          && ($route = $this->router->routeSubplugin(router::parse($path), 'model', $plugin, $subplugin))\n      ) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n          $res   = $ttl ? $model->getFromCache($data, '', $ttl) : $model->get($data);\n          return $res;\n      }\n\n        return null;\n  }",
            "startLine": 1126,
            "endLine": 1138,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 6,
            "numberOfRequiredParameters": 5,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The data for the model"
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The controller"
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The plugin name"
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The subplugin name"
                },
                {
                    "name": "subplugin",
                    "position": 4,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The cache TTL"
                },
                {
                    "name": "ttl",
                    "position": 5,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getPluginView": {
            "name": "getPluginView",
            "summary": "This will get a view.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $mode, array $data, $plugin)\n  {\n        return $this->customPluginView(router::parse($path), $mode, $data, $this->pluginName($plugin));\n  }",
            "startLine": 1151,
            "endLine": 1154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The mode of the view"
                },
                {
                    "name": "mode",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Data for the view"
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The plugin URL"
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getModel": {
            "name": "getModel",
            "summary": "This will get the model; there is no order for the arguments.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl)\n  {\n      if (($path = Router::parse($path)) && ($route = $this->router->route($path, 'model'))) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n          return $model->get($data);\n      }\n\n        return [];\n  }",
            "startLine": 1165,
            "endLine": 1173,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Data to send to the model"
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPluginModel": {
            "name": "getPluginModel",
            "summary": "An alias for customPluginModel()",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $plugin, $ttl = NULL)\n  {\n        return $this->customPluginModel(router::parse($path), $data, $ctrl, $this->pluginName($plugin), $ttl);\n  }",
            "startLine": 1186,
            "endLine": 1189,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 4,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 4,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getSubpluginModel": {
            "name": "getSubpluginModel",
            "summary": "An alias for subpluginModel()",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $plugin, $subplugin, $ttl = NULL)\n  {\n        return $this->subpluginModel($path, $data, $ctrl, $plugin, $subplugin, $ttl);\n  }",
            "startLine": 1203,
            "endLine": 1206,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 6,
            "numberOfRequiredParameters": 5,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 3,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subplugin",
                    "position": 4,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 5,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getCachedModel": {
            "name": "getCachedModel",
            "summary": "This will get the model as it is in cache if any and otherwise will save it in cache then return it",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $ttl = 10)\n  {\n      if (\\is_null($data)) {\n          $data = $this->data;\n      }\n\n      if ($route = $this->router->route(router::parse($path), 'model')) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n          return $model->getFromCache($data, '', $ttl);\n      }\n\n        return [];\n  }",
            "startLine": 1216,
            "endLine": 1228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "setCachedModel": {
            "name": "setCachedModel",
            "summary": "This will set the model in cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl, $ttl = 10)\n  {\n      if (\\is_null($data)) {\n          $data = $this->data;\n      }\n\n      if ($route = $this->router->route(router::parse($path), 'model')) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n          $model->setCache($data, '', $ttl);\n      }\n  }",
            "startLine": 1238,
            "endLine": 1248,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "deleteCachedModel": {
            "name": "deleteCachedModel",
            "summary": "This will unset the model in cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, array $data, bbn\\Mvc\\Controller $ctrl)\n  {\n      if (\\is_null($data)) {\n          $data = $this->data;\n      }\n\n      if ($route = $this->router->route(router::parse($path), 'model')) {\n          $model = new Mvc\\Model($this->db, $route, $ctrl, $this);\n          $model->deleteCache($data, '');\n      }\n  }",
            "startLine": 1258,
            "endLine": 1268,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ctrl",
                    "position": 2,
                    "type": "bbn\\Mvc\\Controller",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addInc": {
            "name": "addInc",
            "summary": "Adds a property to the MVC object inc if it has not been declared.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $obj)\n  {\n      if (!isset($this->inc->{$name})) {\n          $this->inc->{$name} = $obj;\n      }\n  }",
            "startLine": 1276,
            "endLine": 1281,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "obj",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "process": {
            "name": "process",
            "summary": "Returns the rendered result from the current mvc if successfully processed",
            "description": "process() (or check()) must have been called before.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>process() (or check()) must have been called before.<\/p>"
                }
            ],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if ($this->check()) {\n          $this->obj = new \\stdClass();\n        if (!\\is_array($this->info)) {\n            $this->log(\"No info in MVC\", $this->info);\n            throw new \\Exception(X::_(\"No info in MVC\"));\n        }\n\n        if (!$this->controller) {\n            $this->controller = new Mvc\\Controller($this, $this->info, $this->data);\n        }\n\n          $this->controller->process();\n      }\n  }",
            "startLine": 1291,
            "endLine": 1306,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "hasContent": {
            "name": "hasContent",
            "summary": "Checks if the controller has content.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if ($this->check() && $this->controller) {\n          return $this->controller->hasContent();\n      }\n\n        return false;\n  }",
            "startLine": 1314,
            "endLine": 1321,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "transform": {
            "name": "transform",
            "summary": "Transform the output object on Controller instance given a callback",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($fn)\n  {\n      if ($this->check() && $this->controller) {\n          $this->controller->transform($fn);\n      }\n  }",
            "startLine": 1329,
            "endLine": 1334,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "output": {
            "name": "output",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if ($this->check() && $this->controller) {\n          $obj = $this->controller->get();\n        if ($this->isCli()) {\n          if (isset($obj->content)) {\n            echo $obj->content;\n          }\n\n            exit();\n        }\n\n        if (\\is_array($obj)) {\n            $obj = X::toObject($obj);\n        }\n\n        if ((\\gettype($obj) !== 'object') || (\\get_class($obj) !== 'stdClass')) {\n            throw new \\Exception(X::__(\"Unexpected output: \".\\gettype($obj)));\n        }\n\n        if ($this->obj && X::countProperties($this->obj)) {\n            $obj = X::mergeObjects($obj, $this->obj);\n        }\n\n          $output = new Mvc\\Output($obj, $this->getMode());\n          $output->run();\n      } else {\n          header('HTTP\/1.0 404 Not Found');\n          exit();\n      }\n  }",
            "startLine": 1342,
            "endLine": 1372,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getDb": {
            "name": "getDb",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if (self::$db_in_controller && $this->db) {\n          return $this->db;\n      }\n\n        return null;\n  }",
            "startLine": 1378,
            "endLine": 1385,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Db",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "setPrepath": {
            "name": "setPrepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n      if ($this->check()) {\n        if ($this->router->getPrepath(false) === $path) {\n            return 1;\n        }\n\n        if ($this->env->setPrepath($path) && $this->router->setPrepath($path)) {\n            $this->params = $this->getParams();\n            return 1;\n        }\n      }\n\n        throw new \\Exception(\n          X::_(\"The setPrepath method cannot be used in this MVC\")\n        );\n  }",
            "startLine": 1393,
            "endLine": 1409,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPrepath": {
            "name": "getPrepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      if ($this->check()) {\n          return $this->router->getPrepath();\n      }\n\n      return '';\n  }",
            "startLine": 1415,
            "endLine": 1422,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getRoutes": {
            "name": "getRoutes",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($type = 'root')\n  {\n      if ($this->check()) {\n          $routes = $this->router->getRoutes();\n          return $routes[$type] ?? false;\n      }\n\n      return false;\n  }",
            "startLine": 1429,
            "endLine": 1437,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "type",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": "root",
                    "default_name": ""
                }
            ]
        },
        "getInstance": {
            "name": "getInstance",
            "summary": "Returns the instance of the singleton or null.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::singletonExists() ? self::$singleton_instance : null;\n  }",
            "startLine": 50,
            "endLine": 53,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "singletonExists": {
            "name": "singletonExists",
            "summary": "Returns true if the instance as been initiated.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$singleton_exists ? true : false;\n  }",
            "startLine": 60,
            "endLine": 63,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (bbn\\Mvc::getDebug()) {\n      $ar = \\func_get_args();\n      bbn\\X::log(\\count($ar) > 1 ? $ar : $ar[0], 'mvc');\n    }\n  }",
            "startLine": 61,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "pluginDataPath": {
            "name": "pluginDataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    if (($this->_plugin || $plugin) && \\defined('BBN_DATA_PATH')) {\n      return BBN_DATA_PATH.'plugins\/'.$this->pluginName($plugin ?: $this->_plugin).'\/';\n    }\n\n    return null;\n  }",
            "startLine": 70,
            "endLine": 77,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getAliases": {
            "name": "getAliases",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mvc->getRoutes('alias');\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "appPath": {
            "name": "appPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($raw = false)\n  {\n    return \\bbn\\Mvc::getAppPath($raw);\n  }",
            "startLine": 152,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "raw",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "libPath": {
            "name": "libPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return \\bbn\\Mvc::getLibPath();\n  }",
            "startLine": 158,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "dataPath": {
            "name": "dataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getDataPath().($plugin ? 'plugins\/'.$plugin.'\/' : '');\n  }",
            "startLine": 164,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "tmpPath": {
            "name": "tmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getTmpPath($plugin);\n  }",
            "startLine": 170,
            "endLine": 173,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "logPath": {
            "name": "logPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getLogPath($plugin);\n  }",
            "startLine": 176,
            "endLine": 179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "cachePath": {
            "name": "cachePath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getCachePath($plugin);\n  }",
            "startLine": 182,
            "endLine": 185,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "contentPath": {
            "name": "contentPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($plugin = NULL)\n  {\n    return \\bbn\\Mvc::getContentPath($plugin);\n  }",
            "startLine": 188,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "plugin",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userTmpPath": {
            "name": "userTmpPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n    return \\bbn\\Mvc::getUserTmpPath($id_user, $plugin);\n  }",
            "startLine": 194,
            "endLine": 197,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "userDataPath": {
            "name": "userDataPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Mvc",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $plugin = NULL)\n  {\n    return \\bbn\\Mvc::getUserDataPath($id_user, $plugin);\n  }",
            "startLine": 200,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "plugin",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "inc": {
            "visibility": "public",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "stdClass",
                        "description": "An external object that can be filled after the object creation and can be used as a global with the function add_inc"
                    }
                ]
            }
        },
        "data": {
            "visibility": "public",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            }
        },
        "o": {
            "visibility": "public"
        },
        "obj": {
            "visibility": "public",
            "doc": {
                "description": "The output object",
                "tags": [
                    {
                        "tag": "var",
                        "type": "null|object"
                    }
                ]
            }
        },
        "reserved": {
            "static": true,
            "visibility": "public",
            "value": [
                "_private",
                "_common",
                "_htaccess"
            ]
        }
    },
    "staticProperties": {
        "_loaded_views": {
            "html": [],
            "css": [],
            "js": []
        },
        "_is_debug": true,
        "_app_name": "apst-app",
        "_app_prefix": "apst",
        "_app_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/",
        "_cur_path": "\/",
        "_lib_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/",
        "_data_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/data\/",
        "db_in_controller": true,
        "reserved": [
            "_private",
            "_common",
            "_htaccess"
        ],
        "singleton_instance": {
            "inc": {
                "options": {},
                "session": {},
                "user": {
                    "prev_time": null
                },
                "pref": {
                    "class_cfg": {
                        "table": "bbn_users_options",
                        "tables": {
                            "user_options": "bbn_users_options",
                            "user_options_bits": "bbn_users_options_bits"
                        },
                        "arch": {
                            "user_options": {
                                "id": "id",
                                "id_option": "id_option",
                                "num": "num",
                                "id_user": "id_user",
                                "id_group": "id_group",
                                "id_alias": "id_alias",
                                "public": "public",
                                "id_link": "id_link",
                                "text": "text",
                                "cfg": "cfg"
                            },
                            "user_options_bits": {
                                "id": "id",
                                "id_user_option": "id_user_option",
                                "id_parent": "id_parent",
                                "id_option": "id_option",
                                "num": "num",
                                "text": "text",
                                "cfg": "cfg"
                            }
                        }
                    }
                },
                "perm": {},
                "outils": {}
            },
            "data": [],
            "o": null,
            "obj": {}
        },
        "singleton_exists": 1
    },
    "constants": null,
    "numMethods": 92,
    "numProperties": 5,
    "numConstants": 0,
    "numStaticProperties": 12,
    "interfaceNames": [
        "bbn\\Mvc\\Api"
    ],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Singleton",
        "bbn\\Mvc\\Common"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_loaded_views": {
            "html": [],
            "css": [],
            "js": []
        },
        "_is_debug": true,
        "_app_name": "apst-app",
        "_app_prefix": "apst",
        "_app_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/",
        "_cur_path": "\/",
        "_lib_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/",
        "_data_path": "\/home\/thomas\/domains\/apstapp.thomas.lan\/data\/",
        "db_in_controller": true,
        "reserved": [
            "_private",
            "_common",
            "_htaccess"
        ],
        "singleton_instance": {
            "inc": {
                "options": {},
                "session": {},
                "user": {
                    "prev_time": null
                },
                "pref": {
                    "class_cfg": {
                        "table": "bbn_users_options",
                        "tables": {
                            "user_options": "bbn_users_options",
                            "user_options_bits": "bbn_users_options_bits"
                        },
                        "arch": {
                            "user_options": {
                                "id": "id",
                                "id_option": "id_option",
                                "num": "num",
                                "id_user": "id_user",
                                "id_group": "id_group",
                                "id_alias": "id_alias",
                                "public": "public",
                                "id_link": "id_link",
                                "text": "text",
                                "cfg": "cfg"
                            },
                            "user_options_bits": {
                                "id": "id",
                                "id_user_option": "id_user_option",
                                "id_parent": "id_parent",
                                "id_option": "id_option",
                                "num": "num",
                                "text": "text",
                                "cfg": "cfg"
                            }
                        }
                    }
                },
                "perm": {},
                "outils": {}
            },
            "data": [],
            "o": null,
            "obj": {}
        },
        "singleton_exists": 1,
        "controller": null,
        "db": null,
        "env": null,
        "router": null,
        "info": null,
        "root": null,
        "plugins": null,
        "loaded": {
            "views": {
                "html": [],
                "css": [],
                "js": []
            },
            "models": [],
            "ctrls": []
        },
        "authorized_routes": [],
        "forbidden_routes": [],
        "inc": null,
        "data": [],
        "o": null,
        "obj": null,
        "_mvc": null,
        "_plugin": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn",
    "shortName": "Mvc",
    "summary": ""
}