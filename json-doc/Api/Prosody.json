{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\Prosody",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/Prosody.php",
    "startLine": 7,
    "endLine": 450,
    "numMethods": 19,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "host": null,
        "port": null,
        "username": null,
        "password": null,
        "module": null,
        "params": null,
        "client": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api",
    "shortName": "Prosody",
    "contentConstructor": {
        "file": "bbn\\Api\\Prosody",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Class Contructor",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($host = 'fiduhub.dev', $port = '5280', $username = 'admin', $password = 'pass', $module = 'admin_rest')\n  {\n      $this->client = new Client(['http_errors' => false]);\n      $this->host = $host;\n      $this->port = $port;\n      $this->username = $username;\n      $this->password = $password;\n      $this->module = $module;\n      $this->params = array();\n  }",
            "startLine": 21,
            "endLine": 30,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "host",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "fiduhub.dev",
                    "default_name": ""
                },
                {
                    "name": "port",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "5280",
                    "default_name": ""
                },
                {
                    "name": "username",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "admin",
                    "default_name": ""
                },
                {
                    "name": "password",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "pass",
                    "default_name": ""
                },
                {
                    "name": "module",
                    "position": 4,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "admin_rest",
                    "default_name": ""
                }
            ]
        },
        "getUsers": {
            "name": "getUsers",
            "summary": "Get all connected users",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $endpoint = 'users';        \n    return $this->doRequest('get',$endpoint);\n  }",
            "startLine": 83,
            "endLine": 87,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "addUser": {
            "name": "addUser",
            "summary": "Create a new user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $password, $name = false, $email = false, $groups = false)\n  {\n      $endpoint = 'user\/' . $username; \n      return $this->doRequest('post', $endpoint, compact('password','name','email', 'groups'));\n  }",
            "startLine": 99,
            "endLine": 103,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "password",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Password"
                },
                {
                    "name": "name",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Name    (Optional)"
                },
                {
                    "name": "email",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Email   (Optional)"
                },
                {
                    "name": "groups",
                    "position": 4,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Groups  (Optional)"
                }
            ]
        },
        "getUser": {
            "name": "getUser",
            "summary": "NOW : Get user satus (connected or not)",
            "description": "TODO : Get information for a specified user",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>TODO : Get information for a specified user<\/p>"
                }
            ],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username)\n  {\n      $endpoint = '\/'.$username.'\/connected'; \n      return $this->doRequest('get', $endpoint);\n  }",
            "startLine": 111,
            "endLine": 115,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "deleteUser": {
            "name": "deleteUser",
            "summary": "Delete an user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username)\n  {\n      $endpoint = '\/user\/'.$username; \n      return $this->doRequest('delete', $endpoint);\n  }",
            "startLine": 123,
            "endLine": 127,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                }
            ]
        },
        "updateUser": {
            "name": "updateUser",
            "summary": "NOW: Update user's infos (password)",
            "description": "TODO: Update user's infos (all)",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>TODO: Update user's infos (all)<\/p>"
                }
            ],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $password, $name = false, $email = false, $groups = false)\n  {\n      $endpoint = '\/user\/'.$username.'\/attribute';\n      return $this->doRequest('patch', $endpoint, compact('username', 'password','name','email', 'groups'));\n  }",
            "startLine": 140,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "password",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Password (Optional)"
                },
                {
                    "name": "name",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Name (Optional)"
                },
                {
                    "name": "email",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Email (Optional)"
                },
                {
                    "name": "groups",
                    "position": 4,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Groups (Optional)"
                }
            ]
        },
        "addRoster": {
            "name": "addRoster",
            "summary": "Create a roster between an user and a contact",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $contact)\n  {\n      $endpoint = 'roster\/' . $username;\n      $contact = $contact . '@' . $this->host;\n      return $this->doRequest('post', $endpoint, compact('contact'));\n  }",
            "startLine": 153,
            "endLine": 158,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "contact",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID     Contact's JID"
                }
            ]
        },
        "deleteRoster": {
            "name": "deleteRoster",
            "summary": "Delete a roster between an user and a contact",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $contact)\n  {\n      $endpoint = 'roster\/' . $username;\n      $contact = $contact . '@' . $this->host;\n      return $this->doRequest('delete', $endpoint, compact('contact'));\n  }",
            "startLine": 167,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "contact",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID     Contact's JID"
                }
            ]
        },
        "lockoutUser": {
            "name": "lockoutUser",
            "summary": "locks\/Disables an OpenFire user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username)\n  {\n      $endpoint = '\/lockouts\/'.$username; \n      return $this->doRequest('post', $endpoint);\n  }",
            "startLine": 314,
            "endLine": 318,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                }
            ]
        },
        "unlockUser": {
            "name": "unlockUser",
            "summary": "unlocks an OpenFire user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username)\n  {\n      $endpoint = '\/lockouts\/'.$username; \n      return $this->doRequest('delete', $endpoint);\n  }",
            "startLine": 327,
            "endLine": 331,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                }
            ]
        },
        "addToRoster": {
            "name": "addToRoster",
            "summary": "Adds to this OpenFire user's roster",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $jid, $nickname = false, $subscriptionType = false)\n  {\n      $endpoint = '\/users\/'.$username.'\/roster';\n      return $this->doRequest('post', $endpoint, compact('jid','nickname','subscriptionType'));\n  }",
            "startLine": 343,
            "endLine": 347,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "jid",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "JID"
                },
                {
                    "name": "nickname",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Name         (Optional)"
                },
                {
                    "name": "subscriptionType",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "ype   Subscription (Optional)"
                }
            ]
        },
        "deleteFromRoster": {
            "name": "deleteFromRoster",
            "summary": "Removes from this OpenFire user's roster",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $jid)\n  {\n      $endpoint = '\/users\/'.$username.'\/roster\/'.$jid;\n      return $this->doRequest('delete', $endpoint, $jid);\n  }",
            "startLine": 357,
            "endLine": 361,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "jid",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "JID"
                }
            ]
        },
        "updateRoster": {
            "name": "updateRoster",
            "summary": "Updates this OpenFire user's roster",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($username, $jid, $nickname = false, $subscriptionType = false)\n  {\n      $endpoint = '\/users\/'.$username.'\/roster\/'.$jid;\n      return $this->doRequest('put', $endpoint, $jid, compact('jid','username','subscriptionType'));     \n  }",
            "startLine": 372,
            "endLine": 376,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "username",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Username"
                },
                {
                    "name": "jid",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "JID"
                },
                {
                    "name": "nickname",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Nick Name (Optional)"
                },
                {
                    "name": "subscriptionType",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "ype   Subscription (Optional)"
                }
            ]
        },
        "getGroups": {
            "name": "getGroups",
            "summary": "Get all groups",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      $endpoint = '\/groups';\n      return $this->doRequest('get', $endpoint);\n  }",
            "startLine": 383,
            "endLine": 387,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getGroup": {
            "name": "getGroup",
            "summary": "Retrieve a group",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n      $endpoint = '\/groups\/'.$name;\n      return $this->doRequest('get', $endpoint);\n  }",
            "startLine": 395,
            "endLine": 399,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Name of group"
                }
            ]
        },
        "createGroup": {
            "name": "createGroup",
            "summary": "Create a group",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $description = false)\n  {\n      $endpoint = '\/groups\/';\n      return $this->doRequest('post', $endpoint, compact('name','description'));\n  }",
            "startLine": 409,
            "endLine": 413,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Name of the group"
                },
                {
                    "name": "description",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Some description of the group"
                }
            ]
        },
        "deleteGroup": {
            "name": "deleteGroup",
            "summary": "Delete a group",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n      $endpoint = '\/groups\/'.$name;\n      return $this->doRequest('delete', $endpoint);\n  }",
            "startLine": 421,
            "endLine": 425,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Name of the Group to delete"
                }
            ]
        },
        "updateGroup": {
            "name": "updateGroup",
            "summary": "Update a group (description)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $description)\n  {\n      $endpoint = '\/groups\/'.$name;\n      return $this->doRequest('put', $endpoint, compact('name','description'));\n  }",
            "startLine": 434,
            "endLine": 438,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Name of group"
                },
                {
                    "name": "description",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Some description of the group"
                }
            ]
        },
        "getSessions": {
            "name": "getSessions",
            "summary": "Gell all active sessions",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Prosody",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      $endpoint = '\/sessions';\n      return $this->doRequest('get', $endpoint);\n  }",
            "startLine": 445,
            "endLine": 449,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}