{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\GitLab\\Issue",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/GitLab\/Issue.php",
    "startLine": 4,
    "endLine": 136,
    "numMethods": 10,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api\\GitLab",
    "shortName": "Issue",
    "contentConstructor": null,
    "methods": {
        "getAllIssues": {
            "name": "getAllIssues",
            "summary": "Get the issues list",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->issueURL, ['scope' => 'all']);\n  }",
            "startLine": 11,
            "endLine": 14,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAssigendIssues": {
            "name": "getAssigendIssues",
            "summary": "Gets the assigned issues list",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->issueURL, [\n      'scope' => 'all',\n      'assignee_id' => 'Any'\n    ]);\n  }",
            "startLine": 21,
            "endLine": 27,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getMyIssues": {
            "name": "getMyIssues",
            "summary": "Gets the issues list of the current user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->issueURL, ['scope' => 'all']);\n  }",
            "startLine": 34,
            "endLine": 37,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getMyAssigendIssues": {
            "name": "getMyAssigendIssues",
            "summary": "Gets the assigned issues list of the current user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->issueURL, [\n      'scope' => 'all',\n      'assignee_id' => $this->getUserID()\n    ]);\n  }",
            "startLine": 44,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getIssue": {
            "name": "getIssue",
            "summary": "Gets a specific issue",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $id)\n  {\n    return $this->request($this->issueURL . $id);\n  }",
            "startLine": 58,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The issue ID"
                }
            ]
        },
        "getIssues": {
            "name": "getIssues",
            "summary": "Gets the issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL, ['scope' => 'all']);\n  }",
            "startLine": 69,
            "endLine": 72,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getClosedIssues": {
            "name": "getClosedIssues",
            "summary": "Gets the closed issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL, [\n      'scope' => 'all',\n      'state' => 'closed'\n    ]);\n  }",
            "startLine": 80,
            "endLine": 86,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getOpenedIssues": {
            "name": "getOpenedIssues",
            "summary": "Gets the opened issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL, [\n      'scope' => 'all',\n      'state' => 'opened'\n    ]);\n  }",
            "startLine": 94,
            "endLine": 100,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getIssueNotes": {
            "name": "getIssueNotes",
            "summary": "Gets the notes list of a specific issue of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, int $issue, string $sort = 'asc')\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL . $issue . '\/' . $this->noteURL, ['sort' => $sort]);\n  }",
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "issue",
                    "position": 1,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The issue ID"
                },
                {
                    "name": "sort",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "asc",
                    "default_name": "",
                    "description": "The sorting direction 'asc' or 'desc'"
                }
            ]
        },
        "createIssue": {
            "name": "createIssue",
            "summary": "Creates a new issue to the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Issue",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $title, string $date = '')\n  {\n    $params = [\n      'title' => \\urlencode($title)\n    ];\n    if (!empty($date)) {\n      $params['created_at'] = \\date('c', \\strtotime($date));\n    }\n    if ($issue = $this->post($this->projectURL . $project . '\/' . $this->issueURL, $params)) {\n      return $issue['id'];\n    }\n    return null;\n  }",
            "startLine": 122,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "title",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The issue's title"
                },
                {
                    "name": "date",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "The issue's date"
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}