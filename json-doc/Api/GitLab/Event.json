{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\GitLab\\Event",
    "namespace": true,
    "realName": "Event",
    "realNamespace": "bbn\\Api\\GitLab",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/GitLab\/Event.php",
    "startLine": 4,
    "endLine": 40,
    "numMethods": 3,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api\\GitLab",
    "shortName": "Event",
    "contentConstructor": null,
    "methods": {
        "getEvents": {
            "name": "getEvents",
            "summary": "Gets the events of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Event",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Event.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getEvents($project): array\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->eventURL);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 12,
            "endLine": 15,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getEvents",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ],
            "doc": {
                "description": "Gets the events of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/"
        },
        "getUsersEvents": {
            "name": "getUsersEvents",
            "summary": "Gets the users events of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Event",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Event.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getUsersEvents($project): array\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->eventURL, ['action' => 'joined']);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 23,
            "endLine": 26,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getUsersEvents",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ],
            "doc": {
                "description": "Gets the users events of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the users events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/"
        },
        "getCommitsEvents": {
            "name": "getCommitsEvents",
            "summary": "Gets the commits events of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Event",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Event.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCommitsEvents($project): array\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->eventURL, ['action' => 'pushed']);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 34,
            "endLine": 37,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getCommitsEvents",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ],
            "doc": {
                "description": "Gets the commits events of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the commits events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/"
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "uses": [],
    "dummyComments": [
        "\/**\n   * Gets the events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/",
        "\/**\n   * Gets the users events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/",
        "\/**\n   * Gets the commits events of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/"
    ],
    "summary": "",
    "description": "",
    "description_parts": []
}