{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\GitLab\\Project",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/GitLab\/Project.php",
    "startLine": 4,
    "endLine": 143,
    "numMethods": 8,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api\\GitLab",
    "shortName": "Project",
    "contentConstructor": null,
    "methods": {
        "getProjects": {
            "name": "getProjects",
            "summary": "Gets the list of projects to which you have access",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->projectURL, [\n      'order_by' => 'name',\n      'sort' => 'asc'\n    ]);\n  }",
            "startLine": 11,
            "endLine": 17,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getProjectsSimple": {
            "name": "getProjectsSimple",
            "summary": "Gets the list of projects to which you have access (simple mode)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->projectURL, [\n      'simple' => true,\n      'order_by' => 'name',\n      'sort' => 'asc'\n    ]);\n  }",
            "startLine": 24,
            "endLine": 31,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getProjectsList": {
            "name": "getProjectsList",
            "summary": "Gets the list of projects to which you have access",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $page = 1, int $perPage = 25)\n  {\n    $list = $this->request($this->projectURL, [\n      'order_by' => 'name',\n      'sort' => 'asc',\n      'page' => $page,\n      'per_page' => $perPage\n    ]);\n    $header = $this->getLastResponseHeader();\n    return [\n      'data' => $list,\n      'total' => (int)$header['x-total'],\n      'limit' => $perPage\n    ];\n  }",
            "startLine": 40,
            "endLine": 54,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "page",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": ""
                },
                {
                    "name": "perPage",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 25,
                    "default_name": "",
                    "description": "age"
                }
            ]
        },
        "getProject": {
            "name": "getProject",
            "summary": "Gets a specific project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, bool $includeStats = false)\n  {\n    $params = [];\n    if ($includeStats) {\n      $params['statistics'] = 'true';\n    }\n    return $this->request($this->projectURL . $project, $params);\n  }",
            "startLine": 62,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "includeStats",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "getProjectGroups": {
            "name": "getProjectGroups",
            "summary": "Gets the groups list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/groups');\n  }",
            "startLine": 77,
            "endLine": 80,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getCommits": {
            "name": "getCommits",
            "summary": "Gets the commits list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $branch = '', string $filePath = '', string $since = '', string $until = '')\n  {\n    $params = [];\n    if (!empty($filePath)) {\n      $params['path'] = \\urldecode($filePath);\n    }\n    if (!empty($branch)) {\n      $params['branch'] = $branch;\n    }\n    if (!empty($since)) {\n      $params['since'] = \\date('c', \\strtotime($since));\n    }\n    if (!empty($until)) {\n      $params['until'] = \\date('c', \\strtotime($until));\n    }\n    return $this->request($this->projectURL . $project . '\/repository\/commits', $params);\n  }",
            "startLine": 92,
            "endLine": 108,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "branch",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "The name of a repository branch, tag or revision range"
                },
                {
                    "name": "filePath",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "ath The file path"
                },
                {
                    "name": "since",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "Only commits after or on this date are returned"
                },
                {
                    "name": "until",
                    "position": 4,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "Only commits before or on this date are returned"
                }
            ]
        },
        "getCommit": {
            "name": "getCommit",
            "summary": "Gets a specific commit of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $id)\n  {\n    return $this->request($this->projectURL . $project . '\/repository\/commits\/' . $id);\n  }",
            "startLine": 116,
            "endLine": 119,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The commit hash or name of a repository branch or tag"
                }
            ]
        },
        "getDiff": {
            "name": "getDiff",
            "summary": "Gets the diff of a commit of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $id, string $filePath = '')\n  {\n    $diff = $this->request($this->projectURL . $project . '\/repository\/commits\/' . $id . '\/diff');\n    if (!empty($filePath)) {\n      if (!\\is_null($i = \\bbn\\X::find($diff, function($d) use($filePath){\n        return ($d->old_path === $filePath) || ($d->new_path === $filePath);\n      }))) {\n        return \\bbn\\X::toArray($diff[$i]);\n      }\n      return [];\n    }\n    return $diff;\n  }",
            "startLine": 128,
            "endLine": 140,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The commit hash or name of a repository branch or tag"
                },
                {
                    "name": "filePath",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "ath The file path"
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}