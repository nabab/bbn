{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\GitLab\\Project",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/GitLab\/Project.php",
    "startLine": 4,
    "endLine": 167,
    "numMethods": 11,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "projectURL": "projects\/"
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api\\GitLab",
    "shortName": "Project",
    "contentConstructor": null,
    "methods": {
        "getProjects": {
            "name": "getProjects",
            "summary": "Gets the list of projects to which you have access",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->request($this->projectURL);\n  }",
            "startLine": 15,
            "endLine": 18,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getProject": {
            "name": "getProject",
            "summary": "Gets a specific project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project);\n  }",
            "startLine": 26,
            "endLine": 29,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getProjectUsers": {
            "name": "getProjectUsers",
            "summary": "Gets the users list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/users');\n  }",
            "startLine": 37,
            "endLine": 40,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getProjectGroups": {
            "name": "getProjectGroups",
            "summary": "Gets the groups list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/groups');\n  }",
            "startLine": 48,
            "endLine": 51,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getCommits": {
            "name": "getCommits",
            "summary": "Gets the commits list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $branch = '', string $filePath = '', string $since = '', string $until = '')\n  {\n    $url = $this->projectURL . $project . '\/repository\/commits';\n    $params = [];\n    if (!empty($filePath)) {\n      $params[] = 'path=' . \\urldecode($filePath);\n    }\n    if (!empty($branch)) {\n      $params[] = 'branch=' . $branch;\n    }\n    if (!empty($since)) {\n      $params[] = 'since=' . \\date('c', \\strtotime($since));\n    }\n    if (!empty($until)) {\n      $params[] = 'until=' . \\date('c', \\strtotime($until));\n    }\n    foreach ($params as $i => $p) {\n      if ($i === 0) {\n        $url .= '?';\n      }\n      $url .= $p . (!empty($params[$i + 1]) ? '&' : '');\n    }\n    return $this->request($url);\n  }",
            "startLine": 63,
            "endLine": 86,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "branch",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "The name of a repository branch, tag or revision range"
                },
                {
                    "name": "filePath",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "ath The file path"
                },
                {
                    "name": "since",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "Only commits after or on this date are returned"
                },
                {
                    "name": "until",
                    "position": 4,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "Only commits before or on this date are returned"
                }
            ]
        },
        "getCommit": {
            "name": "getCommit",
            "summary": "Gets a specific commit of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $id)\n  {\n    return $this->request($this->projectURL . $project . '\/repository\/commits\/' . $id);\n  }",
            "startLine": 94,
            "endLine": 97,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The commit hash or name of a repository branch or tag"
                }
            ]
        },
        "getDiff": {
            "name": "getDiff",
            "summary": "Gets the diff of a commit of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, string $id, string $filePath = '')\n  {\n    $diff = $this->request($this->projectURL . $project . '\/repository\/commits\/' . $id . '\/diff');\n    if (!empty($filePath)) {\n      if (!\\is_null($i = \\bbn\\X::find($diff, function($d) use($filePath){\n        return ($d->old_path === $filePath) || ($d->new_path === $filePath);\n      }))) {\n        return \\bbn\\X::toArray($diff[$i]);\n      }\n      return [];\n    }\n    return $diff;\n  }",
            "startLine": 106,
            "endLine": 118,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The commit hash or name of a repository branch or tag"
                },
                {
                    "name": "filePath",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "ath The file path"
                }
            ]
        },
        "getIssues": {
            "name": "getIssues",
            "summary": "Gets the issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL . '?scoper=all');\n  }",
            "startLine": 126,
            "endLine": 129,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getClosedIssues": {
            "name": "getClosedIssues",
            "summary": "Gets the closed issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL . '?scoper=all&state=closed');\n  }",
            "startLine": 137,
            "endLine": 140,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getOpenedIssues": {
            "name": "getOpenedIssues",
            "summary": "Gets the opened issues list of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project)\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL . '?scoper=all&state=opened');\n  }",
            "startLine": 148,
            "endLine": 151,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ]
        },
        "getIssueNotes": {
            "name": "getIssueNotes",
            "summary": "Gets the notes list of a specific issue of the given project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\GitLab\\Project",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($project, int $issue, string $sort = 'asc')\n  {\n    return $this->request($this->projectURL . $project . '\/' . $this->issueURL . $issue . '\/' . $this->noteURL . '?sort=' . $sort);\n  }",
            "startLine": 161,
            "endLine": 164,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "issue",
                    "position": 1,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The issue ID"
                },
                {
                    "name": "sort",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "asc",
                    "default_name": "",
                    "description": "The sorting direction 'asc' or 'desc'"
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}