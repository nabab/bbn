{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\GitLab\\Branch",
    "namespace": true,
    "realName": "Branch",
    "realNamespace": "bbn\\Api\\GitLab",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/GitLab\/Branch.php",
    "startLine": 4,
    "endLine": 58,
    "numMethods": 4,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api\\GitLab",
    "shortName": "Branch",
    "contentConstructor": null,
    "methods": {
        "getBranches": {
            "name": "getBranches",
            "summary": "Gets the branches of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Branch",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Branch.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getBranches($project): array\n  {\n    return $this->request($this->projectURL . $project . '\/repository\/' . $this->branchURL);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 12,
            "endLine": 15,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getBranches",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                }
            ],
            "doc": {
                "description": "Gets the branches of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the branches of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/"
        },
        "getBranch": {
            "name": "getBranch",
            "summary": "Gets a specific branch of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Branch",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Branch.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getBranch($project, string $branch): array\n  {\n    return $this->request($this->projectURL . $project . '\/repository\/' . $this->branchURL . $branch);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 24,
            "endLine": 27,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "getBranch",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "branch",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The name of the brach"
                }
            ],
            "doc": {
                "description": "Gets a specific branch of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$branch",
                        "description": "The name of the brach"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets a specific branch of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the brach\n   * @return array\n   *\/"
        },
        "insertBranch": {
            "name": "insertBranch",
            "summary": "Creates a new branch into the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Branch",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Branch.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function insertBranch($project, string $branch, string $ref): array\n  {\n    return $this->post($this->projectURL . $project . '\/repository\/' . $this->branchURL, [\n      'branch' => $branch,\n      'ref' => $ref\n    ]);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 37,
            "endLine": 43,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "shortName": "insertBranch",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "branch",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The name of the new branch"
                },
                {
                    "name": "ref",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The branch name to create branch from"
                }
            ],
            "doc": {
                "description": "Creates a new branch into the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$branch",
                        "description": "The name of the new branch"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "description": "The branch name to create branch from"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Creates a new branch into the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the new branch\n   * @param string The branch name to create branch from\n   * @return array\n   *\/"
        },
        "deleteBranch": {
            "name": "deleteBranch",
            "summary": "Deletes a specific branch of the given project",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Api\\GitLab\\Branch",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Api\/GitLab\/Branch.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function deleteBranch($project, string $branch): bool\n  {\n    return $this->delete($this->projectURL . $project . '\/repository\/' . $this->branchURL . $branch);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 52,
            "endLine": 55,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "deleteBranch",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "project",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "ID or URL-encoded path of the project"
                },
                {
                    "name": "branch",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The name of the brach"
                }
            ],
            "doc": {
                "description": "Deletes a specific branch of the given project\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "int|string",
                        "name": "$project",
                        "description": "ID or URL-encoded path of the project"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$branch",
                        "description": "The name of the brach"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes a specific branch of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the brach\n   * @return bool\n   *\/"
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "uses": [],
    "dummyComments": [
        "\/**\n   * Gets the branches of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @return array\n   *\/",
        "\/**\n   * Gets a specific branch of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the brach\n   * @return array\n   *\/",
        "\/**\n   * Creates a new branch into the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the new branch\n   * @param string The branch name to create branch from\n   * @return array\n   *\/",
        "\/**\n   * Deletes a specific branch of the given project\n   * @param int|string $project ID or URL-encoded path of the project\n   * @param string $branch The name of the brach\n   * @return bool\n   *\/"
    ],
    "summary": "",
    "description": "",
    "description_parts": []
}