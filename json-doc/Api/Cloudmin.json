{
    "doc": {
        "description": "A class for executing Cloudmin commands.\nphp version 7.4",
        "tags": {
            "package": "BBN_Library",
            "author": "Vito Fava <vito.nabet@gmail.com>",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "Release: 0.1",
            "link": "https:\/\/bbn.io\/bbn-php\/doc\/class\/appui\/api",
            "since": "Apr 4, 2011, 23:23:55 +0000\n *"
        }
    },
    "name": "bbn\\Api\\Cloudmin",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Api\/Cloudmin.php",
    "startLine": 21,
    "endLine": 473,
    "contentConstructor": {
        "file": "bbn\\Api\\Cloudmin",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    if (isset($cfg['user'], $cfg['pass'])) {\n      $this->_user     = $cfg['user'];\n      $this->_pass     = $cfg['pass'];\n      $this->_hostname = 'cloudmin.lan';\n      $this->_checked  = true;\n    }\n\n  }",
            "startLine": 56,
            "endLine": 65,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "listSystems": {
            "name": "listSystems",
            "summary": "return list of virtual machine",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->last_action = \"list-systems\";\n    \/\/Defining  the $url_part and the command to be executed\n    $url_part = \"list-systems\";\n    \/\/Concatenating the closing single quote\n    $url_part .= \"'\";\n    \/\/Concatenating the header url and $url_part to create the full url to be executed\n    $url_part = $this->_get_header_url() . $url_part;\n\n    \/\/Calling shell_exec and returning the result array\n    return array_map(\n      function ($a) {\n        array_walk(\n          $a['values'], function (&$b) {\n            if (\\is_array($b) && array_key_exists(0, $b) && (count($b) === 1)) {\n              $b = $b[0];\n            }\n          }\n        );\n        $a['values']['name'] = $a['name'];\n        if ($a['values']['filesystem']) {\n          array_walk(\n            $a['values']['filesystem'], function (&$b) {\n              $tmp = explode(' ', $b);\n              $b   = [\n              'name' => $tmp[0],\n              'size' => $tmp[2],\n              'size_unit' => $tmp[3],\n              'used' => $tmp[5],\n              'used_unit' => $tmp[6],\n              'free' => $tmp[8],\n              'free_unit' => $tmp[9]\n              ];\n            }\n          );\n        }\n\n        $a['values']['available_updates'] = count(explode(', ', $a['values']['available_updates']));\n        return $a['values'];\n      }, $this->_call_shell_exec($url_part)\n    );\n\n  }",
            "startLine": 73,
            "endLine": 116,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, array $arguments)\n  {\n    if ($this->_checked) {\n      $cmd_name = str_replace('-', '_', $name);\n\n      \/\/ TODO ho tolto il controllo $this->commands[$cmd_name]\n      \/\/ if ( isset($this->commands[$cmd_name]) ){\n\n      \/\/Setting the last action performed\n      $this->last_action = $cmd_name;\n      \/\/Defining  the $url_part and the command to be executed\n      $url_part = $cmd_name;\n      if (!empty($arguments[0])) {\n        \/\/Prepping, processing and validating the create user parameters\n        $args = $this->processParameters($arguments[0]);\n\n        \/\/ TODO tolto i comandi, messo gli argomenti\n        foreach ($args as $k => $v){\n          if (!empty($v['mandatory']) && !isset($args[$k])) {\n            if ((strpos($k, 'pass') === false)\n                && (!isset($args['pass']) && !isset($args['encpass']) && !isset($args['passfile']))\n            ) {\n              var_dump(\"Parameter $k mandatory for $name!\");\n              return false;\n            }\n          }\n\n          \/\/ TODO controlllo se questi valori sono boolean e se nono  a true\n          if (isset($v)) {\n            if (is_bool($v['binary'])\n                && ($v['binary'] == true)\n            ) {\n              $url_part .= \"&$k\";\n            }\n            elseif (\\is_array($v)\n                && is_bool($v['multiple'])\n                && ($v['multiple'] == true)\n            ) {\n              foreach ($v as $w){\n                $url_part .= \"&$k=$w\";\n              }\n            }\n            else{\n              $url_part .= \"&$k=\".$args[$k];\n            }\n          }\n        }\n\n        \/\/ }\n        \/\/Concatenating the closing single quote\n        $url_part .= \"'\";\n        \/\/Concatenating the header url and $url_part to create the full url to be executed\n        $url_part = $this->_get_header_url() . $url_part;\n        \/\/Calling shell_exec and returning the result array\n        return $this->_call_shell_exec($url_part);\n      }\n      \/\/ We force even if we don't have the command in the list\n      elseif (!empty($arguments[1])) {\n        $args     = $this->processParameters($arguments[0]);\n        $url_part = $cmd_name;\n        foreach ($args as $k => $v){\n          if (\\is_array($v)) {\n            foreach ($v as $w){\n              $url_part .= \"&$k=$w\";\n            }\n          }\n          elseif ($v === 1) {\n            $url_part .= \"&$k\";\n          }\n          else{\n            $url_part .= \"&$k=$v\";\n          }\n        }\n\n        \/\/Concatenating the closing single quote\n        $url_part .= \"'\";\n        \/\/Concatenating the header url and $url_part to create the full url to be executed\n        $url_part = $this->_get_header_url() . $url_part;\n        X::log($url_part, 'webmin');\n        \/\/Calling shell_exec and returning the result array\n        return $this->_call_shell_exec($url_part);\n      }\n      else{\n        die(\"The command $name doesn't exist...\");\n      }\n    }\n\n    return false;\n\n  }",
            "startLine": 124,
            "endLine": 213,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The name of the method called"
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The arguments given to the method"
                }
            ]
        },
        "getArgs": {
            "name": "getArgs",
            "summary": "Returns the arguments description of a given command",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n    if ($this->_checked) {\n      $cmd_name = str_replace('_', '-', $name);\n      return isset($this->commands[$cmd_name], $this->commands[$cmd_name]['args']) ? $this->commands[$cmd_name]['args'] : [];\n    }\n\n  }",
            "startLine": 372,
            "endLine": 379,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The command name"
                }
            ]
        },
        "getCommands": {
            "name": "getCommands",
            "summary": "Returns an array containing all the commands and their parameters",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->_checked) {\n      return $this->commands;\n    }\n\n  }",
            "startLine": 386,
            "endLine": 392,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "listCommands": {
            "name": "listCommands",
            "summary": "Gets all the commands directly from the API",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($param = [])\n  {\n    \/\/Prepping, processing and validating the create user parameters\n    $param = $this->processParameters($param);\n    \/\/Setting the last action performed\n    $this->last_action = \"list-commands\";\n\n    \/\/Defining  the $url_part and the command to be executed\n    $url_part = \"list-commands\";\n    if (isset($param['short'])) {\/\/short parameter is set\n      $url_part .= \"&short\";\n    }\n\n    if (isset($param['nameonly'])) {\/\/nameonly parameter is set\n      $url_part .= \"&nameonly\";\n    }\n\n    \/\/Concatenating the closing single quote\n    $url_part .= \"'\";\n    \/\/Concatenating the header url and $url_part to create the full url to be executed\n    $url_part = $this->_get_header_url() . $url_part;\n    \/\/Calling shell_exec and returning the result array\n    return $this->_call_shell_exec($url_part);\n\n  }",
            "startLine": 400,
            "endLine": 424,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "param",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getCommand": {
            "name": "getCommand",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($command)\n  {\n    $command = str_replace('_', '-', $command);\n    \/\/Setting the last action performed\n    $this->last_action = \"get-command\";\n\n    \/\/Defining  the $url_part and the command to be executed\n    $url_part = \"get-command&command=\".$this->_sanitize($command);\n    \/\/Concatenating the closing single quote\n    $url_part .= \"'\";\n    \/\/Concatenating the header url and $url_part to create the full url to be executed\n    $url_part = $this->_get_header_url() . $url_part;\n    \/\/Calling shell_exec and returning the result array\n    return $this->_call_shell_exec($url_part);\n\n  }",
            "startLine": 431,
            "endLine": 446,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "command",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "generate": {
            "name": "generate",
            "summary": "Returns a string of PHP code for executing a given command with all its possible parameters pre-populated",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmin",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($command)\n  {\n    $perl_cmd = str_replace('_', '-', $command);\n    if (isset($this->commands[$perl_cmd])) {\n      $cmd = $this->commands[$perl_cmd];\n      $st  = '$vm->'.$command.'(['.PHP_EOL;\n      foreach ($cmd['args'] as $k => $v){\n        $st .= \"'$k' => \".($v['binary'] ? '0' : \"''\").PHP_EOL;\n      }\n\n      $st .= ']);';\n      return $st;\n    }\n\n    return false;\n\n  }",
            "startLine": 454,
            "endLine": 470,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "command",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "last_action": {
            "visibility": "public",
            "doc": {
                "description": "@var string The last action to have been performed",
                "tags": []
            }
        },
        "error": {
            "visibility": "public",
            "doc": {
                "description": "@var",
                "tags": []
            }
        },
        "message": {
            "visibility": "public",
            "doc": {
                "description": "@var [type]",
                "tags": []
            }
        }
    },
    "staticProperties": [],
    "constants": [],
    "numMethods": 8,
    "numProperties": 3,
    "numConstants": 1,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_user": null,
        "_pass": null,
        "_checked": false,
        "_commands": null,
        "_cacher": null,
        "last_action": false,
        "error": false,
        "message": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api",
    "shortName": "Cloudmin",
    "summary": "A class for executing Cloudmin commands.",
    "description": "php version 7.4",
    "description_parts": [
        {
            "type": "text",
            "content": "<p>php version 7.4<\/p>"
        }
    ]
}