{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Api\\Cloudmintest",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Api\/Cloudmintest.php",
    "startLine": 13,
    "endLine": 361,
    "contentConstructor": {
        "file": "bbn\\Api\\Cloudmintest",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "virtualmin constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n      $this->user = $cfg['user'];\n      $this->pass = $cfg['pass'];\n      \/\/  TODO ho rimpiazzato\n      \/\/$this->mode = $cfg['mode'] === 'cloudmin' ? 'cloudmin' : 'virtualmin';\n      $this->mode = $mode;\n      $this->hostname = isset($cfg['host']) ? $cfg['host'] : 'localhost';\n      $this->checked = true;\n      \/\/ TODO tolto la cache  e this->commands = $this->fetch_commands\n\n    }\n  }",
            "startLine": 43,
            "endLine": 55,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n      $cmd_name = str_replace('-', '_', $name);\n\n\n      \/\/ TODO ho tolto il controllo $this->commands[$cmd_name]\n      \/\/ if ( isset($this->commands[$cmd_name]) ){\n\n      \/\/Setting the last action performed\n      $this->last_action = $cmd_name;\n      \/\/Defining  the $url_part and the command to be executed\n      $url_part = $cmd_name;\n\n      if ( !empty($arguments[0]) ){\n        \/\/Prepping, processing and validating the create user parameters\n        $args = $this->processParameters($arguments[0]);\n\n        \/\/ TODO tolto i comandi, messo gli argomenti\n        foreach ( $args as $k => $v ){\n          if ( !empty($v['mandatory']) && !isset($args[$k]) ){\n            if ( (strpos($k, 'pass') === false) &&\n              (!isset($args['pass']) && !isset($args['encpass']) && !isset($args['passfile']))\n            ){\n              var_dump(\"Parameter $k mandatory for $name!\");\n              return false;\n            }\n          }\n          \/\/ TODO controlllo se questi valori sono boolean e se no  a true\n          if ( isset($v) ){\n            if ( is_bool($v['binary']) &&\n              ($v['binary'] == true)\n            ){\n              $url_part .= \"&$k\";\n            }\n            else if ( \\is_array($v) &&\n              is_bool($v['multiple']) &&\n              ($v['multiple'] == true)\n            ){\n              foreach ( $v as $w ){\n                $url_part .= \"&$k=$w\";\n              }\n            }\n            else{\n              $url_part .= \"&$k=\".$args[$k];\n            }\n          }\n        }\n        \/\/ }\n        \/\/Concatenating the closing single quote\n        $url_part .= \"'\";\n        \/\/Concatenating the header url and $url_part to create the full url to be executed\n        $url_part = $this->getHeaderUrl() . $url_part;\n        \/\/Calling shell_exec and returning the result array\n        return $this->callShellExec($url_part);\n      }\n      \/\/ We force even if we don't have the command in the list\n      else if ( !empty($arguments[1]) ){\n        $args = $this->processParameters($arguments[0]);\n        $url_part = $cmd_name;\n        foreach ( $args as $k => $v ){\n          if ( \\is_array($v) ){\n            foreach ( $v as $w ){\n              $url_part .= \"&$k=$w\";\n            }\n          }\n          else if ( $v === 1 ){\n            $url_part .= \"&$k\";\n          }\n          else{\n            $url_part .= \"&$k=$v\";\n          }\n        }\n        \/\/Concatenating the closing single quote\n        $url_part .= \"'\";\n        \/\/Concatenating the header url and $url_part to create the full url to be executed\n        $url_part = $this->getHeaderUrl() . $url_part;\n        \\bbn\\X::log($url_part, 'webmin');\n        \/\/Calling shell_exec and returning the result array\n        return $this->callShellExec($url_part);\n      }\n      else{\n        die(\"The command $name doesn't exist...\");\n      }\n    }\n    return false;\n  }",
            "startLine": 62,
            "endLine": 147,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getArgs": {
            "name": "getArgs",
            "summary": "Returns the arguments description of a given command",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n      $cmd_name = str_replace('_', '-', $name);\n      return isset($this->commands[$cmd_name], $this->commands[$cmd_name]['args']) ? $this->commands[$cmd_name]['args'] : [];\n    }\n  }",
            "startLine": 277,
            "endLine": 282,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The command name"
                }
            ]
        },
        "getCommands": {
            "name": "getCommands",
            "summary": "Returns an array containing all the commands and their parameters",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return $this->commands;\n    }\n  }",
            "startLine": 288,
            "endLine": 292,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "listCommands": {
            "name": "listCommands",
            "summary": "Gets all the commands directly from the API",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($param = [])\n  {\n    $param = $this->processParameters($param);\n    \/\/Setting the last action performed\n    $this->last_action = \"list-commands\";\n\n    \/\/Defining  the $url_part and the command to be executed\n    $url_part = \"list-commands\";\n    if (isset($param['short'])){\/\/short parameter is set\n      $url_part .= \"&short\";\n    }\n\n    if (isset($param['nameonly'])){\/\/nameonly parameter is set\n      $url_part .= \"&nameonly\";\n    }\n    \/\/Concatenating the closing single quote\n    $url_part .=\"'\";\n    \/\/Concatenating the header url and $url_part to create the full url to be executed\n    $url_part = $this->getHeaderUrl() . $url_part;\n    \/\/Calling shell_exec and returning the result array\n    return $this->callShellExec($url_part);\n  }",
            "startLine": 300,
            "endLine": 321,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "param",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getCommand": {
            "name": "getCommand",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($command)\n  {\n    \/\/Setting the last action performed\n    $this->last_action = \"get-command\";\n\n    \/\/Defining  the $url_part and the command to be executed\n    $url_part = \"get-command&command=\".$this->sanitize($command);\n    \/\/Concatenating the closing single quote\n    $url_part .=\"'\";\n    \/\/Concatenating the header url and $url_part to create the full url to be executed\n    $url_part = $this->getHeaderUrl() . $url_part;\n      \n    \/\/Calling shell_exec and returning the result array\n    return $this->callShellExec($url_part);\n  }",
            "startLine": 327,
            "endLine": 341,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "command",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "generate": {
            "name": "generate",
            "summary": "Returns a string of PHP code for executing a given command with all its possible parameters pre-populated",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Api\\Cloudmintest",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($command)\n  {\n    if ( isset($this->commands[$perl_cmd]) ){\n      $cmd = $this->commands[$perl_cmd];\n      $st = '$vm->'.$command.'(['.PHP_EOL;\n      foreach ( $cmd['args'] as $k => $v ){\n        $st .= \"'$k' => \".($v['binary'] ? '0' : \"''\").PHP_EOL;\n      }\n      $st .= ']);';\n      return $st;\n    }\n    return false;\n  }",
            "startLine": 348,
            "endLine": 360,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "command",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "last_action": {
            "visibility": "public"
        },
        "error": {
            "visibility": "public"
        },
        "message": {
            "visibility": "public"
        }
    },
    "staticProperties": [],
    "constants": [],
    "numMethods": 7,
    "numProperties": 3,
    "numConstants": 1,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "user": null,
        "pass": null,
        "hostname": null,
        "mode": "cloudmin",
        "checked": false,
        "commands": false,
        "cacher": null,
        "last_action": false,
        "error": false,
        "message": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Api",
    "shortName": "Cloudmintest",
    "summary": "",
    "description": "",
    "description_parts": []
}