{
    "doc": {
        "description": "Class for Subversion usage. It will use the PHP SVN functions if available, and will try to use SVN commands through <em>system<\/em> otherwise.\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Utilities",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\Version\\Svn",
    "namespace": true,
    "realName": "Svn",
    "realNamespace": "bbn\\Version",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Version\/Svn.php",
    "startLine": 19,
    "endLine": 172,
    "numMethods": 9,
    "numProperties": 7,
    "numConstants": 0,
    "numStaticProperties": 1,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "current": "",
        "url": null,
        "has_svn": false,
        "hash": null,
        "auth": false,
        "user": null,
        "pass": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Version",
    "shortName": "Svn",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "setCurrent": {
            "name": "setCurrent",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": true,
            "visibility": "private",
            "final": false,
            "code": "  private static function setCurrent($path){\n    self::$current = $path;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 33,
            "endLine": 35,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setCurrent",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "auth": {
            "name": "auth",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function auth(){\n    if ( !$this->auth || (self::$current !== $this->hash) ){\n      svn_auth_set_parameter(PHP_SVN_AUTH_PARAM_IGNORE_SSL_VERIFY_ERRORS, true);\n      svn_auth_set_parameter(SVN_AUTH_PARAM_NON_INTERACTIVE, true);\n      svn_auth_set_parameter(SVN_AUTH_PARAM_NO_AUTH_CACHE, true);\n      if ($this->user){\n        svn_auth_set_parameter(SVN_AUTH_PARAM_DEFAULT_USERNAME, $this->user);\n      }\n      if ($this->pass){\n        svn_auth_set_parameter(SVN_AUTH_PARAM_DEFAULT_PASSWORD, $this->pass);\n      }\n      self::setCurrent($this->hash);\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 37,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "auth",
            "returns": [],
            "arguments": []
        },
        "args": {
            "name": "args",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function args(){\n    $st = $this->url;\n    if ( $this->user ){\n      $st .= ' --username '.$this->user;\n    }\n    if ( $this->pass ){\n      $st .= ' --password '.$this->pass;\n    }\n    return $st.' --xml 2>&1';\n  }",
            "parent": false,
            "trait": false,
            "startLine": 52,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "args",
            "returns": [],
            "arguments": []
        },
        "parseCMD": {
            "name": "parseCMD",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function parseCMD($st){\n    if ( !mb_detect_encoding($st) ){\n      $st = Str::toUtf8($st);\n    }\n\n    $tmp = explode(\"\\n\", $st);\n    $res = [];\n    foreach ( $tmp as $t ){\n      $i = strpos($t, ':');\n      if ( $i > 0 ){\n        $res[Str::changeCase(Str::encodeFilename(substr($t, 0, $i)), 'lower')] = trim(substr($t, $i+1));\n      }\n    }\n    return $res;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 63,
            "endLine": 77,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "parseCMD",
            "returns": [],
            "arguments": [
                {
                    "name": "st",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function __construct($url, $user=false, $pass=false)\n\t{\n\t\t$this->url = $url;\n\t\t$this->user = $user;\n\t\t$this->pass = $pass;\n    $this->hash = md5($url.(string)$user.(string)$pass);\n\t\tif ( function_exists('svn_export') ){\n\t\t\t$this->has_svn = 1;\n\t\t}\n\t}",
            "parent": false,
            "trait": false,
            "startLine": 79,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                },
                {
                    "name": "pass",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "export": {
            "name": "export",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function export($to, $rev='')\n\t{\n\t\tif ( is_dir($to) ){\n\t\t\tif ( $this->has_svn ){\n        $this->auth();\n\t\t\t\treturn svn_export($this->url, $to, false);\n\t\t\t}\n\t\t\telse{\n        ob_start();\n\t\t\t\tsystem(\"svn export \".$this->args().\" $to --force\");\n        $st = ob_get_contents();\n        ob_end_clean();\n        return $st;\n\t\t\t}\n\t\t}\n\t}",
            "parent": false,
            "trait": false,
            "startLine": 90,
            "endLine": 105,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "export",
            "returns": [],
            "arguments": [
                {
                    "name": "to",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "rev",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "info": {
            "name": "info",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function info($path='\/')\n  {\n    if ( $this->has_svn ){\n      $this->auth();\n      return svn_status($this->url.$path, SVN_NON_RECURSIVE|SVN_ALL);\n    }\n    else{\n      ob_start();\n      system(\"svn info \".$this->args());\n      $st = ob_get_contents();\n      ob_end_clean();\n      bbn\\X::hdump($st);\n      return $this->parseCMD($st);\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 107,
            "endLine": 121,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "info",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "\/",
                    "default_name": ""
                }
            ]
        },
        "last": {
            "name": "last",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function last($path='\/')\n  {\n    if ( $this->has_svn ){\n      $this->auth();\n      return svn_status($this->url.$path, SVN_NON_RECURSIVE|SVN_ALL);\n    }\n    else{\n      ob_start();\n      header('Content-Type: text\/plain; charset=UTF-8');\n      print(shell_exec(\"svn info --xml \".$this->args()));\n      $st = ob_get_contents();\n      ob_end_clean();\n      $log = new \\SimpleXMLElement($st);\n      if ( isset($log->entry['revision']) ){\n        return (int)$log->entry['revision'];\n      }\n    }\n    \n  }",
            "parent": false,
            "trait": false,
            "startLine": 123,
            "endLine": 141,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "last",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "\/",
                    "default_name": ""
                }
            ]
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Version\\Svn",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Version\/Svn.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log($path='\/', $num = 5)\n  {\n    if ( $this->has_svn ){\n      $this->auth();\n      return svn_log($this->url.$path);\n      \/\/return svn_status($path, SVN_NON_RECURSIVE|SVN_ALL);\n    }\n    else{\n      if ( !$num ){\n        $num = $this->last($this->url.$path);\n      }\n      ob_start();\n      header('Content-Type: text\/plain; charset=UTF-8');\n      print(shell_exec(\"svn log -l $num \".$this->args()));\n      $st = ob_get_contents();\n      ob_end_clean();\n      $log = new \\SimpleXMLElement($st);\n      $r = [];\n      \/\/bbn\\X::hdump($st);\n      foreach ( $log->logentry as $l ){\n        $r[(int)$l['revision']] = [\n          'author' => (string)$l->author,\n          'date' => date('Y-m-d H:i:s', strtotime($l->date)),\n          'msg' => (string)$l->msg\n        ];\n      }\n      return $r;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 143,
            "endLine": 171,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "\/",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 5,
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "url": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "public",
            "doc": "",
            "parent": false,
            "value": null
        },
        "has_svn": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "public",
            "doc": "",
            "parent": false,
            "value": false
        },
        "hash": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "auth": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": false
        },
        "user": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "pass": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": null
        },
        "current": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Version\\Svn"
            },
            "declaring_trait": "bbn\\Version\\Svn",
            "promoted": false,
            "visibility": "private",
            "doc": "",
            "parent": false,
            "value": ""
        }
    },
    "staticProperties": {
        "current": ""
    },
    "constants": null,
    "uses": {
        "bbn\\Str": "Str"
    },
    "dummyComments": [
        "\/**\n * @package version\n *\/",
        "\/**\n * Class for Subversion usage. It will use the PHP SVN functions if available, and will try to use SVN commands through <em>system<\/em> otherwise.\n *\n *\n * @author Thomas Nabet <thomas.nabet@gmail.com>\n * @copyright BBN Solutions\n * @since Apr 4, 2011, 23:23:55 +0000\n * @category  Utilities\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n * @version 0.2r89\n *\/"
    ],
    "summary": "Class for Subversion usage. It will use the PHP SVN functions if available, and will try to use SVN commands through <em>system<\/em> otherwise.",
    "description": "",
    "description_parts": []
}