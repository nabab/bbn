{
    "doc": {
        "description": "DB Interface\n\n\nThese methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method.\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Database",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\Db\\Engines",
    "namespace": true,
    "realName": "Engines",
    "realNamespace": "bbn\\Db",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Db\/Engines.php",
    "startLine": 23,
    "endLine": 622,
    "numMethods": 74,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": true,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": true,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Db",
    "shortName": "Engines",
    "contentConstructor": null,
    "methods": {
        "postCreation": {
            "name": "postCreation",
            "summary": "Actions to do once the PDO object has been created",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function postCreation();",
            "parent": false,
            "trait": false,
            "startLine": 39,
            "endLine": 39,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "postCreation",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Actions to do once the PDO object has been created\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Actions to do once the PDO object has been created\n   *\n   * @return void\n   *\/"
        },
        "change": {
            "name": "change",
            "summary": "Fetches the database and returns an array of several arrays of rows text-indexed",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function change(string $db);",
            "parent": false,
            "trait": false,
            "startLine": 48,
            "endLine": 48,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "change",
            "returns": [],
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Fetches the database and returns an array of several arrays of rows text-indexed\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$db"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Fetches the database and returns an array of several arrays of rows text-indexed\n   *\n   * @param string $db\n   * @return mixed\n   *\/"
        },
        "escape": {
            "name": "escape",
            "summary": "Returns a database item expression escaped like database, table, column, key names",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function escape(string $item): string;",
            "parent": false,
            "trait": false,
            "startLine": 57,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "escape",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "item",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The item's name (escaped or not)"
                }
            ],
            "doc": {
                "description": "Returns a database item expression escaped like database, table, column, key names\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$item",
                        "description": "The item's name (escaped or not)"
                    }
                ],
                "return": "| false"
            },
            "comments": "  \/**\n   * Returns a database item expression escaped like database, table, column, key names\n   *\n   * @param string $item The item's name (escaped or not)\n   * @return string | false\n   *\/"
        },
        "tableFullName": {
            "name": "tableFullName",
            "summary": "Returns a table's full name i.e. database.table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function tableFullName(string $table, bool $escaped = false): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 67,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "tableFullName",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The table's name (escaped or not)"
                },
                {
                    "name": "escaped",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the returned string will be escaped"
                }
            ],
            "doc": {
                "description": "Returns a table's full name i.e. database.table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table",
                        "description": "The table's name (escaped or not)"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$escaped",
                        "description": "If set to true the returned string will be escaped"
                    }
                ],
                "return": "| false"
            },
            "comments": "  \/**\n   * Returns a table's full name i.e. database.table\n   *\n   * @param string $table   The table's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/"
        },
        "tableSimpleName": {
            "name": "tableSimpleName",
            "summary": "Returns a table's simple name i.e. table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function tableSimpleName(string $table, bool $escaped = false): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 77,
            "endLine": 77,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "tableSimpleName",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The table's name (escaped or not)"
                },
                {
                    "name": "escaped",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the returned string will be escaped"
                }
            ],
            "doc": {
                "description": "Returns a table's simple name i.e. table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table",
                        "description": "The table's name (escaped or not)"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$escaped",
                        "description": "If set to true the returned string will be escaped"
                    }
                ],
                "return": "| false"
            },
            "comments": "  \/**\n   * Returns a table's simple name i.e. table\n   *\n   * @param string $table   The table's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/"
        },
        "colFullName": {
            "name": "colFullName",
            "summary": "Returns a column's full name i.e. table.column",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function colFullName(string $col, ?string $table = null, bool $escaped = false);",
            "parent": false,
            "trait": false,
            "startLine": 88,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "colFullName",
            "returns": [],
            "arguments": [
                {
                    "name": "col",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The column's name (escaped or not)"
                },
                {
                    "name": "table",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The table's name (escaped or not)"
                },
                {
                    "name": "escaped",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the returned string will be escaped"
                }
            ],
            "doc": {
                "description": "Returns a column's full name i.e. table.column\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$col",
                        "description": "The column's name (escaped or not)"
                    },
                    {
                        "tag": "param",
                        "type": "null|string",
                        "name": "$table",
                        "description": "The table's name (escaped or not)"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$escaped",
                        "description": "If set to true the returned string will be escaped"
                    }
                ],
                "return": "| false"
            },
            "comments": "  \/**\n   * Returns a column's full name i.e. table.column\n   *\n   * @param string      $col     The column's name (escaped or not)\n   * @param null|string $table   The table's name (escaped or not)\n   * @param bool        $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/"
        },
        "colSimpleName": {
            "name": "colSimpleName",
            "summary": "Returns a column's simple name i.e. column",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function colSimpleName(string $col, bool $escaped = false);",
            "parent": false,
            "trait": false,
            "startLine": 98,
            "endLine": 98,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "colSimpleName",
            "returns": [],
            "arguments": [
                {
                    "name": "col",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The column's name (escaped or not)"
                },
                {
                    "name": "escaped",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the returned string will be escaped"
                }
            ],
            "doc": {
                "description": "Returns a column's simple name i.e. column\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$col",
                        "description": "The column's name (escaped or not)"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$escaped",
                        "description": "If set to true the returned string will be escaped"
                    }
                ],
                "return": "| false"
            },
            "comments": "  \/**\n   * Returns a column's simple name i.e. column\n   *\n   * @param string $col     The column's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/"
        },
        "isTableFullName": {
            "name": "isTableFullName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isTableFullName(string $table): bool;",
            "parent": false,
            "trait": false,
            "startLine": 105,
            "endLine": 105,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isTableFullName",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $table\n   * @return bool\n   *\/"
        },
        "isColFullName": {
            "name": "isColFullName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isColFullName(string $col): bool;",
            "parent": false,
            "trait": false,
            "startLine": 112,
            "endLine": 112,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isColFullName",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "col",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$col"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $col\n   * @return bool\n   *\/"
        },
        "disableKeys": {
            "name": "disableKeys",
            "summary": "Disables foreign keys check.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function disableKeys();",
            "parent": false,
            "trait": false,
            "startLine": 119,
            "endLine": 119,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "disableKeys",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Disables foreign keys check.\n",
                "tags": []
            },
            "comments": "  \/**\n   * Disables foreign keys check.\n   *\n   *\/"
        },
        "enableKeys": {
            "name": "enableKeys",
            "summary": "Enables foreign keys check.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function enableKeys();",
            "parent": false,
            "trait": false,
            "startLine": 126,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "enableKeys",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Enables foreign keys check.\n",
                "tags": []
            },
            "comments": "  \/**\n   * Enables foreign keys check.\n   *\n   *\/"
        },
        "getDatabases": {
            "name": "getDatabases",
            "summary": "Return databases' names as an array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getDatabases(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 134,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getDatabases",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return databases' names as an array.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return databases' names as an array.\n   *\n   * @return false|array\n   *\/"
        },
        "getTables": {
            "name": "getTables",
            "summary": "Return tables' names of a database as an array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getTables(string $database = ''): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 143,
            "endLine": 143,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getTables",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "database",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return tables' names of a database as an array.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return tables' names of a database as an array.\n   *\n   * @param string $database\n   * @return null|array\n   *\/"
        },
        "getColumns": {
            "name": "getColumns",
            "summary": "Return columns' structure of a table as an array indexed with the fields names.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getColumns(string $table): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 152,
            "endLine": 152,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getColumns",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return columns' structure of a table as an array indexed with the fields names.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return columns' structure of a table as an array indexed with the fields names.\n   *\n   * @param string $table\n   * @return null|array\n   *\/"
        },
        "getRows": {
            "name": "getRows",
            "summary": "Return an array that includes indexed arrays for every row resultant from the query.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getRows(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 160,
            "endLine": 160,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getRows",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array that includes indexed arrays for every row resultant from the query.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array that includes indexed arrays for every row resultant from the query.\n   *\n   * @return array|null\n   *\/"
        },
        "getRow": {
            "name": "getRow",
            "summary": "Return the first row resulting from the query as an array indexed with the fields' name.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getRow(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 168,
            "endLine": 168,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getRow",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return the first row resulting from the query as an array indexed with the fields' name.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return the first row resulting from the query as an array indexed with the fields' name.\n   *\n   * @return array|null\n   *\/"
        },
        "getIrow": {
            "name": "getIrow",
            "summary": "Return a row as a numeric indexed array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getIrow(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 175,
            "endLine": 175,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getIrow",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return a row as a numeric indexed array.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return a row as a numeric indexed array.\n   *\n   * @return array|null\n   *\/"
        },
        "getIrows": {
            "name": "getIrows",
            "summary": "Return an array of numeric indexed rows.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getIrows(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 183,
            "endLine": 183,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getIrows",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array of numeric indexed rows.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array of numeric indexed rows.\n   *\n   * @return array|null\n   *\/"
        },
        "getByColumns": {
            "name": "getByColumns",
            "summary": "Return an array indexed on the searched field's in which there are all the values of the column.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getByColumns(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 191,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getByColumns",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array indexed on the searched field's in which there are all the values of the column.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array indexed on the searched field's in which there are all the values of the column.\n   *\n   * @return array|null\n   *\/"
        },
        "getObject": {
            "name": "getObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getObject(): ?\\stdClass;",
            "parent": false,
            "trait": false,
            "startLine": 196,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getObject",
            "returns": [
                null,
                "stdClass"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return \\stdClass|null\n   *\/"
        },
        "getObjects": {
            "name": "getObjects",
            "summary": "Return an array of stdClass objects.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getObjects(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 204,
            "endLine": 204,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getObjects",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array of stdClass objects.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array of stdClass objects.\n   *\n   * @return array|null\n   *\/"
        },
        "getKeys": {
            "name": "getKeys",
            "summary": "Return the table's keys as an array indexed with the fields names.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getKeys(string $table): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 212,
            "endLine": 212,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getKeys",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return the table's keys as an array indexed with the fields names.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return the table's keys as an array indexed with the fields names.\n   *\n   * @param string $table\n   * @return null|array\n   *\/"
        },
        "getConditions": {
            "name": "getConditions",
            "summary": "Returns a string with the conditions for any filter clause.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getConditions(array $conditions, array $cfg = [], bool $is_having = false, int $indent = 0): string;",
            "parent": false,
            "trait": false,
            "startLine": 224,
            "endLine": 224,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getConditions",
            "returns": [
                "string"
            ],
            "arguments": [
                {
                    "name": "conditions",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "is_having",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "having"
                },
                {
                    "name": "indent",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns a string with the conditions for any filter clause.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$conditions"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$is",
                        "description": "having"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$indent"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns a string with the conditions for any filter clause.\n   *\n   * @param array $conditions\n   * @param array $cfg\n   * @param bool $is_having\n   * @param int $indent\n   * @return string\n   *\/"
        },
        "createDatabase": {
            "name": "createDatabase",
            "summary": "Creates a database",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function createDatabase(string $database, ?string $enc = null, ?string $collation = null): bool;",
            "parent": false,
            "trait": false,
            "startLine": 233,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "createDatabase",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "database",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "enc",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "collation",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Creates a database\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Creates a database\n   *\n   * @param string $database\n   * @return bool\n   *\/"
        },
        "dropDatabase": {
            "name": "dropDatabase",
            "summary": "Drops a database",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function dropDatabase(string $database): bool;",
            "parent": false,
            "trait": false,
            "startLine": 242,
            "endLine": 242,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "dropDatabase",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "database",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Drops a database\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Drops a database\n   *\n   * @param string $database\n   * @return bool\n   *\/"
        },
        "createTable": {
            "name": "createTable",
            "summary": "Creates a table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function createTable(\n    string $table,\n    ?array $cfg = null,\n    bool $createKeys = true,\n    bool $createConstraints = true\n  ): bool;",
            "parent": false,
            "trait": false,
            "startLine": 253,
            "endLine": 258,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "createTable",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "createKeys",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "eys"
                },
                {
                    "name": "createConstraints",
                    "position": 3,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "onstraints"
                }
            ],
            "doc": {
                "description": "Creates a table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "array|null",
                        "name": "$cfg"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$create",
                        "description": "eys"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$create",
                        "description": "onstraints"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Creates a table\n   *\n   * @param string $table\n   * @param array|null $cfg\n   * @param bool $createKeys\n   * @param bool $createConstraints\n   * @return bool\n   *\/"
        },
        "dropTable": {
            "name": "dropTable",
            "summary": "Drops a table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function dropTable(string $table, string $database = ''): bool;",
            "parent": false,
            "trait": false,
            "startLine": 267,
            "endLine": 267,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "dropTable",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "database",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "or currently selected"
                }
            ],
            "doc": {
                "description": "Drops a table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database",
                        "description": "or currently selected"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Drops a table\n   *\n   * @param string $table\n   * @param string $database or currently selected\n   * @return bool\n   *\/"
        },
        "dbSize": {
            "name": "dbSize",
            "summary": "Gets the size of a database",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function dbSize(string $database = '', string $type = ''): int;",
            "parent": false,
            "trait": false,
            "startLine": 276,
            "endLine": 276,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "dbSize",
            "returns": [
                "int"
            ],
            "arguments": [
                {
                    "name": "database",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "type",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the size of a database\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$type"
                    }
                ],
                "return": "Size in bytes"
            },
            "comments": "  \/**\n   * Gets the size of a database\n   *\n   * @param string $database\n   * @param string $type\n   * @return int Size in bytes\n   *\/"
        },
        "tableSize": {
            "name": "tableSize",
            "summary": "Gets the size of a table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function tableSize(string $table, string $type = ''): int;",
            "parent": false,
            "trait": false,
            "startLine": 286,
            "endLine": 286,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "tableSize",
            "returns": [
                "int"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "type",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the size of a table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$type"
                    }
                ],
                "return": "Size in bytes"
            },
            "comments": "  \/**\n   * Gets the size of a table\n   *\n   * @param string $table\n   * @param string $type\n   * @return int Size in bytes\n   *\/"
        },
        "status": {
            "name": "status",
            "summary": "Gets the status of a table",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function status(string $table = '', string $database = '');",
            "parent": false,
            "trait": false,
            "startLine": 296,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "status",
            "returns": [],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "database",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the status of a table\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$database"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the status of a table\n   *\n   * @param string $table\n   * @param string $database\n   * @return mixed\n   *\/"
        },
        "getUid": {
            "name": "getUid",
            "summary": "Returns a UUID",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getUid(): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 304,
            "endLine": 304,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getUid",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns a UUID\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns a UUID\n   *\n   * @return string|null\n   *\/"
        },
        "startFancyStuff": {
            "name": "startFancyStuff",
            "summary": "Starts fancy stuff.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function startFancyStuff(): self;",
            "parent": false,
            "trait": false,
            "startLine": 312,
            "endLine": 312,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "startFancyStuff",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Starts fancy stuff.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Starts fancy stuff.\n   *\n   * @return $this\n   *\/"
        },
        "stopFancyStuff": {
            "name": "stopFancyStuff",
            "summary": "Stops fancy stuff.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function stopFancyStuff(): self;",
            "parent": false,
            "trait": false,
            "startLine": 319,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "stopFancyStuff",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Stops fancy stuff.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Stops fancy stuff.\n   *\n   * @return $this\n   *\/"
        },
        "processCfg": {
            "name": "processCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function processCfg(array $args, bool $force = false): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 326,
            "endLine": 326,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "processCfg",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "args",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$args"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$force"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array $args\n   * @param bool $force\n   * @return array|null\n   *\/"
        },
        "reprocessCfg": {
            "name": "reprocessCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function reprocessCfg(array $cfg): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 332,
            "endLine": 332,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "reprocessCfg",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array $cfg\n   * @return array|null\n   *\/"
        },
        "setLastInsertId": {
            "name": "setLastInsertId",
            "summary": "Changes the value of last inserted id.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setLastInsertId($id = ''): self;",
            "parent": false,
            "trait": false,
            "startLine": 340,
            "endLine": 340,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "setLastInsertId",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Changes the value of last inserted id.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Changes the value of last inserted id.\n   *\n   * @param string $id\n   * @return $this\n   *\/"
        },
        "lastId": {
            "name": "lastId",
            "summary": "Return the last inserted ID.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function lastId();",
            "parent": false,
            "trait": false,
            "startLine": 347,
            "endLine": 347,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "lastId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Return the last inserted ID.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return the last inserted ID.\n   *\n   * @return mixed\n   *\/"
        },
        "last": {
            "name": "last",
            "summary": "Return the last query for this connection.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function last(): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 354,
            "endLine": 354,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "last",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Return the last query for this connection.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return the last query for this connection.\n   *\n   * @return string|null\n   *\/"
        },
        "modelize": {
            "name": "modelize",
            "summary": "Return the table's structure as an indexed array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function modelize($table = null, bool $force = false): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 363,
            "endLine": 363,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "modelize",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return the table's structure as an indexed array.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "null",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$force"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return the table's structure as an indexed array.\n   *\n   * @param null $table\n   * @param bool $force\n   * @return array|null\n   *\/"
        },
        "getQueryValues": {
            "name": "getQueryValues",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getQueryValues(array $cfg): array;",
            "parent": false,
            "trait": false,
            "startLine": 369,
            "endLine": 369,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getQueryValues",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array $cfg\n   * @return array\n   *\/"
        },
        "treatConditions": {
            "name": "treatConditions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function treatConditions(array $where, bool $full = true);",
            "parent": false,
            "trait": false,
            "startLine": 376,
            "endLine": 376,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "treatConditions",
            "returns": [],
            "arguments": [
                {
                    "name": "where",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "full",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$where"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$full"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param array $where\n   * @param bool  $full\n   * @return array|bool\n   *\/"
        },
        "enableTrigger": {
            "name": "enableTrigger",
            "summary": "Enable the triggers' functions",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function enableTrigger(): self;",
            "parent": false,
            "trait": false,
            "startLine": 383,
            "endLine": 383,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "enableTrigger",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Enable the triggers' functions\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Enable the triggers' functions\n   *\n   * @return self\n   *\/"
        },
        "disableTrigger": {
            "name": "disableTrigger",
            "summary": "Disable the triggers' functions",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function disableTrigger(): self;",
            "parent": false,
            "trait": false,
            "startLine": 390,
            "endLine": 390,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "disableTrigger",
            "returns": [
                "self"
            ],
            "arguments": [],
            "doc": {
                "description": "Disable the triggers' functions\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Disable the triggers' functions\n   *\n   * @return $this\n   *\/"
        },
        "isTriggerEnabled": {
            "name": "isTriggerEnabled",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isTriggerEnabled(): bool;",
            "parent": false,
            "trait": false,
            "startLine": 395,
            "endLine": 395,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isTriggerEnabled",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return bool\n   *\/"
        },
        "isTriggerDisabled": {
            "name": "isTriggerDisabled",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isTriggerDisabled(): bool;",
            "parent": false,
            "trait": false,
            "startLine": 400,
            "endLine": 400,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isTriggerDisabled",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return bool\n   *\/"
        },
        "setTrigger": {
            "name": "setTrigger",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setTrigger(callable $function, $kind = null, $moment = null, $tables = '*' ): self;",
            "parent": false,
            "trait": false,
            "startLine": 409,
            "endLine": 409,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "setTrigger",
            "returns": [
                "self"
            ],
            "arguments": [
                {
                    "name": "function",
                    "position": 0,
                    "type": "callable",
                    "type_arr": [
                        "callable"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "kind",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "tables",
                    "position": 3,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "*",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "callable",
                        "name": "$function"
                    },
                    {
                        "tag": "param",
                        "type": "array|string|null",
                        "name": "$kind"
                    },
                    {
                        "tag": "param",
                        "type": "array|string|null",
                        "name": "$moment"
                    },
                    {
                        "tag": "param",
                        "type": "null|string|array",
                        "name": "$tables"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param callable $function\n   * @param array|string|null $kind\n   * @param array|string|null $moment\n   * @param null|string|array $tables\n   * @return self\n   *\/"
        },
        "getTriggers": {
            "name": "getTriggers",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getTriggers(): array;",
            "parent": false,
            "trait": false,
            "startLine": 414,
            "endLine": 414,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getTriggers",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return array\n   *\/"
        },
        "getFieldsList": {
            "name": "getFieldsList",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getFieldsList($tables): array;",
            "parent": false,
            "trait": false,
            "startLine": 420,
            "endLine": 420,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getFieldsList",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "tables",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$tables"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param $tables\n   * @return array\n   *\/"
        },
        "getForeignKeys": {
            "name": "getForeignKeys",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getForeignKeys(string $col, string $table, string|null $db = null): array;",
            "parent": false,
            "trait": false,
            "startLine": 428,
            "endLine": 428,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "getForeignKeys",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "col",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "table",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "db",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$col"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$db"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $col\n   * @param string $table\n   * @param string|null $db\n   * @return array\n   *\/"
        },
        "findRelations": {
            "name": "findRelations",
            "summary": "find_relations",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function findRelations($column, string $db = ''): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 437,
            "endLine": 437,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "findRelations",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "column",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "db",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "find_relations\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$column"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$db"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * find_relations\n   *\n   * @param $column\n   * @param string $db\n   * @return array|bool\n   *\/"
        },
        "getPrimary": {
            "name": "getPrimary",
            "summary": "Return primary keys of a table as a numeric array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getPrimary(string $table): array;",
            "parent": false,
            "trait": false,
            "startLine": 445,
            "endLine": 445,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getPrimary",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The table's name"
                }
            ],
            "doc": {
                "description": "Return primary keys of a table as a numeric array.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$table",
                        "description": "The table's name"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return primary keys of a table as a numeric array.\n   *\n   * @param string $table The table's name\n   * @return array\n   *\/"
        },
        "flush": {
            "name": "flush",
            "summary": "Deletes all the queries recorded and returns their (ex) number.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function flush(): int;",
            "parent": false,
            "trait": false,
            "startLine": 452,
            "endLine": 452,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "flush",
            "returns": [
                "int"
            ],
            "arguments": [],
            "doc": {
                "description": "Deletes all the queries recorded and returns their (ex) number.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Deletes all the queries recorded and returns their (ex) number.\n   *\n   * @return int\n   *\/"
        },
        "countQueries": {
            "name": "countQueries",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function countQueries(): int;",
            "parent": false,
            "trait": false,
            "startLine": 457,
            "endLine": 457,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "countQueries",
            "returns": [
                "int"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return int\n   *\/"
        },
        "query": {
            "name": "query",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function query($statement);",
            "parent": false,
            "trait": false,
            "startLine": 463,
            "endLine": 463,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "query",
            "returns": [],
            "arguments": [
                {
                    "name": "statement",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$statement"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param $statement\n   * @return mixed\n   *\/"
        },
        "getOne": {
            "name": "getOne",
            "summary": "Executes the given query with given vars, and extracts the first cell's result.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getOne();",
            "parent": false,
            "trait": false,
            "startLine": 470,
            "endLine": 470,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getOne",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Executes the given query with given vars, and extracts the first cell's result.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Executes the given query with given vars, and extracts the first cell's result.\n   *\n   * @return mixed\n   *\/"
        },
        "getKeyVal": {
            "name": "getKeyVal",
            "summary": "Return an array indexed on the first field of the request.",
            "description": "The value will be an array if the request has more than two fields.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "The value will be an array if the request has more than two fields."
                }
            ],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getKeyVal(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 478,
            "endLine": 478,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getKeyVal",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array indexed on the first field of the request.\nThe value will be an array if the request has more than two fields.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array indexed on the first field of the request.\n   * The value will be an array if the request has more than two fields.\n   *\n   * @return array|null\n   *\/"
        },
        "getColArray": {
            "name": "getColArray",
            "summary": "Return an array with the values of single field resulting from the query.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getColArray(): array;",
            "parent": false,
            "trait": false,
            "startLine": 487,
            "endLine": 487,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getColArray",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return an array with the values of single field resulting from the query.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "description": "query"
                    },
                    {
                        "tag": "param",
                        "type": "mixed",
                        "description": "values"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array with the values of single field resulting from the query.\n   *\n   * @param string query\n   * @param mixed values\n   * @return array\n   *\/"
        },
        "countFieldValues": {
            "name": "countFieldValues",
            "summary": "Return a count of identical values in a field as array, Reporting a structure type 'num' - 'val'.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function countFieldValues($table, string|null $field = null,  array $where = [], array $order = []): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 498,
            "endLine": 498,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "countFieldValues",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "field",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "where",
                    "position": 2,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 3,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return a count of identical values in a field as array, Reporting a structure type 'num' - 'val'.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$table"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$field"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$where"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$order"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return a count of identical values in a field as array, Reporting a structure type 'num' - 'val'.\n   *\n   * @param $table\n   * @param string|null $field\n   * @param array $where\n   * @param array $order\n   * @return array|null\n   *\/"
        },
        "getColumnValues": {
            "name": "getColumnValues",
            "summary": "Return a numeric indexed array with the values of the unique column ($field) from the selected $table",
            "description": "",
            "description_parts": [
                {
                    "type": "code",
                    "content": "X::dump($db->getColumnValues('table_users','surname',['id','>',1]));\n\/*\narray [\n   \"Smith\",\n   \"Jones\",\n   \"Williams\",\n   \"Taylor\"\n]"
                }
            ],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getColumnValues($table, string|null $field = null,  array $where = [], array $order = [], int $limit = 0, int $start = 0): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 522,
            "endLine": 522,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 6,
            "numberOfRequiredParameters": 1,
            "shortName": "getColumnValues",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "table",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The table's name or a configuration array"
                },
                {
                    "name": "field",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The field's name"
                },
                {
                    "name": "where",
                    "position": 2,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The \"where\" condition"
                },
                {
                    "name": "order",
                    "position": 3,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The \"order\" condition"
                },
                {
                    "name": "limit",
                    "position": 4,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 5,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return a numeric indexed array with the values of the unique column ($field) from the selected $table\n\n```php\nX::dump($db->getColumnValues('table_users','surname',['id','>',1]));\n\/*\narray [\n   \"Smith\",\n   \"Jones\",\n   \"Williams\",\n   \"Taylor\"\n]\n```\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string|array",
                        "name": "$table",
                        "description": "The table's name or a configuration array"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$field",
                        "description": "The field's name"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$where",
                        "description": "The \"where\" condition"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$order",
                        "description": "The \"order\" condition"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$limit"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$start"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return a numeric indexed array with the values of the unique column ($field) from the selected $table\n   *\n   * ```php\n   * X::dump($db->getColumnValues('table_users','surname',['id','>',1]));\n   * \/*\n   * array [\n   *    \"Smith\",\n   *    \"Jones\",\n   *    \"Williams\",\n   *    \"Taylor\"\n   * ]\n   * ```\n   *\n   * @param string|array $table The table's name or a configuration array\n   * @param string|null $field The field's name\n   * @param array $where The \"where\" condition\n   * @param array $order The \"order\" condition\n   * @param int $limit\n   * @param int $start\n   * @return array\n   *\/"
        },
        "fetch": {
            "name": "fetch",
            "summary": "Return an indexed array with the first result of the query or false if there are no results.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function fetch(string $query);",
            "parent": false,
            "trait": false,
            "startLine": 530,
            "endLine": 530,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "fetch",
            "returns": [],
            "arguments": [
                {
                    "name": "query",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return an indexed array with the first result of the query or false if there are no results.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$query"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return an indexed array with the first result of the query or false if there are no results.\n   *\n   * @param string $query\n   * @return array|false\n   *\/"
        },
        "fetchAll": {
            "name": "fetchAll",
            "summary": "Return an array of indexed array with all results of the query or false if there are no results.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function fetchAll(string $query);",
            "parent": false,
            "trait": false,
            "startLine": 538,
            "endLine": 538,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "fetchAll",
            "returns": [],
            "arguments": [
                {
                    "name": "query",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Return an array of indexed array with all results of the query or false if there are no results.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$query"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Return an array of indexed array with all results of the query or false if there are no results.\n   *\n   * @param string $query\n   * @return array|false\n   *\/"
        },
        "fetchColumn": {
            "name": "fetchColumn",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function fetchColumn($query, int $num = 0);",
            "parent": false,
            "trait": false,
            "startLine": 545,
            "endLine": 545,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "fetchColumn",
            "returns": [],
            "arguments": [
                {
                    "name": "query",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 1,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$query"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$num"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param $query\n   * @param int $num\n   * @return mixed\n   *\/"
        },
        "fetchObject": {
            "name": "fetchObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function fetchObject($query);",
            "parent": false,
            "trait": false,
            "startLine": 551,
            "endLine": 551,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "fetchObject",
            "returns": [],
            "arguments": [
                {
                    "name": "query",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "$query"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param $query\n   * @return bool|\\stdClass\n   *\/"
        },
        "getCfg": {
            "name": "getCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCfg(): array;",
            "parent": false,
            "trait": false,
            "startLine": 557,
            "endLine": 557,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getCfg",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return array\n   *\/"
        },
        "getHash": {
            "name": "getHash",
            "summary": "Gets the created hash.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getHash(): string;",
            "parent": false,
            "trait": false,
            "startLine": 564,
            "endLine": 564,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getHash",
            "returns": [
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Gets the created hash.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the created hash.\n   *\n   * @return string\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks if the database is ready to process a query.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check(): bool;",
            "parent": false,
            "trait": false,
            "startLine": 570,
            "endLine": 570,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Checks if the database is ready to process a query.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks if the database is ready to process a query.\n   * @return bool\n   *\/"
        },
        "setErrorMode": {
            "name": "setErrorMode",
            "summary": "Sets the error mode.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setErrorMode(string $mode);",
            "parent": false,
            "trait": false,
            "startLine": 577,
            "endLine": 577,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setErrorMode",
            "returns": [],
            "arguments": [
                {
                    "name": "mode",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets the error mode.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$mode"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the error mode.\n   *\n   * @param string $mode\n   *\/"
        },
        "getErrorMode": {
            "name": "getErrorMode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorMode(): string;",
            "parent": false,
            "trait": false,
            "startLine": 582,
            "endLine": 582,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorMode",
            "returns": [
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return string\n   *\/"
        },
        "getLastError": {
            "name": "getLastError",
            "summary": "Returns the last error.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getLastError(): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 589,
            "endLine": 589,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getLastError",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the last error.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the last error.\n   *\n   * @return string|null\n   *\/"
        },
        "getCurrent": {
            "name": "getCurrent",
            "summary": "Returns the current database selected by the current connection.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCurrent(): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 596,
            "endLine": 596,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getCurrent",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the current database selected by the current connection.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the current database selected by the current connection.\n   *\n   * @return string|null\n   *\/"
        },
        "getHost": {
            "name": "getHost",
            "summary": "Returns the host of the current connection.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getHost(): ?string;",
            "parent": false,
            "trait": false,
            "startLine": 603,
            "endLine": 603,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getHost",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the host of the current connection.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the host of the current connection.\n   *\n   * @return string|null\n   *\/"
        },
        "getConnectionCode": {
            "name": "getConnectionCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getConnectionCode();",
            "parent": false,
            "trait": false,
            "startLine": 608,
            "endLine": 608,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getConnectionCode",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return string\n   *\/"
        },
        "getLastCfg": {
            "name": "getLastCfg",
            "summary": "Return the last config for this connection.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getLastCfg(): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 615,
            "endLine": 615,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getLastCfg",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Return the last config for this connection.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Return the last config for this connection.\n   *\n   * @return array|null\n   *\/"
        },
        "getConnection": {
            "name": "getConnection",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Db\\Engines",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Engines.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getConnection(array $cfg = []): ?array;",
            "parent": false,
            "trait": false,
            "startLine": 621,
            "endLine": 621,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getConnection",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The user's options"
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "The user's options"
                    }
                ],
                "return": "The final configuration"
            },
            "comments": "  \/**\n   * @param array $cfg The user's options\n   * @return array|null The final configuration\n   *\/"
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "uses": {
        "bbn": "bbn"
    },
    "dummyComments": [
        "\/**\n * @package db\n *\/",
        "\/**\n * DB Interface\n *\n *\n * These methods have to be implemented on both database and query.\n * Most methods usable on query should be also usable directly through database, which will create the query apply its method.\n *\n * @author Thomas Nabet <thomas.nabet@gmail.com>\n * @copyright BBN Solutions\n * @since Apr 4, 2011, 23:23:55 +0000\n * @category  Database\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n * @version 0.2r89\n *\/",
        "\/**\n   * Actions to do once the PDO object has been created\n   *\n   * @return void\n   *\/",
        "\/**\n   * Fetches the database and returns an array of several arrays of rows text-indexed\n   *\n   * @param string $db\n   * @return mixed\n   *\/",
        "\/**\n   * Returns a database item expression escaped like database, table, column, key names\n   *\n   * @param string $item The item's name (escaped or not)\n   * @return string | false\n   *\/",
        "\/**\n   * Returns a table's full name i.e. database.table\n   *\n   * @param string $table   The table's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/",
        "\/**\n   * Returns a table's simple name i.e. table\n   *\n   * @param string $table   The table's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/",
        "\/**\n   * Returns a column's full name i.e. table.column\n   *\n   * @param string      $col     The column's name (escaped or not)\n   * @param null|string $table   The table's name (escaped or not)\n   * @param bool        $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/",
        "\/**\n   * Returns a column's simple name i.e. column\n   *\n   * @param string $col     The column's name (escaped or not)\n   * @param bool   $escaped If set to true the returned string will be escaped\n   * @return string | false\n   *\/",
        "\/**\n   * @param string $table\n   * @return bool\n   *\/",
        "\/**\n   * @param string $col\n   * @return bool\n   *\/",
        "\/**\n   * Disables foreign keys check.\n   *\n   *\/",
        "\/**\n   * Enables foreign keys check.\n   *\n   *\/",
        "\/**\n   * Return databases' names as an array.\n   *\n   * @return false|array\n   *\/",
        "\/**\n   * Return tables' names of a database as an array.\n   *\n   * @param string $database\n   * @return null|array\n   *\/",
        "\/**\n   * Return columns' structure of a table as an array indexed with the fields names.\n   *\n   * @param string $table\n   * @return null|array\n   *\/",
        "\/**\n   * Return an array that includes indexed arrays for every row resultant from the query.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return the first row resulting from the query as an array indexed with the fields' name.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return a row as a numeric indexed array.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return an array of numeric indexed rows.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return an array indexed on the searched field's in which there are all the values of the column.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * @return \\stdClass|null\n   *\/",
        "\/**\n   * Return an array of stdClass objects.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return the table's keys as an array indexed with the fields names.\n   *\n   * @param string $table\n   * @return null|array\n   *\/",
        "\/**\n   * Returns a string with the conditions for any filter clause.\n   *\n   * @param array $conditions\n   * @param array $cfg\n   * @param bool $is_having\n   * @param int $indent\n   * @return string\n   *\/",
        "\/**\n   * Creates a database\n   *\n   * @param string $database\n   * @return bool\n   *\/",
        "\/**\n   * Drops a database\n   *\n   * @param string $database\n   * @return bool\n   *\/",
        "\/**\n   * Creates a table\n   *\n   * @param string $table\n   * @param array|null $cfg\n   * @param bool $createKeys\n   * @param bool $createConstraints\n   * @return bool\n   *\/",
        "\/**\n   * Drops a table\n   *\n   * @param string $table\n   * @param string $database or currently selected\n   * @return bool\n   *\/",
        "\/**\n   * Gets the size of a database\n   *\n   * @param string $database\n   * @param string $type\n   * @return int Size in bytes\n   *\/",
        "\/**\n   * Gets the size of a table\n   *\n   * @param string $table\n   * @param string $type\n   * @return int Size in bytes\n   *\/",
        "\/**\n   * Gets the status of a table\n   *\n   * @param string $table\n   * @param string $database\n   * @return mixed\n   *\/",
        "\/**\n   * Returns a UUID\n   *\n   * @return string|null\n   *\/",
        "\/**\n   * Starts fancy stuff.\n   *\n   * @return $this\n   *\/",
        "\/**\n   * Stops fancy stuff.\n   *\n   * @return $this\n   *\/",
        "\/**\n   * @param array $args\n   * @param bool $force\n   * @return array|null\n   *\/",
        "\/**\n   * @param array $cfg\n   * @return array|null\n   *\/",
        "\/**\n   * Changes the value of last inserted id.\n   *\n   * @param string $id\n   * @return $this\n   *\/",
        "\/**\n   * Return the last inserted ID.\n   *\n   * @return mixed\n   *\/",
        "\/**\n   * Return the last query for this connection.\n   *\n   * @return string|null\n   *\/",
        "\/**\n   * Return the table's structure as an indexed array.\n   *\n   * @param null $table\n   * @param bool $force\n   * @return array|null\n   *\/",
        "\/**\n   * @param array $cfg\n   * @return array\n   *\/",
        "\/**\n   * @param array $where\n   * @param bool  $full\n   * @return array|bool\n   *\/",
        "\/**\n   * Enable the triggers' functions\n   *\n   * @return self\n   *\/",
        "\/**\n   * Disable the triggers' functions\n   *\n   * @return $this\n   *\/",
        "\/**\n   * @return bool\n   *\/",
        "\/**\n   * @return bool\n   *\/",
        "\/**\n   * @param callable $function\n   * @param array|string|null $kind\n   * @param array|string|null $moment\n   * @param null|string|array $tables\n   * @return self\n   *\/",
        "\/**\n   * @return array\n   *\/",
        "\/**\n   * @param $tables\n   * @return array\n   *\/",
        "\/**\n   * @param string $col\n   * @param string $table\n   * @param string|null $db\n   * @return array\n   *\/",
        "\/**\n   * find_relations\n   *\n   * @param $column\n   * @param string $db\n   * @return array|bool\n   *\/",
        "\/**\n   * Return primary keys of a table as a numeric array.\n   *\n   * @param string $table The table's name\n   * @return array\n   *\/",
        "\/**\n   * Deletes all the queries recorded and returns their (ex) number.\n   *\n   * @return int\n   *\/",
        "\/**\n   * @return int\n   *\/",
        "\/**\n   * @param $statement\n   * @return mixed\n   *\/",
        "\/**\n   * Executes the given query with given vars, and extracts the first cell's result.\n   *\n   * @return mixed\n   *\/",
        "\/**\n   * Return an array indexed on the first field of the request.\n   * The value will be an array if the request has more than two fields.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * Return an array with the values of single field resulting from the query.\n   *\n   * @param string query\n   * @param mixed values\n   * @return array\n   *\/",
        "\/**\n   * Return a count of identical values in a field as array, Reporting a structure type 'num' - 'val'.\n   *\n   * @param $table\n   * @param string|null $field\n   * @param array $where\n   * @param array $order\n   * @return array|null\n   *\/",
        "\/**\n   * Return a numeric indexed array with the values of the unique column ($field) from the selected $table\n   *\n   * ```php\n   * X::dump($db->getColumnValues('table_users','surname',['id','>',1]));\n   * \/*\n   * array [\n   *    \"Smith\",\n   *    \"Jones\",\n   *    \"Williams\",\n   *    \"Taylor\"\n   * ]\n   * ```\n   *\n   * @param string|array $table The table's name or a configuration array\n   * @param string|null $field The field's name\n   * @param array $where The \"where\" condition\n   * @param array $order The \"order\" condition\n   * @param int $limit\n   * @param int $start\n   * @return array\n   *\/",
        "\/**\n   * Return an indexed array with the first result of the query or false if there are no results.\n   *\n   * @param string $query\n   * @return array|false\n   *\/",
        "\/**\n   * Return an array of indexed array with all results of the query or false if there are no results.\n   *\n   * @param string $query\n   * @return array|false\n   *\/",
        "\/**\n   * @param $query\n   * @param int $num\n   * @return mixed\n   *\/",
        "\/**\n   * @param $query\n   * @return bool|\\stdClass\n   *\/",
        "\/**\n   * @return array\n   *\/",
        "\/**\n   * Gets the created hash.\n   *\n   * @return string\n   *\/",
        "\/**\n   * Checks if the database is ready to process a query.\n   * @return bool\n   *\/",
        "\/**\n   * Sets the error mode.\n   *\n   * @param string $mode\n   *\/",
        "\/**\n   * @return string\n   *\/",
        "\/**\n   * Returns the last error.\n   *\n   * @return string|null\n   *\/",
        "\/**\n   * Returns the current database selected by the current connection.\n   *\n   * @return string|null\n   *\/",
        "\/**\n   * Returns the host of the current connection.\n   *\n   * @return string|null\n   *\/",
        "\/**\n   * @return string\n   *\/",
        "\/**\n   * Return the last config for this connection.\n   *\n   * @return array|null\n   *\/",
        "\/**\n   * @param array $cfg The user's options\n   * @return array|null The final configuration\n   *\/"
    ],
    "summary": "DB Interface",
    "description": "These methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method.",
    "description_parts": [
        {
            "type": "text",
            "content": "These methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method."
        }
    ]
}