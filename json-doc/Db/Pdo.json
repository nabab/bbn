{
    "doc": {
        "description": "DB Interface\n *\n *\nThese methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method.",
        "tags": {
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Database",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\Db\\Pdo",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Db\/Pdo.php",
    "startLine": 21,
    "endLine": 89,
    "contentConstructor": null,
    "methods": {
        "getPdo": {
            "name": "getPdo",
            "summary": "Fetches the database and returns an array of a single row text-indexed",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an array of several arrays of rows text-indexed\n   *\n   * @return false|array\n   *\/\n  public function getRows(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of a single row num-indexed\n   *\n   * @return false|array\n   *\/\n  public function getIrow(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of several arrays of rows num-indexed\n   *\n   * @return false|array\n   *\/\n  public function getIrows(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of arrays, one per column, each having each column's values\n   *\n   * @return false|array\n   *\/\n  public function getByColumns(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row, alias of get_object\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObj(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 30,
            "endLine": 30,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "PDO",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getRows": {
            "name": "getRows",
            "summary": "Fetches the database and returns an array of several arrays of rows text-indexed",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an array of a single row num-indexed\n   *\n   * @return false|array\n   *\/\n  public function getIrow(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of several arrays of rows num-indexed\n   *\n   * @return false|array\n   *\/\n  public function getIrows(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of arrays, one per column, each having each column's values\n   *\n   * @return false|array\n   *\/\n  public function getByColumns(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row, alias of get_object\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObj(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 38,
            "endLine": 38,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getIrow": {
            "name": "getIrow",
            "summary": "Fetches the database and returns an array of a single row num-indexed",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an array of several arrays of rows num-indexed\n   *\n   * @return false|array\n   *\/\n  public function getIrows(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an array of arrays, one per column, each having each column's values\n   *\n   * @return false|array\n   *\/\n  public function getByColumns(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row, alias of get_object\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObj(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 46,
            "endLine": 46,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getIrows": {
            "name": "getIrows",
            "summary": "Fetches the database and returns an array of several arrays of rows num-indexed",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an array of arrays, one per column, each having each column's values\n   *\n   * @return false|array\n   *\/\n  public function getByColumns(): ?array;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row, alias of get_object\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObj(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 54,
            "endLine": 54,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getByColumns": {
            "name": "getByColumns",
            "summary": "Fetches the database and returns an array of arrays, one per column, each having each column's values",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an object of a single row, alias of get_object\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObj(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 62,
            "endLine": 62,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getObj": {
            "name": "getObj",
            "summary": "Fetches the database and returns an object of a single row, alias of get_object",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an object of a single row\n   *\n   * @return null|\\stdClass\n   *\/\n  public function getObject(): ?\\stdClass;\n\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 70,
            "endLine": 70,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "stdClass",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getObject": {
            "name": "getObject",
            "summary": "Fetches the database and returns an object of a single row",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  \/**\n   * Fetches the database and returns an array of objects\n   *\n   * @return null|array\n   *\/\n  public function getObjects(): ?array;\n\n  }",
            "startLine": 78,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "stdClass",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getObjects": {
            "name": "getObjects",
            "summary": "Fetches the database and returns an array of objects",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Db\\Pdo",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 86,
            "endLine": 86,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "numMethods": 8,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": true,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": true,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Db",
    "shortName": "Pdo",
    "summary": "DB Interface",
    "description": "*\n *\nThese methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method.",
    "description_parts": [
        {
            "type": "text",
            "content": "<p><em>\n<\/em>\nThese methods have to be implemented on both database and query.\nMost methods usable on query should be also usable directly through database, which will create the query apply its method.<\/p>"
        }
    ]
}