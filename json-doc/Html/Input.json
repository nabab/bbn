{
    "doc": {
        "description": "HTML Class creating a form INPUT\n",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Apr 2, 2013, 21:27:42 +0000",
            "category": "MVC",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.4",
            "todo": "???"
        }
    },
    "name": "bbn\\Html\\Input",
    "namespace": true,
    "realName": "Input",
    "realNamespace": "bbn\\Html",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Html\/Input.php",
    "startLine": 19,
    "endLine": 222,
    "numMethods": 20,
    "numProperties": 24,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Html\\Element",
    "isSubclassOf": false,
    "defaultProperties": {
        "schema": "{\n\t\"properties\":{\n\t\t\"attr\": {\n\t\t\t\"type\":\"array\",\n\t\t\t\"id\": \"attr\",\n      \"description\": \"Attributes\",\n\t\t\t\"required\":true,\n\t\t\t\"properties\":{\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"id\",\n          \"description\": \"ID\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"integer\",\n\t\t\t\t\t\"id\": \"maxlength\",\n          \"description\": \"Maxlength\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"name\": {\n          \"type\":\"string\",\n          \"id\": \"name\",\n          \"description\": \"Name\",\n          \"required\":true\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"id\": \"required\",\n          \"description\": \"Required\",\n          \"required\":false\n        },\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"type\",\n          \"description\": \"Input type\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"value\": {\n          \"type\":\"string\",\n          \"description\": \"Value\",\n          \"id\": \"value\",\n          \"required\":false\n        }\n\t\t\t}\n\t\t},\n\t\t\"default\": {\n\t\t\t\"type\":\"any\",\n\t\t\t\"id\": \"default\",\n      \"description\": \"Default value\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"field\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"field\",\n      \"description\": \"Shortcut (??) field\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"label\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"label\",\n      \"description\": \"Label\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"lang\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"lang\",\n      \"description\": \"Language\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"null\": {\n\t\t\t\"type\":\"boolean\",\n\t\t\t\"id\": \"null\",\n      \"description\": \"can be null?\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"params\": {\n\t\t\t\"type\": [\"array\",\"null\"],\n\t\t\t\"id\": \"params\",\n\t\t\t\"required\":false,\n      \"description\": \"Parameters from BBN\"\n\t\t},\n\t\t\"sql\": {\n\t\t\t\"type\": [\"string\"],\n\t\t\t\"id\": \"sql\",\n\t\t\t\"required\":false,\n      \"description\": \"SQL request\"\n\t\t},\n\t\t\"table\": {\n\t\t\t\"type\":\"string\",\n      \"description\": \"Table\",\n\t\t\t\"id\": \"table\",\n\t\t\t\"required\":false\n\t\t},\n\t}\n}",
        "self_closing_tags": [
            "area",
            "base",
            "hr",
            "col",
            "command",
            "embed",
            "hr",
            "img",
            "input",
            "keygen",
            "link",
            "meta",
            "param",
            "source",
            "track",
            "wbr"
        ],
        "input_fields": [
            "input",
            "textarea",
            "select"
        ],
        "validator": false,
        "error": null,
        "label": null,
        "value": "",
        "default": "",
        "null": null,
        "table": null,
        "field": null,
        "lang": null,
        "cfg": null,
        "text": "",
        "content": null,
        "tag": false,
        "attr": [],
        "css": [],
        "script": "",
        "events": null,
        "data": null,
        "widget": null,
        "help": null,
        "xhtml": false
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Html",
    "shortName": "Input",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "This will build a new HTML form element according to the given configuration.",
            "description": "Only name and tag are mandatory, then other values depending on the tag",
            "description_parts": [
                {
                    "type": "text",
                    "content": "Only name and tag are mandatory, then other values depending on the tag"
                }
            ],
            "class": "bbn\\Html\\Input",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Input.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct($cfg)\n\t{\n    \n    if ( \\is_string($cfg) ){\n      $cfg = [\n          'field' => 'text',\n          'attr' => [\n              'name' => $cfg\n          ]\n      ];\n    }\n    \n    parent::__construct($cfg);\n    \n\t\tif ( $this->tag ){\n      \n\t\t\t$mandatory_attr = [];\n      \n      if ( !isset($this->attr['id']) ){\n  \t\t\t$this->attr['id'] = bbn\\Str::genpwd(20,15);\n      }\n      \n\t\t\t$this->script = isset($cfg['script']) ? $cfg['script'] : '';\n\t\t\t$this->value = isset($cfg['value']) ? $cfg['value'] : '';\n      \n\t\t\tswitch ( $this->tag )\n\t\t\t{\n\t\t\t\tcase \"input\":\n\t\t\t\t\tarray_push($mandatory_attr, \"type\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"textarea\":\n\t\t\t\t\tarray_push($mandatory_attr, \"cols\", \"rows\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"select\":\n\t\t\t\t\tarray_push($mandatory_attr, \"attr\");\n\t\t\t\t\tbreak;\n\t\t\t}\n      \n\t\t\tforeach ( $mandatory_attr as $m ){\n\t\t\t\tif ( !isset($this->attr[$m]) ){\n\t\t\t\t\tdie(\"Argument $m is missing in your config... Sorry!\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    return $this;\n\t}",
            "parent": {
                "name": "__construct",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function __construct($cfg)\n\t{\n    self::_init();\n    if ( \\is_string($cfg) && !empty($cfg) ){\n      \/\/ Looking for classes, IDs, or name (|) in the string\n      preg_match_all(\"\/([\\\\.|\\\\||#]{1})([A-z0-9-]+)\/\", $cfg, $m);\n      $classes = [];\n      $id = false;\n      $name = false;\n      if ( isset($m[0], $m[1], $m[2]) && \\count($m[0]) > 0 ){\n        foreach ( $m[1] as $k => $v ){\n          if ( $v === '.' ){\n            array_push($classes, $m[2][$k]);\n          }\n          else if ( $v === '#' ){\n            $id = $m[2][$k];\n          }\n          else if ( $v === '|' ){\n            $name = $m[2][$k];\n          }\n        }\n      }\n      \/\/ Looking for the tag (mandatory)\n      preg_match_all(\"\/^([A-z0-9-]+)\/\", $cfg, $n);\n      if ( isset($n[0]) && \\count($n[0]) > 0 ){\n        $cfg = ['tag' => $n[0][0]];\n        if ( (\\count($classes) > 0) || $id || $name ){\n          $cfg['attr'] = [];\n          if ( \\count($classes) > 0 ){\n            $cfg['attr']['class'] = implode(\" \", $classes);\n          }\n          if ( $id ){\n            $cfg['attr']['id'] = $id;\n          }\n          if ( $name ){\n            $cfg['attr']['name'] = $name;\n          }\n        }\n      }\n    }\n    $cfg = self::cast($cfg);\n\t\tif ( self::checkConfig($cfg) ){\n      foreach ( $cfg as $key => $val ){\n        if ( $key === 'tag' ){\n          $this->tag = strtolower($val);\n        }\n        else if ( property_exists(\\get_called_class(), $key) ){\n          $this->$key = $val;\n        }\n      }\n      $this->update();\n    }\n    else{\n      $err[] = self::getError();\n      if ( isset($cfg['tag']) ){\n        $err[] = 'Tag: '.$cfg['tag'];\n      }\n      if ( isset($cfg['name']) ){\n        $err[] = 'Name: '.$cfg['name'];\n      }\n      var_dump($err);\n    }\n\t}",
                "parent": false,
                "trait": false,
                "startLine": 306,
                "endLine": 368,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "__construct",
                "returns": [],
                "arguments": [
                    {
                        "name": "cfg",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n\t * @return bbn\\Html\\Element\n\t *\/"
            },
            "trait": false,
            "startLine": 151,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The configuration"
                }
            ],
            "doc": {
                "description": "This will build a new HTML form element according to the given configuration.\nOnly name and tag are mandatory, then other values depending on the tag\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "The configuration"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n\t * This will build a new HTML form element according to the given configuration.\n\t * Only name and tag are mandatory, then other values depending on the tag\n   * \n   * @param array $cfg The configuration\n   * @return self\n\t *\/"
        },
        "htmlWithLabel": {
            "name": "htmlWithLabel",
            "summary": "Returns the element with its label and inside a div",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Input",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Input.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function htmlWithLabel($with_script=1)\n\t{\n\t\t$s = $this->html();\n    if ( !empty($s) ){\n\t\t\tif ( BBN_IS_DEV ){\n        $title = str_replace('\"', '', print_r (bbn\\Str::makeReadable($this->cfg), true));\n\t\t\t}\n\t\t\telse if ( isset($this->attr['title']) ){\n\t\t\t\t$title = $this->attr['title'];\n\t\t\t}\n      else{\n\t\t\t\t$title = isset($this->label) ? $this->label : '';\n\t\t\t}\n      if ( !isset($this->cfg['field']) || $this->cfg['field'] !== 'hidden' ){\n  \t\t\t$s = '<label class=\"bbn-form-label\" title=\"'.$title.'\" for=\"'.$this->attr['id'].'\">'.$this->label.'<\/label><div class=\"bbn-form-field\">'.$s.'<\/div>';\n      }\n\t\t}\n\t\treturn $s;\n\t}",
            "parent": false,
            "trait": false,
            "startLine": 203,
            "endLine": 221,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "htmlWithLabel",
            "returns": [],
            "arguments": [
                {
                    "name": "with_script",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the element with its label and inside a div\n\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n\t * Returns the element with its label and inside a div\n   * \n   * @return string\n\t *\/"
        },
        "getSchema": {
            "name": "getSchema",
            "summary": "Returns the current schema",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": true,
            "visibility": "protected",
            "final": false,
            "code": "  protected static function getSchema(){\n    return static::$schema;\n  }",
            "parent": {
                "name": "getSchema",
                "summary": "Returns the current schema",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": true,
                "visibility": "protected",
                "final": false,
                "code": "  protected static function getSchema(){\n    return static::$schema;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 222,
                "endLine": 224,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getSchema",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Returns the current schema\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n\t * Returns the current schema\n\t *\n\t * @return object\n\t *\/"
            },
            "trait": false,
            "startLine": 222,
            "endLine": 224,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getSchema",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the current schema\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n\t * Returns the current schema\n\t *\n\t * @return object\n\t *\/"
        },
        "checkConfig": {
            "name": "checkConfig",
            "summary": "Confront the JSON schema object with the current configuration",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function checkConfig($cfg){\n    if ( !\\is_array($cfg) ){\n      self::$error = \"The configuration is not a valid array\";\n      return false;\n    }\n    self::$validator->check(bbn\\X::toObject($cfg), static::$schema);\n    self::$error = '';\n    if ( self::$validator->isValid() ){\n      return 1;\n    }\n    foreach ( self::$validator->getErrors() as $error ){\n      self::$error .= sprintf(\"[%s] %s\",$error['property'], $error['message']);\n      var_dump($cfg);\n    }\n    return false;\n  }",
            "parent": {
                "name": "checkConfig",
                "summary": "Confront the JSON schema object with the current configuration",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": true,
                "visibility": "public",
                "final": false,
                "code": "  public static function checkConfig($cfg){\n    if ( !\\is_array($cfg) ){\n      self::$error = \"The configuration is not a valid array\";\n      return false;\n    }\n    self::$validator->check(bbn\\X::toObject($cfg), static::$schema);\n    self::$error = '';\n    if ( self::$validator->isValid() ){\n      return 1;\n    }\n    foreach ( self::$validator->getErrors() as $error ){\n      self::$error .= sprintf(\"[%s] %s\",$error['property'], $error['message']);\n      var_dump($cfg);\n    }\n    return false;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 232,
                "endLine": 247,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "checkConfig",
                "returns": [],
                "arguments": [
                    {
                        "name": "cfg",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "Configuration"
                    }
                ],
                "doc": {
                    "description": "Confront the JSON schema object with the current configuration\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "array",
                            "name": "$cfg",
                            "description": "Configuration"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n\t * Confront the JSON schema object with the current configuration\n\t *\n   * @param array $cfg Configuration\n\t * @return bool\n\t *\/"
            },
            "trait": false,
            "startLine": 232,
            "endLine": 247,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "checkConfig",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Configuration"
                }
            ],
            "doc": {
                "description": "Confront the JSON schema object with the current configuration\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "Configuration"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n\t * Confront the JSON schema object with the current configuration\n\t *\n   * @param array $cfg Configuration\n\t * @return bool\n\t *\/"
        },
        "getError": {
            "name": "getError",
            "summary": "Returns the current error(s)",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getError()\n  {\n    return self::$error;\n  }",
            "parent": {
                "name": "getError",
                "summary": "Returns the current error(s)",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": true,
                "visibility": "public",
                "final": false,
                "code": "  public static function getError()\n  {\n    return self::$error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 254,
                "endLine": 257,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Returns the current error(s)\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n\t * Returns the current error(s)\n\t *\n\t * @return string\n\t *\/"
            },
            "trait": false,
            "startLine": 254,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the current error(s)\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n\t * Returns the current error(s)\n\t *\n\t * @return string\n\t *\/"
        },
        "cssToString": {
            "name": "cssToString",
            "summary": "Generates style string for a HTML tag",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function cssToString($css){\n    if ( \\is_string($css) ){\n      return ' style=\"'.bbn\\Str::escapeDquotes($css).'\"';\n    }\n    else if ( \\is_array($css) && \\count($css) > 0 ){\n      $st = '';\n      foreach ( $css as $prop => $val ){\n        $st .= $prop.':'.$val.';';\n      }\n      return ' style=\"'.bbn\\Str::escapeDquotes($st).'\"';\n    }\n  }",
            "parent": {
                "name": "cssToString",
                "summary": "Generates style string for a HTML tag",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": true,
                "visibility": "public",
                "final": false,
                "code": "  public static function cssToString($css){\n    if ( \\is_string($css) ){\n      return ' style=\"'.bbn\\Str::escapeDquotes($css).'\"';\n    }\n    else if ( \\is_array($css) && \\count($css) > 0 ){\n      $st = '';\n      foreach ( $css as $prop => $val ){\n        $st .= $prop.':'.$val.';';\n      }\n      return ' style=\"'.bbn\\Str::escapeDquotes($st).'\"';\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 266,
                "endLine": 277,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "cssToString",
                "returns": [],
                "arguments": [
                    {
                        "name": "css",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "CSS properties\/values array"
                    }
                ],
                "doc": {
                    "description": "Generates style string for a HTML tag\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "array|string",
                            "name": "$css",
                            "description": "CSS properties\/values array"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n\t * Generates style string for a HTML tag\n\t *\n   * @param array|string $css CSS properties\/values array\n\t * @return string\n\t *\/"
            },
            "trait": false,
            "startLine": 266,
            "endLine": 277,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "cssToString",
            "returns": [],
            "arguments": [
                {
                    "name": "css",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "CSS properties\/values array"
                }
            ],
            "doc": {
                "description": "Generates style string for a HTML tag\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array|string",
                        "name": "$css",
                        "description": "CSS properties\/values array"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n\t * Generates style string for a HTML tag\n\t *\n   * @param array|string $css CSS properties\/values array\n\t * @return string\n\t *\/"
        },
        "css": {
            "name": "css",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function css(array $cfg){\n    foreach ( $cfg as $i => $k ){\n      if ( !bbn\\Str::isNumber($i) ){\n        $this->css[$i] = $k;\n      }\n    }\n    $this->update();\n    return $this;\n  }",
            "parent": {
                "name": "css",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function css(array $cfg){\n    foreach ( $cfg as $i => $k ){\n      if ( !bbn\\Str::isNumber($i) ){\n        $this->css[$i] = $k;\n      }\n    }\n    $this->update();\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 279,
                "endLine": 287,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "css",
                "returns": [],
                "arguments": [
                    {
                        "name": "cfg",
                        "position": 0,
                        "type": "array",
                        "type_arr": [
                            "array"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 279,
            "endLine": 287,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "css",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addClass": {
            "name": "addClass",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function addClass($class){\n    if ( !isset($this->attr['class']) ){\n      $this->attr['class'] = $class;\n    }\n    else{\n      $cls = explode(\" \", $this->attr['class']);\n      if ( !\\in_array($class, $cls) ){\n        $this->attr['class'] .= ' '.$class;\n      }\n    }\n    $this->update();\n    return $this;\n  }",
            "parent": {
                "name": "addClass",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function addClass($class){\n    if ( !isset($this->attr['class']) ){\n      $this->attr['class'] = $class;\n    }\n    else{\n      $cls = explode(\" \", $this->attr['class']);\n      if ( !\\in_array($class, $cls) ){\n        $this->attr['class'] .= ' '.$class;\n      }\n    }\n    $this->update();\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 289,
                "endLine": 301,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "addClass",
                "returns": [],
                "arguments": [
                    {
                        "name": "class",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 289,
            "endLine": 301,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "addClass",
            "returns": [],
            "arguments": [
                {
                    "name": "class",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Sets the configuration property according to the current configuration",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function update()\n  {\n    $this->cfg = [];\n    foreach ( $this as $key => $var ){\n      if ( $key !== 'cfg' && !\\is_null($var) ){\n        if ( \\is_array($var) ){\n          foreach ( $var as $k => $v ){\n            if ( !isset($this->cfg[$key]) ){\n              $this->cfg[$key] = [];\n            }\n            if ( !\\is_null($v) ){\n              $this->cfg[$key][$k] = $v;\n            }\n          }\n        }\n        else{\n          $this->cfg[$key] = $var;\n        }\n      }\n    }\n    return $this;\n  }",
            "parent": {
                "name": "update",
                "summary": "Sets the configuration property according to the current configuration",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function update()\n  {\n    $this->cfg = [];\n    foreach ( $this as $key => $var ){\n      if ( $key !== 'cfg' && !\\is_null($var) ){\n        if ( \\is_array($var) ){\n          foreach ( $var as $k => $v ){\n            if ( !isset($this->cfg[$key]) ){\n              $this->cfg[$key] = [];\n            }\n            if ( !\\is_null($v) ){\n              $this->cfg[$key][$k] = $v;\n            }\n          }\n        }\n        else{\n          $this->cfg[$key] = $var;\n        }\n      }\n    }\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 375,
                "endLine": 396,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "update",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Sets the configuration property according to the current configuration\n\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Sets the configuration property according to the current configuration\n   * \n\t * @return bbn\\Html\\Element\n\t *\/"
            },
            "trait": false,
            "startLine": 375,
            "endLine": 396,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "update",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Sets the configuration property according to the current configuration\n\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the configuration property according to the current configuration\n   * \n\t * @return bbn\\Html\\Element\n\t *\/"
        },
        "append": {
            "name": "append",
            "summary": "Add an element to the content, or a string if it's one",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function append($ele)\n  {\n    $args = \\func_get_args();\n    foreach ( $args as $ele ){\n      if ( !isset($this->content) ){\n        if ( \\is_array($ele) && isset($ele[0]) ){\n          $this->content = $ele;\n        }\n        else{\n          $this->content = \\is_object($ele) ? [$ele] : $ele;\n        }\n      }\n      else if ( \\is_array($this->content) ){\n        if ( \\is_array($ele) ){\n          array_merge($this->content, $ele);\n        }\n        else{\n          array_push($this->content, $ele);\n        }\n      }\n      else if ( \\is_string($this->content) ){\n        if ( \\is_array($ele) ){\n          foreach ( $ele as $e ){\n            $this->content .= $e->html();\n          }\n        }\n        else{\n          $this->content .= \\is_object($ele) ? $ele->html() : $ele;\n        }\n      }\n    }\n    return $this;\n  }",
            "parent": {
                "name": "append",
                "summary": "Add an element to the content, or a string if it's one",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function append($ele)\n  {\n    $args = \\func_get_args();\n    foreach ( $args as $ele ){\n      if ( !isset($this->content) ){\n        if ( \\is_array($ele) && isset($ele[0]) ){\n          $this->content = $ele;\n        }\n        else{\n          $this->content = \\is_object($ele) ? [$ele] : $ele;\n        }\n      }\n      else if ( \\is_array($this->content) ){\n        if ( \\is_array($ele) ){\n          array_merge($this->content, $ele);\n        }\n        else{\n          array_push($this->content, $ele);\n        }\n      }\n      else if ( \\is_string($this->content) ){\n        if ( \\is_array($ele) ){\n          foreach ( $ele as $e ){\n            $this->content .= $e->html();\n          }\n        }\n        else{\n          $this->content .= \\is_object($ele) ? $ele->html() : $ele;\n        }\n      }\n    }\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 403,
                "endLine": 435,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "append",
                "returns": [],
                "arguments": [
                    {
                        "name": "ele",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "Add an element to the content, or a string if it's one\n\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "string|bbn\\Html\\Element",
                            "name": "$ele"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * Add an element to the content, or a string if it's one\n   * \n   * @param string|bbn\\Html\\Element $ele\n   *\/"
            },
            "trait": false,
            "startLine": 403,
            "endLine": 435,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "append",
            "returns": [],
            "arguments": [
                {
                    "name": "ele",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Add an element to the content, or a string if it's one\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string|bbn\\Html\\Element",
                        "name": "$ele"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Add an element to the content, or a string if it's one\n   * \n   * @param string|bbn\\Html\\Element $ele\n   *\/"
        },
        "getConfig": {
            "name": "getConfig",
            "summary": "Returns the current configuration.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function getConfig()\n\t{\n    $this->update();\n\t\t$tmp = bbn\\X::removeEmpty($this->cfg);\n    if ( isset($tmp['content']) && \\is_array($tmp['content']) ){\n      foreach ( $tmp['content'] as $i => $c ){\n        if ( \\is_object($c) ){\n          if (method_exists($c, 'get_config') ){\n            $tmp['content'][$i] = $c->getConfig();\n          }\n        }\n      }\n    }\n    return $tmp;\n\t}",
            "parent": {
                "name": "getConfig",
                "summary": "Returns the current configuration.",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "\tpublic function getConfig()\n\t{\n    $this->update();\n\t\t$tmp = bbn\\X::removeEmpty($this->cfg);\n    if ( isset($tmp['content']) && \\is_array($tmp['content']) ){\n      foreach ( $tmp['content'] as $i => $c ){\n        if ( \\is_object($c) ){\n          if (method_exists($c, 'get_config') ){\n            $tmp['content'][$i] = $c->getConfig();\n          }\n        }\n      }\n    }\n    return $tmp;\n\t}",
                "parent": false,
                "trait": false,
                "startLine": 441,
                "endLine": 455,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getConfig",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Returns the current configuration.\n\n",
                    "params": [],
                    "return": "Current configuration"
                },
                "comments": "  \/**\n\t * Returns the current configuration.\n   * \n   * @return array Current configuration\n\t *\/"
            },
            "trait": false,
            "startLine": 441,
            "endLine": 455,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getConfig",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the current configuration.\n\n",
                "params": [],
                "return": "Current configuration"
            },
            "comments": "  \/**\n\t * Returns the current configuration.\n   * \n   * @return array Current configuration\n\t *\/"
        },
        "getParam": {
            "name": "getParam",
            "summary": "Returns the current configuration  HOW???",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getParam()\n  {\n    return bbn\\Str::makeReadable($this->getConfig());\n  }",
            "parent": {
                "name": "getParam",
                "summary": "Returns the current configuration  HOW???",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getParam()\n  {\n    return bbn\\Str::makeReadable($this->getConfig());\n  }",
                "parent": false,
                "trait": false,
                "startLine": 462,
                "endLine": 465,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getParam",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Returns the current configuration  HOW???\n\n",
                    "params": [],
                    "return": "Current configuration"
                },
                "comments": "  \/**\n\t * Returns the current configuration  HOW???\n   * \n   * @return array Current configuration\n\t *\/"
            },
            "trait": false,
            "startLine": 462,
            "endLine": 465,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getParam",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the current configuration  HOW???\n\n",
                "params": [],
                "return": "Current configuration"
            },
            "comments": "  \/**\n\t * Returns the current configuration  HOW???\n   * \n   * @return array Current configuration\n\t *\/"
        },
        "showConfig": {
            "name": "showConfig",
            "summary": "Returns the current configuration for PHP",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function showConfig()\n  {\n    return bbn\\Str::export(bbn\\Str::makeReadable($this->getConfig()), 1);\n  }",
            "parent": {
                "name": "showConfig",
                "summary": "Returns the current configuration for PHP",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function showConfig()\n  {\n    return bbn\\Str::export(bbn\\Str::makeReadable($this->getConfig()), 1);\n  }",
                "parent": false,
                "trait": false,
                "startLine": 472,
                "endLine": 475,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "showConfig",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Returns the current configuration for PHP\n\n",
                    "params": [],
                    "return": "Current configuration"
                },
                "comments": "  \/**\n\t * Returns the current configuration for PHP\n   * \n   * @return array Current configuration\n\t *\/"
            },
            "trait": false,
            "startLine": 472,
            "endLine": 475,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "showConfig",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the current configuration for PHP\n\n",
                "params": [],
                "return": "Current configuration"
            },
            "comments": "  \/**\n\t * Returns the current configuration for PHP\n   * \n   * @return array Current configuration\n\t *\/"
        },
        "script": {
            "name": "script",
            "summary": "Returns the javascript coming with the object",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function script($with_ele=1)\n\t{\n    $this->update();\n\t\t$r = '';\n\t\tif ( isset($this->attr['id']) ){\n      if ( isset($this->cfg['events']) ){\n        foreach ( $this->cfg['events'] as $event => $fn ){\n          $r .= '.'.$event.'('.\n                  ( strpos($fn, 'function') === 0 ? $fn : 'function(e){'.$fn.'}' ).\n                  ')';\n        }\n      }\n      if ( isset($this->cfg['widget'], $this->cfg['widget']['name']) ){\n        $r .= '.'.$this->cfg['widget']['name'].'(';\n        if ( isset($this->cfg['widget']['options']) ){\n          $r .= '{';\n          foreach ( $this->cfg['widget']['options'] as $n => $o ){\n            $r .= '\"'.$n.'\":';\n            if ( \\is_string($o) ){\n              $o = trim($o);\n              if ( (strpos($o, 'function(') === 0) ){\n                $r .= $o;\n              }\n              else{\n                $r .= '\"'.bbn\\Str::escapeDquotes($o).'\"';\n              }\n            }\n            else if ( \\is_bool($o) ){\n              $r .= $o ? 'true' : 'false';\n            }\n            else{\n              $r .= json_encode($o);\n            }\n            $r .= ',';\n          }\n          $r .= '}';\n        }\n        $r .= ')';\n      }\n      if ( !empty($this->help) ){\n        \/\/ tooltip\n      }\n      if ( !empty($r) ){\n        if ( $with_ele ){\n          $r = '$(\"#'.$this->attr['id'].'\")'.$r.';'.PHP_EOL;\n        }\n        else{\n          $r = $r.';'.PHP_EOL;\n        }\n      }\n\t\t}\n    if ( !empty($this->script) ){\n      $r .= $this->script.PHP_EOL;\n    }\n    if ( \\is_array($this->content) ){\n      foreach ( $this->content as $c ){\n        if ( \\is_array($c) ){\n          $c = new bbn\\Html\\Element($c);\n        }\n        if (\\is_object($c) && method_exists($c, 'script') ){\n          $r .= $c->script();\n        }\n      }\n    }\n\t\treturn $r;\n\t}",
            "parent": {
                "name": "script",
                "summary": "Returns the javascript coming with the object",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "\tpublic function script($with_ele=1)\n\t{\n    $this->update();\n\t\t$r = '';\n\t\tif ( isset($this->attr['id']) ){\n      if ( isset($this->cfg['events']) ){\n        foreach ( $this->cfg['events'] as $event => $fn ){\n          $r .= '.'.$event.'('.\n                  ( strpos($fn, 'function') === 0 ? $fn : 'function(e){'.$fn.'}' ).\n                  ')';\n        }\n      }\n      if ( isset($this->cfg['widget'], $this->cfg['widget']['name']) ){\n        $r .= '.'.$this->cfg['widget']['name'].'(';\n        if ( isset($this->cfg['widget']['options']) ){\n          $r .= '{';\n          foreach ( $this->cfg['widget']['options'] as $n => $o ){\n            $r .= '\"'.$n.'\":';\n            if ( \\is_string($o) ){\n              $o = trim($o);\n              if ( (strpos($o, 'function(') === 0) ){\n                $r .= $o;\n              }\n              else{\n                $r .= '\"'.bbn\\Str::escapeDquotes($o).'\"';\n              }\n            }\n            else if ( \\is_bool($o) ){\n              $r .= $o ? 'true' : 'false';\n            }\n            else{\n              $r .= json_encode($o);\n            }\n            $r .= ',';\n          }\n          $r .= '}';\n        }\n        $r .= ')';\n      }\n      if ( !empty($this->help) ){\n        \/\/ tooltip\n      }\n      if ( !empty($r) ){\n        if ( $with_ele ){\n          $r = '$(\"#'.$this->attr['id'].'\")'.$r.';'.PHP_EOL;\n        }\n        else{\n          $r = $r.';'.PHP_EOL;\n        }\n      }\n\t\t}\n    if ( !empty($this->script) ){\n      $r .= $this->script.PHP_EOL;\n    }\n    if ( \\is_array($this->content) ){\n      foreach ( $this->content as $c ){\n        if ( \\is_array($c) ){\n          $c = new bbn\\Html\\Element($c);\n        }\n        if (\\is_object($c) && method_exists($c, 'script') ){\n          $r .= $c->script();\n        }\n      }\n    }\n\t\treturn $r;\n\t}",
                "parent": false,
                "trait": false,
                "startLine": 482,
                "endLine": 547,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 0,
                "shortName": "script",
                "returns": [],
                "arguments": [
                    {
                        "name": "with_ele",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": 1,
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "Returns the javascript coming with the object\n\n",
                    "params": [],
                    "return": "javascript string"
                },
                "comments": "  \/**\n\t * Returns the javascript coming with the object\n   * \n   * @return string javascript string\n\t *\/"
            },
            "trait": false,
            "startLine": 482,
            "endLine": 547,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "script",
            "returns": [],
            "arguments": [
                {
                    "name": "with_ele",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the javascript coming with the object\n\n",
                "params": [],
                "return": "javascript string"
            },
            "comments": "  \/**\n\t * Returns the javascript coming with the object\n   * \n   * @return string javascript string\n\t *\/"
        },
        "attr": {
            "name": "attr",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function attr($arr)\n  {\n    $args = \\func_get_args();\n    if ( \\is_array($arr) ){\n      foreach ( $arr as $k => $v ){\n        if ( $k === 'class' ){\n          $this->addClass($v);\n        }\n        else{\n          $this->attr[$k] = $v;\n        }\n      }\n    }\n    else if ( (\\count($args) === 2) && \\is_string($args[0]) && \\is_string($args[1]) ){\n      if ( $args[0] === 'class' ){\n        $this->addClass($args[1]);\n      }\n      else{\n        $this->attr[$args[0]] = $args[1];\n      }\n    }\n    else if ( \\is_string($arr) && isset($this->attr[$arr]) ){\n      return $this->attr[$arr];\n    }\n    return $this;\n  }",
            "parent": {
                "name": "attr",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function attr($arr)\n  {\n    $args = \\func_get_args();\n    if ( \\is_array($arr) ){\n      foreach ( $arr as $k => $v ){\n        if ( $k === 'class' ){\n          $this->addClass($v);\n        }\n        else{\n          $this->attr[$k] = $v;\n        }\n      }\n    }\n    else if ( (\\count($args) === 2) && \\is_string($args[0]) && \\is_string($args[1]) ){\n      if ( $args[0] === 'class' ){\n        $this->addClass($args[1]);\n      }\n      else{\n        $this->attr[$args[0]] = $args[1];\n      }\n    }\n    else if ( \\is_string($arr) && isset($this->attr[$arr]) ){\n      return $this->attr[$arr];\n    }\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 549,
                "endLine": 574,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "attr",
                "returns": [],
                "arguments": [
                    {
                        "name": "arr",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 549,
            "endLine": 574,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "attr",
            "returns": [],
            "arguments": [
                {
                    "name": "arr",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "text": {
            "name": "text",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function text($txt=null)\n  {\n    if ( !\\is_null($txt) ){\n      $this->text = bbn\\Str::html2text($txt);\n      return $this;\n    }\n\n    return $this->text;\n  }",
            "parent": {
                "name": "text",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function text($txt=null)\n  {\n    if ( !\\is_null($txt) ){\n      $this->text = bbn\\Str::html2text($txt);\n      return $this;\n    }\n\n    return $this->text;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 576,
                "endLine": 584,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 0,
                "shortName": "text",
                "returns": [],
                "arguments": [
                    {
                        "name": "txt",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 576,
            "endLine": 584,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "text",
            "returns": [],
            "arguments": [
                {
                    "name": "txt",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "content": {
            "name": "content",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function content($c=null)\n  {\n    if ( \\is_null($c) ){\n      return $this->content;\n    }\n    else if ( \\is_array($c) || \\is_string($c) ){\n      $this->content = $c;\n      return $this;\n    }\n  }",
            "parent": {
                "name": "content",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function content($c=null)\n  {\n    if ( \\is_null($c) ){\n      return $this->content;\n    }\n    else if ( \\is_array($c) || \\is_string($c) ){\n      $this->content = $c;\n      return $this;\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 586,
                "endLine": 595,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 0,
                "shortName": "content",
                "returns": [],
                "arguments": [
                    {
                        "name": "c",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 586,
            "endLine": 595,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "content",
            "returns": [],
            "arguments": [
                {
                    "name": "c",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "html": {
            "name": "html",
            "summary": "Returns the corresponding HTML string",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "\tpublic function html($with_js = 1)\n\t{\n    $html = '';\n\t\tif ( $this->tag ){\n\t\t\t$this->update();\n      \/\/ TAG\n\t\t\t$html .= '<'.$this->tag;\n\n      foreach ( $this->attr as $key => $val ){\n        if ( \\is_string($key) ){\n          $html .= ' '.htmlspecialchars($key).'=\"';\n          if ( is_numeric($val) ){\n            $html .= $val;\n          }\n          else if (\\is_string($val) ){\n            $html .= htmlspecialchars($val);\n          }\n          $html .= '\"';\n        }\n      }\n\t\t\t\n      if ( \\count($this->css) > 0 ){\n\t\t\t\t$html .= self::cssToString($this->css);\n\t\t\t}\n      if ( $this->xhtml ){\n        $html .= ' \/';\n      }\n      $html .= '>';\n\n\t\t\t\n\t\t\tif ( !\\in_array($this->tag, self::$self_closing_tags) ){\n\n        if ( isset($this->text) ){\n          $html .= $this->text;\n        }\n        \n        if ( isset($this->content) ){\n          \/\/ @todo: Add the ability to imbricate elements\n          if ( \\is_string($this->content) ){\n            $html .= $this->content;\n          }\n          else if ( \\is_array($this->content) ){\n            foreach ( $this->content as $c ){\n              if ( \\is_array($c) ){\n                $c = new bbn\\Html\\Element($c);\n              }\n              $html .= $c->html($with_js);\n            }\n          }\n        }\n\t\t\t\t$html .= '<\/'.$this->tag.'>';\n\t\t\t}\n\t\t\t\n\t\t\tif ( isset($this->placeholder) && strpos($this->placeholder,'%s') !== false ){\n\t\t\t\t$html = sprintf($this->placeholder, $html);\n\t\t\t}\n      \n\t\t}\n\t\treturn $html;\n\t}",
            "parent": {
                "name": "html",
                "summary": "Returns the corresponding HTML string",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "\tpublic function html($with_js = 1)\n\t{\n    $html = '';\n\t\tif ( $this->tag ){\n\t\t\t$this->update();\n      \/\/ TAG\n\t\t\t$html .= '<'.$this->tag;\n\n      foreach ( $this->attr as $key => $val ){\n        if ( \\is_string($key) ){\n          $html .= ' '.htmlspecialchars($key).'=\"';\n          if ( is_numeric($val) ){\n            $html .= $val;\n          }\n          else if (\\is_string($val) ){\n            $html .= htmlspecialchars($val);\n          }\n          $html .= '\"';\n        }\n      }\n\t\t\t\n      if ( \\count($this->css) > 0 ){\n\t\t\t\t$html .= self::cssToString($this->css);\n\t\t\t}\n      if ( $this->xhtml ){\n        $html .= ' \/';\n      }\n      $html .= '>';\n\n\t\t\t\n\t\t\tif ( !\\in_array($this->tag, self::$self_closing_tags) ){\n\n        if ( isset($this->text) ){\n          $html .= $this->text;\n        }\n        \n        if ( isset($this->content) ){\n          \/\/ @todo: Add the ability to imbricate elements\n          if ( \\is_string($this->content) ){\n            $html .= $this->content;\n          }\n          else if ( \\is_array($this->content) ){\n            foreach ( $this->content as $c ){\n              if ( \\is_array($c) ){\n                $c = new bbn\\Html\\Element($c);\n              }\n              $html .= $c->html($with_js);\n            }\n          }\n        }\n\t\t\t\t$html .= '<\/'.$this->tag.'>';\n\t\t\t}\n\t\t\t\n\t\t\tif ( isset($this->placeholder) && strpos($this->placeholder,'%s') !== false ){\n\t\t\t\t$html = sprintf($this->placeholder, $html);\n\t\t\t}\n      \n\t\t}\n\t\treturn $html;\n\t}",
                "parent": false,
                "trait": false,
                "startLine": 602,
                "endLine": 661,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 0,
                "shortName": "html",
                "returns": [],
                "arguments": [
                    {
                        "name": "with_js",
                        "position": 0,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": 1,
                        "default_name": "",
                        "description": "js Includes the javascript"
                    }
                ],
                "doc": {
                    "description": "Returns the corresponding HTML string\n\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "bool",
                            "name": "$with",
                            "description": "js Includes the javascript"
                        }
                    ],
                    "return": "HTML string"
                },
                "comments": "  \/**\n\t * Returns the corresponding HTML string\n   * \n   * @param bool $with_js Includes the javascript\n   * @return string HTML string\n\t *\/"
            },
            "trait": false,
            "startLine": 602,
            "endLine": 661,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "html",
            "returns": [],
            "arguments": [
                {
                    "name": "with_js",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 1,
                    "default_name": "",
                    "description": "js Includes the javascript"
                }
            ],
            "doc": {
                "description": "Returns the corresponding HTML string\n\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$with",
                        "description": "js Includes the javascript"
                    }
                ],
                "return": "HTML string"
            },
            "comments": "  \/**\n\t * Returns the corresponding HTML string\n   * \n   * @param bool $with_js Includes the javascript\n   * @return string HTML string\n\t *\/"
        },
        "eleAndScript": {
            "name": "eleAndScript",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function eleAndScript()\n  {\n    return ['$(\\''.bbn\\Str::escapeSquotes($this->html()).'\\')',$this->script(false)];\n  }",
            "parent": {
                "name": "eleAndScript",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function eleAndScript()\n  {\n    return ['$(\\''.bbn\\Str::escapeSquotes($this->html()).'\\')',$this->script(false)];\n  }",
                "parent": false,
                "trait": false,
                "startLine": 663,
                "endLine": 666,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "eleAndScript",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 663,
            "endLine": 666,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "eleAndScript",
            "returns": [],
            "arguments": []
        },
        "makeEmpty": {
            "name": "makeEmpty",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Html\\Element",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function makeEmpty()\n  {\n    $this->content = null;\n    $this->html = '';\n    $this->script = '';\n  }",
            "parent": {
                "name": "makeEmpty",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Html\\Element",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Html\/Element.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function makeEmpty()\n  {\n    $this->content = null;\n    $this->html = '';\n    $this->script = '';\n  }",
                "parent": false,
                "trait": false,
                "startLine": 668,
                "endLine": 673,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "makeEmpty",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 668,
            "endLine": 673,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "makeEmpty",
            "returns": [],
            "arguments": []
        }
    },
    "properties": {
        "label": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var null|string The input's label\/title",
                "tags": []
            },
            "parent": false,
            "value": null
        },
        "value": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var mixed The input's value",
                "tags": []
            },
            "parent": false,
            "value": ""
        },
        "default": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var mixed The input's default value",
                "tags": []
            },
            "parent": false,
            "value": ""
        },
        "null": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var bool Can the input's value be null",
                "tags": []
            },
            "parent": false,
            "value": null
        },
        "table": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string The corresponding DB table???",
                "tags": []
            },
            "parent": false,
            "value": null
        },
        "field": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string The field shortcut",
                "tags": []
            },
            "parent": false,
            "value": null
        },
        "lang": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Input",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string The language",
                "tags": []
            },
            "parent": false,
            "value": null
        },
        "schema": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Input"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "The JSON schema configuration (combined with Element::$schema)"
                    }
                ]
            },
            "parent": {
                "name": "schema",
                "trait": false,
                "static": true,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var string JSON schema of the configuration",
                    "tags": []
                },
                "parent": false,
                "value": "{\n\t\"type\":\"object\",\n\t\"$schema\": \"http:\\\/\\\/json-schema.org\\\/draft-03\\\/schema\",\n\t\"id\": \"#\",\n\t\"required\":false,\n\t\"properties\":{\n\t\t\"attr\": {\n\t\t\t\"type\":\"object\",\n\t\t\t\"id\": \"attr\",\n      \"description\": \"Attributes\",\n\t\t\t\"required\":false,\n\t\t\t\"properties\":{}\n\t\t},\n    \"content\": {\n\t\t\t\"type\":[\"array\",\"string\",\"null\"],\n\t\t\t\"id\": \"content\",\n\t\t\t\"required\":false,\n      \"description\": \"Css properties\"\n\t\t},\n    \"css\": {\n\t\t\t\"type\":[\"object\",\"null\"],\n\t\t\t\"id\": \"css\",\n\t\t\t\"required\":false,\n      \"description\": \"Css properties\"\n\t\t},\n\t\t\"events\": {\n\t\t\t\"type\":\"object\",\n\t\t\t\"id\": \"events\",\n      \"description\": \"Events\",\n\t\t\t\"required\":false,\n\t\t\t\"properties\":{\n\t\t\t\t\"change\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"script\": {\n\t\t\t\"type\":\"string\",\n      \"description\": \"Script\",\n\t\t\t\"id\": \"script\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"tag\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"tag\",\n      \"description\": \"Tag\",\n\t\t\t\"required\":true\n\t\t},\n\t\t\"text\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"text\",\n      \"description\": \"Text\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"widget\": {\n\t\t\t\"type\":[\"object\",\"array\"],\n\t\t\t\"id\": \"widget\",\n      \"description\": \"Widget\",\n\t\t\t\"required\":false,\n\t\t\t\"properties\":{\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"required\":true\n\t\t\t\t},\n\t\t\t\t\"options\": {\n\t\t\t\t\t\"type\":[\"object\",\"array\"],\n\t\t\t\t\t\"required\":false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"xhtml\": {\n\t\t\t\"type\":\"boolean\",\n\t\t\t\"id\": \"xhtml\",\n      \"description\": \"XHTML conformity\",\n\t\t\t\"required\":false\n\t\t}\n\t}\n}"
            },
            "value": "{\n\t\"properties\":{\n\t\t\"attr\": {\n\t\t\t\"type\":\"array\",\n\t\t\t\"id\": \"attr\",\n      \"description\": \"Attributes\",\n\t\t\t\"required\":true,\n\t\t\t\"properties\":{\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"id\",\n          \"description\": \"ID\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"integer\",\n\t\t\t\t\t\"id\": \"maxlength\",\n          \"description\": \"Maxlength\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"name\": {\n          \"type\":\"string\",\n          \"id\": \"name\",\n          \"description\": \"Name\",\n          \"required\":true\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"id\": \"required\",\n          \"description\": \"Required\",\n          \"required\":false\n        },\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"type\",\n          \"description\": \"Input type\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"value\": {\n          \"type\":\"string\",\n          \"description\": \"Value\",\n          \"id\": \"value\",\n          \"required\":false\n        }\n\t\t\t}\n\t\t},\n\t\t\"default\": {\n\t\t\t\"type\":\"any\",\n\t\t\t\"id\": \"default\",\n      \"description\": \"Default value\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"field\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"field\",\n      \"description\": \"Shortcut (??) field\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"label\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"label\",\n      \"description\": \"Label\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"lang\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"lang\",\n      \"description\": \"Language\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"null\": {\n\t\t\t\"type\":\"boolean\",\n\t\t\t\"id\": \"null\",\n      \"description\": \"can be null?\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"params\": {\n\t\t\t\"type\": [\"array\",\"null\"],\n\t\t\t\"id\": \"params\",\n\t\t\t\"required\":false,\n      \"description\": \"Parameters from BBN\"\n\t\t},\n\t\t\"sql\": {\n\t\t\t\"type\": [\"string\"],\n\t\t\t\"id\": \"sql\",\n\t\t\t\"required\":false,\n      \"description\": \"SQL request\"\n\t\t},\n\t\t\"table\": {\n\t\t\t\"type\":\"string\",\n      \"description\": \"Table\",\n\t\t\t\"id\": \"table\",\n\t\t\t\"required\":false\n\t\t},\n\t}\n}"
        },
        "cfg": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var array The element's configuration",
                "tags": []
            },
            "parent": {
                "name": "cfg",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var array The element's configuration",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "text": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string The element's textNode",
                "tags": []
            },
            "parent": {
                "name": "text",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var string The element's textNode",
                    "tags": []
                },
                "parent": false,
                "value": ""
            },
            "value": ""
        },
        "content": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string|array The element's content (can be an array of elements)",
                "tags": []
            },
            "parent": {
                "name": "content",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var string|array The element's content (can be an array of elements)",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "tag": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var string The element's tag",
                "tags": []
            },
            "parent": {
                "name": "tag",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var string The element's tag",
                    "tags": []
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "attr": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var string The element's tag",
                "tags": []
            },
            "parent": {
                "name": "attr",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var string The element's tag",
                    "tags": []
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "css": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array The element's attributes",
                "tags": []
            },
            "parent": {
                "name": "css",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array The element's attributes",
                    "tags": []
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "script": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array Styles",
                "tags": []
            },
            "parent": {
                "name": "script",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array Styles",
                    "tags": []
                },
                "parent": false,
                "value": ""
            },
            "value": ""
        },
        "events": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var string JavaScript code which should be executed",
                "tags": []
            },
            "parent": {
                "name": "events",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var string JavaScript code which should be executed",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "data": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array The element's data",
                "tags": []
            },
            "parent": {
                "name": "data",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array The element's data",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "widget": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array Widget's configuration",
                "tags": []
            },
            "parent": {
                "name": "widget",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array Widget's configuration",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "help": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var string Help for tooltip",
                "tags": []
            },
            "parent": {
                "name": "help",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var string Help for tooltip",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "xhtml": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var bool XHTML tag ending, false by default",
                "tags": []
            },
            "parent": {
                "name": "xhtml",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var bool XHTML tag ending, false by default",
                    "tags": []
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "self_closing_tags": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array List of known HTML self-closing tags",
                "tags": []
            },
            "parent": {
                "name": "self_closing_tags",
                "trait": false,
                "static": true,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array List of known HTML self-closing tags",
                    "tags": []
                },
                "parent": false,
                "value": [
                    "area",
                    "base",
                    "hr",
                    "col",
                    "command",
                    "embed",
                    "hr",
                    "img",
                    "input",
                    "keygen",
                    "link",
                    "meta",
                    "param",
                    "source",
                    "track",
                    "wbr"
                ]
            },
            "value": [
                "area",
                "base",
                "hr",
                "col",
                "command",
                "embed",
                "hr",
                "img",
                "input",
                "keygen",
                "link",
                "meta",
                "param",
                "source",
                "track",
                "wbr"
            ]
        },
        "input_fields": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "public",
            "doc": {
                "description": "@var array List of known inputs",
                "tags": []
            },
            "parent": {
                "name": "input_fields",
                "trait": false,
                "static": true,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "public",
                "doc": {
                    "description": "@var array List of known inputs",
                    "tags": []
                },
                "parent": false,
                "value": [
                    "input",
                    "textarea",
                    "select"
                ]
            },
            "value": [
                "input",
                "textarea",
                "select"
            ]
        },
        "validator": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var bool|object The JSON validator object. Will be generated only once",
                "tags": []
            },
            "parent": {
                "name": "validator",
                "trait": false,
                "static": true,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var bool|object The JSON validator object. Will be generated only once",
                    "tags": []
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "error": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Html\\Element"
            },
            "declaring_trait": "bbn\\Html\\Element",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "@var string last error",
                "tags": []
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": true,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Html\\Element"
                },
                "declaring_trait": "bbn\\Html\\Element",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "@var string last error",
                    "tags": []
                },
                "parent": false,
                "value": null
            },
            "value": null
        }
    },
    "staticProperties": {
        "schema": "{\n\t\"properties\":{\n\t\t\"attr\": {\n\t\t\t\"type\":\"array\",\n\t\t\t\"id\": \"attr\",\n      \"description\": \"Attributes\",\n\t\t\t\"required\":true,\n\t\t\t\"properties\":{\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"id\",\n          \"description\": \"ID\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n\t\t\t\t\"maxlength\": {\n\t\t\t\t\t\"type\":\"integer\",\n\t\t\t\t\t\"id\": \"maxlength\",\n          \"description\": \"Maxlength\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"name\": {\n          \"type\":\"string\",\n          \"id\": \"name\",\n          \"description\": \"Name\",\n          \"required\":true\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"id\": \"required\",\n          \"description\": \"Required\",\n          \"required\":false\n        },\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\"id\": \"type\",\n          \"description\": \"Input type\",\n\t\t\t\t\t\"required\":false\n\t\t\t\t},\n        \"value\": {\n          \"type\":\"string\",\n          \"description\": \"Value\",\n          \"id\": \"value\",\n          \"required\":false\n        }\n\t\t\t}\n\t\t},\n\t\t\"default\": {\n\t\t\t\"type\":\"any\",\n\t\t\t\"id\": \"default\",\n      \"description\": \"Default value\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"field\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"field\",\n      \"description\": \"Shortcut (??) field\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"label\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"label\",\n      \"description\": \"Label\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"lang\": {\n\t\t\t\"type\":\"string\",\n\t\t\t\"id\": \"lang\",\n      \"description\": \"Language\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"null\": {\n\t\t\t\"type\":\"boolean\",\n\t\t\t\"id\": \"null\",\n      \"description\": \"can be null?\",\n\t\t\t\"required\":false\n\t\t},\n\t\t\"params\": {\n\t\t\t\"type\": [\"array\",\"null\"],\n\t\t\t\"id\": \"params\",\n\t\t\t\"required\":false,\n      \"description\": \"Parameters from BBN\"\n\t\t},\n\t\t\"sql\": {\n\t\t\t\"type\": [\"string\"],\n\t\t\t\"id\": \"sql\",\n\t\t\t\"required\":false,\n      \"description\": \"SQL request\"\n\t\t},\n\t\t\"table\": {\n\t\t\t\"type\":\"string\",\n      \"description\": \"Table\",\n\t\t\t\"id\": \"table\",\n\t\t\t\"required\":false\n\t\t},\n\t}\n}",
        "self_closing_tags": [
            "area",
            "base",
            "hr",
            "col",
            "command",
            "embed",
            "hr",
            "img",
            "input",
            "keygen",
            "link",
            "meta",
            "param",
            "source",
            "track",
            "wbr"
        ],
        "input_fields": [
            "input",
            "textarea",
            "select"
        ],
        "validator": false,
        "error": null
    },
    "constants": null,
    "uses": {
        "bbn": "bbn"
    },
    "dummyComments": [
        "\/**\n * @package html\n *\/",
        "\/**\n * HTML Class creating a form INPUT\n *\n *\n * @author Thomas Nabet <thomas.nabet@gmail.com>\n * @copyright BBN Solutions\n * @since Apr 2, 2013, 21:27:42 +0000\n * @category  MVC\n * @license   http:\/\/www.opensource.org\/licenses\/mit-license.php MIT\n * @version 0.4\n * @todo ???\n *\/"
    ],
    "summary": "HTML Class creating a form INPUT",
    "description": "",
    "description_parts": []
}