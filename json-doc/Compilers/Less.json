{
    "doc": {
        "description": "The LESS compiler and parser.\n *\nConverting LESS to CSS is a three stage process. The incoming file is parsed\nby `Less_parser` into a syntax tree, then it is compiled into another tree\nrepresenting the CSS structure by `Less`. The CSS tree is fed into a\nformatter, like `Less_formatter` which then outputs CSS as a string.\n *\nDuring the first compile, all values are *reduced*, which means that their\ntypes are brought to the lowest form before being dump as strings. This\nhandles math equations, variable dereferences, and the like.\n *\nThe `parse` function of `Less` is the entry point.\n *\nIn summary:\n *\nThe `Less` class creates an instance of the parser, feeds it LESS code,\nthen transforms the resulting tree to a CSS tree. This class also holds the\nevaluation context, such as all available mixins and variables at any given\ntime.\n *\nThe `Less_parser` class is only concerned with parsing its input.\n *\nThe `Less_formatter` takes a CSS tree, and dumps it to a formatted string,\nhandling things like indentation.",
        "tags": []
    },
    "name": "bbn\\Compilers\\Less",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/Compilers\/Less.php",
    "startLine": 40,
    "endLine": 2268,
    "contentConstructor": {
        "file": "bbn\\Compilers\\Less",
        "returns": null
    },
    "methods": {
        "compressList": {
            "name": "compressList",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($items, $delim)\n  {\n\t\telse return array('list', $delim, $items);\n  }",
            "startLine": 84,
            "endLine": 87,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "items",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "delim",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "preg_quote": {
            "name": "preg_quote",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($what)\n  {\n  }",
            "startLine": 89,
            "endLine": 91,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "what",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "compileValue": {
            "name": "compileValue",
            "summary": "Compiles a primitive value into a CSS property value.",
            "description": "*\nValues in lessphp are typed by being wrapped in arrays, their format is\ntypically:\n\t *\n    array(type, contents [, additional_contents]*)\n\t *\nThe input is expected to be reduced. This function will not work on\nthings like expressions and variables.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p><em>\nValues in lessphp are typed by being wrapped in arrays, their format is\ntypically:\n<\/em>\narray(type, contents [, additional_contents]<em>)\n<\/em>\nThe input is expected to be reduced. This function will not work on\nthings like expressions and variables.<\/p>"
                }
            ],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($value)\n  {\n\t\tcase 'list':\n\t\t\t\/\/ [1] - delimiter\n\t\t\t\/\/ [2] - array of values\n\t\t\treturn implode($value[1], array_map(array($this, 'compileValue'), $value[2]));\n\t\tcase 'raw_color':\n\t\t\tif (!empty($this->formatter->compressColors)) {\n\t\t\t\treturn $this->compileValue($this->coerceColor($value));\n\t\t\t}\n\t\t\treturn $value[1];\n\t\tcase 'keyword':\n\t\t\t\/\/ [1] - the keyword\n\t\t\treturn $value[1];\n\t\tcase 'number':\n\t\t\tlist(, $num, $unit) = $value;\n\t\t\t\/\/ [1] - the number\n\t\t\t\/\/ [2] - the unit\n\t\t\tif ($this->numberPrecision !== null) {\n\t\t\t\t$num = round($num, $this->numberPrecision);\n\t\t\t}\n\t\t\treturn $num . $unit;\n\t\tcase 'string':\n\t\t\t\/\/ [1] - contents of string (includes quotes)\n\t\t\tlist(, $delim, $content) = $value;\n\t\t\tforeach ($content as &$part) {\n\t\t\t\tif (is_array($part)) {\n\t\t\t\t\t$part = $this->compileValue($part);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $delim . implode($content) . $delim;\n\t\tcase 'color':\n\t\t\t\/\/ [1] - red component (either number or a %)\n\t\t\t\/\/ [2] - green component\n\t\t\t\/\/ [3] - blue component\n\t\t\t\/\/ [4] - optional alpha component\n\t\t\tlist(, $r, $g, $b) = $value;\n\t\t\t$r = round($r);\n\t\t\t$g = round($g);\n\t\t\t$b = round($b);\n\n\t\t\tif (count($value) == 5 && $value[4] != 1) { \/\/ rgba\n\t\t\t\treturn 'rgba('.$r.','.$g.','.$b.','.$value[4].')';\n\t\t\t}\n\n\t\t\t$h = sprintf(\"#%02x%02x%02x\", $r, $g, $b);\n\n\t\t\tif (!empty($this->formatter->compressColors)) {\n\t\t\t\t\/\/ Converting hex color to short notation (e.g. #003399 to #039)\n\t\t\t\tif ($h[1] === $h[2] && $h[3] === $h[4] && $h[5] === $h[6]) {\n\t\t\t\t\t$h = '#' . $h[1] . $h[3] . $h[5];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $h;\n\n\t\tcase 'function':\n\t\t\tlist(, $name, $args) = $value;\n\t\t\treturn $name.'('.$this->compileValue($args).')';\n\t\tdefault: \/\/ assumed to be unit\n\t\t\t$this->throwError(\"unknown value type: $value[0]\");\n\t\t}\n  }",
            "startLine": 822,
            "endLine": 884,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "value",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "colorArgs": {
            "name": "colorArgs",
            "summary": "Helper function to get arguments for color manipulation functions.",
            "description": "takes a list that contains a color like thing and a percentage",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>takes a list that contains a color like thing and a percentage<\/p>"
                }
            ],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($args)\n  {\n\t\t\treturn array(array('color', 0, 0, 0), 0);\n\t\t}\n\t\tlist($color, $delta) = $args[2];\n\t\t$color = $this->assertColor($color);\n\t\t$delta = floatval($delta[1]);\n\n\t\treturn array($color, $delta);\n  }",
            "startLine": 1101,
            "endLine": 1110,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "args",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "assertColor": {
            "name": "assertColor",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($value, $error = 'expected color value')\n  {\n\t\tif (is_null($color)) $this->throwError($error);\n\t\treturn $color;\n  }",
            "startLine": 1280,
            "endLine": 1284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "value",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "error",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "expected color value",
                    "default_name": ""
                }
            ]
        },
        "assertNumber": {
            "name": "assertNumber",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($value, $error = 'expecting number')\n  {\n\t\t$this->throwError($error);\n  }",
            "startLine": 1286,
            "endLine": 1289,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "value",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "error",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "expecting number",
                    "default_name": ""
                }
            ]
        },
        "assertArgs": {
            "name": "assertArgs",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($value, $expectedArgs, $name = '')\n  {\n\t\t\treturn $value;\n\t\t} else {\n\t\t\tif ($value[0] !== \"list\" || $value[1] != \",\") $this->throwError(\"expecting list\");\n\t\t\t$values = $value[2];\n\t\t\t$numValues = count($values);\n\t\t\tif ($expectedArgs != $numValues) {\n\t\t\t\tif ($name) {\n\t\t\t\t\t$name = $name . \": \";\n\t\t\t\t}\n\n\t\t\t\t$this->throwError(\"${name}expecting $expectedArgs arguments, got $numValues\");\n\t\t\t}\n\n\t\t\treturn $values;\n\t\t}\n  }",
            "startLine": 1291,
            "endLine": 1308,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "value",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "expectedArgs",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "toBool": {
            "name": "toBool",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($a)\n  {\n\t\telse return self::$FALSE;\n  }",
            "startLine": 1612,
            "endLine": 1615,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "a",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "lib_red": {
            "name": "lib_red",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($color)\n  {\n\t\tif (is_null($color)) {\n\t\t\t$this->throwError('color expected for red()');\n\t\t}\n\n\t\treturn $color[1];\n  }",
            "startLine": 1732,
            "endLine": 1739,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "color",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "lib_green": {
            "name": "lib_green",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($color)\n  {\n\t\tif (is_null($color)) {\n\t\t\t$this->throwError('color expected for green()');\n\t\t}\n\n\t\treturn $color[2];\n  }",
            "startLine": 1741,
            "endLine": 1748,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "color",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "lib_blue": {
            "name": "lib_blue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($color)\n  {\n\t\tif (is_null($color)) {\n\t\t\t$this->throwError('color expected for blue()');\n\t\t}\n\n\t\treturn $color[3];\n  }",
            "startLine": 1750,
            "endLine": 1757,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "color",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "Initialize any static state, can initialize parser for a file",
            "description": "$opts isn't used yet",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>$opts isn't used yet<\/p>"
                }
            ],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($fname = NULL)\n  {\n\t\t\t\/\/ used for deprecated parse method\n\t\t\t$this->_parseFile = $fname;\n\t\t}\n  }",
            "startLine": 1875,
            "endLine": 1880,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "fname",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "compile": {
            "name": "compile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($string, $name = NULL)\n  {\n\t\tsetlocale(LC_NUMERIC, \"C\");\n\n\t\t$this->parser = $this->makeParser($name);\n\t\t$root = $this->parser->parse($string);\n\n\t\t$this->env = null;\n\t\t$this->scope = null;\n\n\t\t$this->formatter = $this->newFormatter();\n\n\t\tif (!empty($this->registeredVars)) {\n\t\t\t$this->injectVariables($this->registeredVars);\n\t\t}\n\n\t\t$this->sourceParser = $this->parser; \/\/ used for error messages\n\t\t$this->compileBlock($root);\n\n\t\tob_start();\n\t\t$this->formatter->block($this->scope);\n\t\t$out = ob_get_clean();\n\t\tsetlocale(LC_NUMERIC, $locale);\n\t\treturn $out;\n  }",
            "startLine": 1882,
            "endLine": 1906,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "string",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "compileFile": {
            "name": "compileFile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($fname, $outFname = NULL)\n  {\n\t\t\tthrow new \\Exception('load error: failed to find '.$fname);\n\t\t}\n\n\t\t$pi = pathinfo($fname);\n\n\t\t$oldImport = $this->importDir;\n\n\t\t$this->importDir = (array)$this->importDir;\n\t\t$this->importDir[] = $pi['dirname'].'\/';\n\n\t\t$this->addParsedFile($fname);\n\n\t\t$out = $this->compile(file_get_contents($fname), $fname);\n\n\t\t$this->importDir = $oldImport;\n\n\t\tif ($outFname !== null) {\n\t\t\treturn file_put_contents($outFname, $out);\n\t\t}\n\n\t\treturn $out;\n  }",
            "startLine": 1908,
            "endLine": 1931,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "fname",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "outFname",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "checkedCompile": {
            "name": "checkedCompile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($in, $out)\n  {\n\t\t\t$this->compileFile($in, $out);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 1934,
            "endLine": 1940,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "in",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "out",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "cachedCompile": {
            "name": "cachedCompile",
            "summary": "Execute lessphp on a .less file or a lessphp cache structure",
            "description": "*\nThe lessphp cache structure contains information about a specific\nless file having been parsed. It can be used as a hint for future\ncalls to determine whether or not a rebuild is required.\n\t *\nThe cache structure contains two important keys that may be used\nexternally:\n\t *\ncompiled: The final compiled CSS\nupdated: The time (in seconds) the CSS was last compiled\n\t *\nThe cache structure is a plain-ol' PHP associative array and can\nbe serialized and unserialized without a hitch.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p><em>\nThe lessphp cache structure contains information about a specific\nless file having been parsed. It can be used as a hint for future\ncalls to determine whether or not a rebuild is required.\n<\/em>\nThe cache structure contains two important keys that may be used\nexternally:\n<em>\ncompiled: The final compiled CSS\nupdated: The time (in seconds) the CSS was last compiled\n<\/em>\nThe cache structure is a plain-ol' PHP associative array and can\nbe serialized and unserialized without a hitch.<\/p>"
                }
            ],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($in, $force = false)\n  {\n\t\t$root = null;\n\n\t\tif (is_string($in)) {\n\t\t\t$root = $in;\n\t\t} elseif (is_array($in) and isset($in['root'])) {\n\t\t\tif ($force or ! isset($in['files'])) {\n\t\t\t\t\/\/ If we are forcing a recompile or if for some reason the\n\t\t\t\t\/\/ structure does not contain any file information we should\n\t\t\t\t\/\/ specify the root to trigger a rebuild.\n\t\t\t\t$root = $in['root'];\n\t\t\t} elseif (isset($in['files']) and is_array($in['files'])) {\n\t\t\t\tforeach ($in['files'] as $fname => $ftime ) {\n\t\t\t\t\tif (!file_exists($fname) or filemtime($fname) > $ftime) {\n\t\t\t\t\t\t\/\/ One of the files we knew about previously has changed\n\t\t\t\t\t\t\/\/ so we should look at our incoming root again.\n\t\t\t\t\t\t$root = $in['root'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t\/\/ TODO: Throw an exception? We got neither a string nor something\n\t\t\t\/\/ that looks like a compatible lessphp cache structure.\n\t\t\treturn null;\n\t\t}\n\n\t\tif ($root !== null) {\n\t\t\t\/\/ If we have a root value which means we should rebuild.\n\t\t\t$out = array();\n\t\t\t$out['root'] = $root;\n\t\t\t$out['compiled'] = $this->compileFile($root);\n\t\t\t$out['files'] = $this->allParsedFiles();\n\t\t\t$out['updated'] = time();\n\t\t\treturn $out;\n\t\t} else {\n\t\t\t\/\/ No changes, pass back the structure\n\t\t\t\/\/ we were given initially.\n\t\t\treturn $in;\n\t\t}\n\n  }",
            "startLine": 1962,
            "endLine": 2004,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "in",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Force rebuild?"
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "parse": {
            "name": "parse",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($str = NULL, $initialVariables = NULL)\n  {\n\t\t\t$initialVariables = $str;\n\t\t\t$str = null;\n\t\t}\n\n\t\t$oldVars = $this->registeredVars;\n\t\tif ($initialVariables !== null) {\n\t\t\t$this->setVariables($initialVariables);\n\t\t}\n\n\t\tif ($str == null) {\n\t\t\tif (empty($this->_parseFile)) {\n\t\t\t\tthrow new \\Exception(\"nothing to parse\");\n\t\t\t}\n\n\t\t\t$out = $this->compileFile($this->_parseFile);\n\t\t} else {\n\t\t\t$out = $this->compile($str);\n\t\t}\n\n\t\t$this->registeredVars = $oldVars;\n\t\treturn $out;\n  }",
            "startLine": 2008,
            "endLine": 2031,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "str",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "initialVariables",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setFormatter": {
            "name": "setFormatter",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n  }",
            "startLine": 2040,
            "endLine": 2042,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setPreserveComments": {
            "name": "setPreserveComments",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($preserve)\n  {\n  }",
            "startLine": 2055,
            "endLine": 2057,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "preserve",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "registerFunction": {
            "name": "registerFunction",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $func)\n  {\n  }",
            "startLine": 2059,
            "endLine": 2061,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "func",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "unregisterFunction": {
            "name": "unregisterFunction",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n  }",
            "startLine": 2063,
            "endLine": 2065,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setVariables": {
            "name": "setVariables",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($variables)\n  {\n  }",
            "startLine": 2067,
            "endLine": 2069,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "variables",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "unsetVariable": {
            "name": "unsetVariable",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name)\n  {\n  }",
            "startLine": 2071,
            "endLine": 2073,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setImportDir": {
            "name": "setImportDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dirs)\n  {\n  }",
            "startLine": 2075,
            "endLine": 2077,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dirs",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addImportDir": {
            "name": "addImportDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir)\n  {\n\t\t$this->importDir[] = $dir;\n  }",
            "startLine": 2079,
            "endLine": 2082,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "allParsedFiles": {
            "name": "allParsedFiles",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 2084,
            "endLine": 2086,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "addParsedFile": {
            "name": "addParsedFile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($file)\n  {\n  }",
            "startLine": 2088,
            "endLine": 2090,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "throwError": {
            "name": "throwError",
            "summary": "Uses the current value of $this->count to show line and line number",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($msg = NULL)\n  {\n\t\t\t$this->sourceParser->throwError($msg, $this->sourceLoc);\n\t\t}\n\t\tthrow new \\Exception($msg);\n  }",
            "startLine": 2095,
            "endLine": 2100,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "msg",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "ccompile": {
            "name": "ccompile",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($in, $out, $less = NULL)\n  {\n\t\t\t$less = new self;\n\t\t}\n\t\treturn $less->checkedCompile($in, $out);\n  }",
            "startLine": 2104,
            "endLine": 2109,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "in",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "out",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "less",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "cexecute": {
            "name": "cexecute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Compilers\\Less",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($in, $force = false, $less = NULL)\n  {\n\t\t\t$less = new self;\n\t\t}\n\t\treturn $less->cachedCompile($in, $force);\n  }",
            "startLine": 2111,
            "endLine": 2116,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "in",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                },
                {
                    "name": "less",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "VERSION": {
            "static": true,
            "visibility": "public",
            "value": "v0.5.0"
        },
        "TRUE": {
            "static": true,
            "visibility": "public",
            "value": [
                "keyword",
                "true"
            ]
        },
        "FALSE": {
            "static": true,
            "visibility": "public",
            "value": [
                "keyword",
                "false"
            ]
        },
        "vPrefix": {
            "visibility": "public",
            "value": "@"
        },
        "mPrefix": {
            "visibility": "public",
            "value": "$"
        },
        "parentSelector": {
            "visibility": "public",
            "value": "&"
        },
        "importDisabled": {
            "visibility": "public"
        },
        "importDir": {
            "visibility": "public"
        }
    },
    "staticProperties": {
        "VERSION": "v0.5.0",
        "TRUE": [
            "keyword",
            "true"
        ],
        "FALSE": [
            "keyword",
            "false"
        ],
        "nextImportId": 0,
        "cssColors": {
            "aliceblue": "240,248,255",
            "antiquewhite": "250,235,215",
            "aqua": "0,255,255",
            "aquamarine": "127,255,212",
            "azure": "240,255,255",
            "beige": "245,245,220",
            "bisque": "255,228,196",
            "black": "0,0,0",
            "blanchedalmond": "255,235,205",
            "blue": "0,0,255",
            "blueviolet": "138,43,226",
            "brown": "165,42,42",
            "burlywood": "222,184,135",
            "cadetblue": "95,158,160",
            "chartreuse": "127,255,0",
            "chocolate": "210,105,30",
            "coral": "255,127,80",
            "cornflowerblue": "100,149,237",
            "cornsilk": "255,248,220",
            "crimson": "220,20,60",
            "cyan": "0,255,255",
            "darkblue": "0,0,139",
            "darkcyan": "0,139,139",
            "darkgoldenrod": "184,134,11",
            "darkgray": "169,169,169",
            "darkgreen": "0,100,0",
            "darkgrey": "169,169,169",
            "darkkhaki": "189,183,107",
            "darkmagenta": "139,0,139",
            "darkolivegreen": "85,107,47",
            "darkorange": "255,140,0",
            "darkorchid": "153,50,204",
            "darkred": "139,0,0",
            "darksalmon": "233,150,122",
            "darkseagreen": "143,188,143",
            "darkslateblue": "72,61,139",
            "darkslategray": "47,79,79",
            "darkslategrey": "47,79,79",
            "darkturquoise": "0,206,209",
            "darkviolet": "148,0,211",
            "deeppink": "255,20,147",
            "deepskyblue": "0,191,255",
            "dimgray": "105,105,105",
            "dimgrey": "105,105,105",
            "dodgerblue": "30,144,255",
            "firebrick": "178,34,34",
            "floralwhite": "255,250,240",
            "forestgreen": "34,139,34",
            "fuchsia": "255,0,255",
            "gainsboro": "220,220,220",
            "ghostwhite": "248,248,255",
            "gold": "255,215,0",
            "goldenrod": "218,165,32",
            "gray": "128,128,128",
            "green": "0,128,0",
            "greenyellow": "173,255,47",
            "grey": "128,128,128",
            "honeydew": "240,255,240",
            "hotpink": "255,105,180",
            "indianred": "205,92,92",
            "indigo": "75,0,130",
            "ivory": "255,255,240",
            "khaki": "240,230,140",
            "lavender": "230,230,250",
            "lavenderblush": "255,240,245",
            "lawngreen": "124,252,0",
            "lemonchiffon": "255,250,205",
            "lightblue": "173,216,230",
            "lightcoral": "240,128,128",
            "lightcyan": "224,255,255",
            "lightgoldenrodyellow": "250,250,210",
            "lightgray": "211,211,211",
            "lightgreen": "144,238,144",
            "lightgrey": "211,211,211",
            "lightpink": "255,182,193",
            "lightsalmon": "255,160,122",
            "lightseagreen": "32,178,170",
            "lightskyblue": "135,206,250",
            "lightslategray": "119,136,153",
            "lightslategrey": "119,136,153",
            "lightsteelblue": "176,196,222",
            "lightyellow": "255,255,224",
            "lime": "0,255,0",
            "limegreen": "50,205,50",
            "linen": "250,240,230",
            "magenta": "255,0,255",
            "maroon": "128,0,0",
            "mediumaquamarine": "102,205,170",
            "mediumblue": "0,0,205",
            "mediumorchid": "186,85,211",
            "mediumpurple": "147,112,219",
            "mediumseagreen": "60,179,113",
            "mediumslateblue": "123,104,238",
            "mediumspringgreen": "0,250,154",
            "mediumturquoise": "72,209,204",
            "mediumvioletred": "199,21,133",
            "midnightblue": "25,25,112",
            "mintcream": "245,255,250",
            "mistyrose": "255,228,225",
            "moccasin": "255,228,181",
            "navajowhite": "255,222,173",
            "navy": "0,0,128",
            "oldlace": "253,245,230",
            "olive": "128,128,0",
            "olivedrab": "107,142,35",
            "orange": "255,165,0",
            "orangered": "255,69,0",
            "orchid": "218,112,214",
            "palegoldenrod": "238,232,170",
            "palegreen": "152,251,152",
            "paleturquoise": "175,238,238",
            "palevioletred": "219,112,147",
            "papayawhip": "255,239,213",
            "peachpuff": "255,218,185",
            "peru": "205,133,63",
            "pink": "255,192,203",
            "plum": "221,160,221",
            "powderblue": "176,224,230",
            "purple": "128,0,128",
            "red": "255,0,0",
            "rosybrown": "188,143,143",
            "royalblue": "65,105,225",
            "saddlebrown": "139,69,19",
            "salmon": "250,128,114",
            "sandybrown": "244,164,96",
            "seagreen": "46,139,87",
            "seashell": "255,245,238",
            "sienna": "160,82,45",
            "silver": "192,192,192",
            "skyblue": "135,206,235",
            "slateblue": "106,90,205",
            "slategray": "112,128,144",
            "slategrey": "112,128,144",
            "snow": "255,250,250",
            "springgreen": "0,255,127",
            "steelblue": "70,130,180",
            "tan": "210,180,140",
            "teal": "0,128,128",
            "thistle": "216,191,216",
            "tomato": "255,99,71",
            "transparent": "0,0,0,0",
            "turquoise": "64,224,208",
            "violet": "238,130,238",
            "wheat": "245,222,179",
            "white": "255,255,255",
            "whitesmoke": "245,245,245",
            "yellow": "255,255,0",
            "yellowgreen": "154,205,50"
        }
    },
    "constants": null,
    "numMethods": 30,
    "numProperties": 8,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "VERSION": "v0.5.0",
        "TRUE": [
            "keyword",
            "true"
        ],
        "FALSE": [
            "keyword",
            "false"
        ],
        "nextImportId": 0,
        "cssColors": {
            "aliceblue": "240,248,255",
            "antiquewhite": "250,235,215",
            "aqua": "0,255,255",
            "aquamarine": "127,255,212",
            "azure": "240,255,255",
            "beige": "245,245,220",
            "bisque": "255,228,196",
            "black": "0,0,0",
            "blanchedalmond": "255,235,205",
            "blue": "0,0,255",
            "blueviolet": "138,43,226",
            "brown": "165,42,42",
            "burlywood": "222,184,135",
            "cadetblue": "95,158,160",
            "chartreuse": "127,255,0",
            "chocolate": "210,105,30",
            "coral": "255,127,80",
            "cornflowerblue": "100,149,237",
            "cornsilk": "255,248,220",
            "crimson": "220,20,60",
            "cyan": "0,255,255",
            "darkblue": "0,0,139",
            "darkcyan": "0,139,139",
            "darkgoldenrod": "184,134,11",
            "darkgray": "169,169,169",
            "darkgreen": "0,100,0",
            "darkgrey": "169,169,169",
            "darkkhaki": "189,183,107",
            "darkmagenta": "139,0,139",
            "darkolivegreen": "85,107,47",
            "darkorange": "255,140,0",
            "darkorchid": "153,50,204",
            "darkred": "139,0,0",
            "darksalmon": "233,150,122",
            "darkseagreen": "143,188,143",
            "darkslateblue": "72,61,139",
            "darkslategray": "47,79,79",
            "darkslategrey": "47,79,79",
            "darkturquoise": "0,206,209",
            "darkviolet": "148,0,211",
            "deeppink": "255,20,147",
            "deepskyblue": "0,191,255",
            "dimgray": "105,105,105",
            "dimgrey": "105,105,105",
            "dodgerblue": "30,144,255",
            "firebrick": "178,34,34",
            "floralwhite": "255,250,240",
            "forestgreen": "34,139,34",
            "fuchsia": "255,0,255",
            "gainsboro": "220,220,220",
            "ghostwhite": "248,248,255",
            "gold": "255,215,0",
            "goldenrod": "218,165,32",
            "gray": "128,128,128",
            "green": "0,128,0",
            "greenyellow": "173,255,47",
            "grey": "128,128,128",
            "honeydew": "240,255,240",
            "hotpink": "255,105,180",
            "indianred": "205,92,92",
            "indigo": "75,0,130",
            "ivory": "255,255,240",
            "khaki": "240,230,140",
            "lavender": "230,230,250",
            "lavenderblush": "255,240,245",
            "lawngreen": "124,252,0",
            "lemonchiffon": "255,250,205",
            "lightblue": "173,216,230",
            "lightcoral": "240,128,128",
            "lightcyan": "224,255,255",
            "lightgoldenrodyellow": "250,250,210",
            "lightgray": "211,211,211",
            "lightgreen": "144,238,144",
            "lightgrey": "211,211,211",
            "lightpink": "255,182,193",
            "lightsalmon": "255,160,122",
            "lightseagreen": "32,178,170",
            "lightskyblue": "135,206,250",
            "lightslategray": "119,136,153",
            "lightslategrey": "119,136,153",
            "lightsteelblue": "176,196,222",
            "lightyellow": "255,255,224",
            "lime": "0,255,0",
            "limegreen": "50,205,50",
            "linen": "250,240,230",
            "magenta": "255,0,255",
            "maroon": "128,0,0",
            "mediumaquamarine": "102,205,170",
            "mediumblue": "0,0,205",
            "mediumorchid": "186,85,211",
            "mediumpurple": "147,112,219",
            "mediumseagreen": "60,179,113",
            "mediumslateblue": "123,104,238",
            "mediumspringgreen": "0,250,154",
            "mediumturquoise": "72,209,204",
            "mediumvioletred": "199,21,133",
            "midnightblue": "25,25,112",
            "mintcream": "245,255,250",
            "mistyrose": "255,228,225",
            "moccasin": "255,228,181",
            "navajowhite": "255,222,173",
            "navy": "0,0,128",
            "oldlace": "253,245,230",
            "olive": "128,128,0",
            "olivedrab": "107,142,35",
            "orange": "255,165,0",
            "orangered": "255,69,0",
            "orchid": "218,112,214",
            "palegoldenrod": "238,232,170",
            "palegreen": "152,251,152",
            "paleturquoise": "175,238,238",
            "palevioletred": "219,112,147",
            "papayawhip": "255,239,213",
            "peachpuff": "255,218,185",
            "peru": "205,133,63",
            "pink": "255,192,203",
            "plum": "221,160,221",
            "powderblue": "176,224,230",
            "purple": "128,0,128",
            "red": "255,0,0",
            "rosybrown": "188,143,143",
            "royalblue": "65,105,225",
            "saddlebrown": "139,69,19",
            "salmon": "250,128,114",
            "sandybrown": "244,164,96",
            "seagreen": "46,139,87",
            "seashell": "255,245,238",
            "sienna": "160,82,45",
            "silver": "192,192,192",
            "skyblue": "135,206,235",
            "slateblue": "106,90,205",
            "slategray": "112,128,144",
            "slategrey": "112,128,144",
            "snow": "255,250,250",
            "springgreen": "0,255,127",
            "steelblue": "70,130,180",
            "tan": "210,180,140",
            "teal": "0,128,128",
            "thistle": "216,191,216",
            "tomato": "255,99,71",
            "transparent": "0,0,0,0",
            "turquoise": "64,224,208",
            "violet": "238,130,238",
            "wheat": "245,222,179",
            "white": "255,255,255",
            "whitesmoke": "245,245,245",
            "yellow": "255,255,0",
            "yellowgreen": "154,205,50"
        },
        "libFunctions": [],
        "registeredVars": [],
        "preserveComments": false,
        "vPrefix": "@",
        "mPrefix": "$",
        "parentSelector": "&",
        "importDisabled": false,
        "importDir": "",
        "numberPrecision": null,
        "allParsedFiles": [],
        "sourceParser": null,
        "sourceLoc": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Compilers",
    "shortName": "Less",
    "summary": "The LESS compiler and parser.",
    "description": "*\nConverting LESS to CSS is a three stage process. The incoming file is parsed\nby `Less_parser` into a syntax tree, then it is compiled into another tree\nrepresenting the CSS structure by `Less`. The CSS tree is fed into a\nformatter, like `Less_formatter` which then outputs CSS as a string.\n *\nDuring the first compile, all values are *reduced*, which means that their\ntypes are brought to the lowest form before being dump as strings. This\nhandles math equations, variable dereferences, and the like.\n *\nThe `parse` function of `Less` is the entry point.\n *\nIn summary:\n *\nThe `Less` class creates an instance of the parser, feeds it LESS code,\nthen transforms the resulting tree to a CSS tree. This class also holds the\nevaluation context, such as all available mixins and variables at any given\ntime.\n *\nThe `Less_parser` class is only concerned with parsing its input.\n *\nThe `Less_formatter` takes a CSS tree, and dumps it to a formatted string,\nhandling things like indentation.",
    "description_parts": [
        {
            "type": "text",
            "content": "<p><em>\nConverting LESS to CSS is a three stage process. The incoming file is parsed\nby <code>Less_parser<\/code> into a syntax tree, then it is compiled into another tree\nrepresenting the CSS structure by <code>Less<\/code>. The CSS tree is fed into a\nformatter, like <code>Less_formatter<\/code> which then outputs CSS as a string.\n<\/em>\nDuring the first compile, all values are <em>reduced<\/em>, which means that their\ntypes are brought to the lowest form before being dump as strings. This\nhandles math equations, variable dereferences, and the like.\n<em>\nThe <code>parse<\/code> function of <code>Less<\/code> is the entry point.\n<\/em>\nIn summary:\n<em>\nThe <code>Less<\/code> class creates an instance of the parser, feeds it LESS code,\nthen transforms the resulting tree to a CSS tree. This class also holds the\nevaluation context, such as all available mixins and variables at any given\ntime.\n<\/em>\nThe <code>Less_parser<\/code> class is only concerned with parsing its input.\n*\nThe <code>Less_formatter<\/code> takes a CSS tree, and dumps it to a formatted string,\nhandling things like indentation.<\/p>"
        }
    ]
}