{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Menu",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Cache",
        "bbn\\Models\\Tts\\Optional"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Menu.php",
    "startLine": 8,
    "endLine": 852,
    "numMethods": 52,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Cache",
        "bbn\\Models\\Tts\\Optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "id_public_root": null,
        "public_root": "permissions|access",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "options": null,
        "pref": null,
        "perm": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "_cache_prefix": null,
        "cache_engine": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Menu",
    "contentConstructor": {
        "file": "bbn\\Appui\\Menu",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->options = bbn\\Appui\\Option::getInstance();\n    $this->pref    = bbn\\User\\Preferences::getInstance();\n    $this->perm    = bbn\\User\\Permissions::getInstance();\n    $this->cacheInit();\n    self::optionalInit();\n  }",
            "startLine": 31,
            "endLine": 38,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "fromPath": {
            "name": "fromPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $path)\n  {\n    $id = null;\n    if (!Str::isUid($path)) {\n      \/\/$path = $this->options->fromCode($path, self::$option_root_id);\n      if (!($id = self::getAppuiOptionId($path))) {\n        $id = $this->perm->fromPath($path);\n      }\n    }\n\n    return Str::isUid($id) ? $id : null;\n  }",
            "startLine": 47,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "toPath": {
            "name": "toPath",
            "summary": "Returns the path corresponding to an ID",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    $path = null;\n    if (Str::isUid($id)) {\n      if (!($path = $this->options->toPath($id, '', $this->_get_public_root()))) {\n        $path = $this->perm->toPath($id);\n      }\n\n    }\n\n    return \\is_string($path) ? $path : null;\n  }",
            "startLine": 67,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "tree": {
            "name": "tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $prepath = false)\n  {\n    if (Str::isUid($id)) {\n      if ($this->cacheHas($id, __FUNCTION__)) {\n        return $this->cacheGet($id, __FUNCTION__);\n      }\n\n      $tree = $this->pref->getTree($id);\n      $res  = $this->_arrange($tree, $prepath);\n      $this->cacheSet($id, __FUNCTION__, $res['items'] ?? []);\n      return $res['items'] ?? [];\n    }\n  }",
            "startLine": 117,
            "endLine": 129,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "prepath",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "customTree": {
            "name": "customTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $prepath = false)\n  {\n    if ($tree = $this->tree($id, $prepath)) {\n      return $this->_adapt($tree, $this->pref, $prepath);\n    }\n  }",
            "startLine": 132,
            "endLine": 137,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "prepath",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "addShortcut": {
            "name": "addShortcut",
            "summary": "Adds an user'shortcut from a menu",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (($bit = $this->pref->getBit($id, false))\n        && ($id_option = $this->fromPath('shortcuts'))\n        && ($c = $this->pref->getClassCfg())\n    ) {\n      if ($id_menu = $this->pref->getByOption($id_option)) {\n        $id_menu = $id_menu[$c['arch']['user_options']['id']];\n      }\n      else {\n        $id_menu = $this->pref->add($id_option, [$c['arch']['user_options']['text'] => X::_('Shortcuts')]);\n      }\n\n      if (!empty($id_menu)\n          && ($arch = $c['arch']['user_options_bits'])\n      ) {\n        if (($bits = $this->pref->getBits($id_menu, false, false))\n            && ( X::find($bits, [$arch['id_option'] => $bit[$arch['id_option']]]) !== null)\n        ) {\n          return null;\n        }\n\n        return $this->pref->addBit(\n          $id_menu, [\n          $arch['id_option'] => $bit[$arch['id_option']],\n          $arch['text'] => $bit[$arch['text']],\n          $arch['cfg'] => $bit[$arch['cfg']],\n          $arch['num'] => $this->pref->nextBitNum($id_menu) ?: 1\n          ]\n        );\n      }\n    }\n\n    return null;\n  }",
            "startLine": 146,
            "endLine": 180,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The menu item's ID to link"
                }
            ]
        },
        "addShortcutByUrl": {
            "name": "addShortcutByUrl",
            "summary": "Adds an user'shortcut from a router",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $url, string $text, string $icon)\n  {\n    if ($info = $this->perm->fromPathInfo($url)) {\n      $id_option = $this->fromPath('shortcuts');\n      $c = $this->pref->getClassCfg();\n      $arch = $c['arch']['user_options_bits'];\n      if ($id_menu = $this->pref->getByOption($id_option)) {\n        $id_menu = $id_menu['id'];\n      }\n      else {\n        $id_menu = $this->pref->add($id_option, [$c['arch']['user_options']['text'] => X::_('Shortcuts')]);\n      }\n\n      if (!empty($id_menu)) {\n        $shortcuts = $this->pref->getBits($id_menu, false, false);\n        if (X::getRow($shortcuts, [\n          'id_option' => $info['id'],\n          'url' => $info['param']\n        ])) {\n          return null;\n        }\n\n        return $this->pref->addBit($id_menu, [\n          $arch['id_option'] => $info['id'],\n          $arch['text'] => $text,\n          'url' => $info['param'],\n          'icon' => $icon,\n          $arch['num'] => $this->pref->nextBitNum($id_menu) ?: 1\n        ]);\n      }\n    }\n\n    return null;\n  }",
            "startLine": 191,
            "endLine": 224,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "An URL to append to the permission's URL"
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The text to show in the shortcut"
                },
                {
                    "name": "icon",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The icon to show in the shortcut"
                }
            ]
        },
        "removeShortcut": {
            "name": "removeShortcut",
            "summary": "Removes an user'shortcut",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if (Str::isUid($id)) {\n      return $this->pref->deleteBit($id);\n    }\n\n    return null;\n  }",
            "startLine": 233,
            "endLine": 240,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The shortcut's ID"
                }
            ]
        },
        "shortcuts": {
            "name": "shortcuts",
            "summary": "Gets the user' shortcuts list",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (($id_option = $this->fromPath('shortcuts'))\n        && ($menu = $this->pref->getByOption($id_option))\n    ) {\n      $links = $this->pref->getBits($menu['id']);\n      $res   = [];\n      foreach ($links as $link){\n        if (empty($link['id_option'])) {\n          $this->pref->deleteBit($link['id']);\n        }\n        elseif ($url = $this->toPath($link['id_option'])) {\n          $res[] = [\n            'id' => $link['id'],\n            'id_option' => $link['id_option'],\n            'url' => $url . (empty($link['url']) ? '' : '\/' . $link['url']),\n            'text' => $link['text'],\n            'icon' => $link['icon'],\n            'num' => $link['num']\n          ];\n        }\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 248,
            "endLine": 275,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getIdMenu": {
            "name": "getIdMenu",
            "summary": "Returns the menu's ID form an its item",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    return $this->pref->getIdByBit($id);\n  }",
            "startLine": 284,
            "endLine": 287,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the menu's item"
                }
            ]
        },
        "remove": {
            "name": "remove",
            "summary": "Removes menu and deletes parent cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (Str::isUid($id)) {\n      if ($id_menu = $this->getIdMenu($id)) {\n        if ($this->pref->deleteBit($id)) {\n          $this->deleteCache($id_menu);\n          return true;\n        }\n      }\n      elseif ($this->pref->delete($id)) {\n        $this->options->deleteCache($this->fromPath('menu'));\n        return true;\n      }\n    }\n\n    return false;\n  }",
            "startLine": 295,
            "endLine": 311,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Add menu and delete the chache.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_menu, array $cfg = NULL)\n  {\n    $id_opt = $this->fromPath('menus');\n    if (\\is_array($id_menu)) {\n      $cfg = $id_menu;\n    }\n\n    if (!empty($cfg)) {\n      if (Str::isUid($id_menu)) {\n        $this->deleteCache($id_menu);\n        $id = $this->pref->addBit($id_menu, $cfg);\n      }\n      else {\n        $id = $this->pref->addToGroup($id_opt, $cfg);\n      }\n\n      $this->options->deleteCache($id_opt);\n      return $id;\n    }\n\n    return null;\n  }",
            "startLine": 322,
            "endLine": 343,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_menu",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "menu"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "set": {
            "name": "set",
            "summary": "Updates a menu item and deletes the menu cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $cfg)\n  {\n    if (Str::isUid($id)\n        && ($id_menu = $this->getIdMenu($id))\n        && $this->pref->updateBit($id, $cfg)\n    ) {\n      $this->deleteCache($id_menu);\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 353,
            "endLine": 364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setText": {
            "name": "setText",
            "summary": "Sets the menu's text and deletes its chache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $text)\n  {\n    if (Str::isUid($id) && $this->pref->setText($id, $text)) {\n      $this->deleteCache($id);\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 374,
            "endLine": 382,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The menu's ID"
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new text tp set"
                }
            ]
        },
        "deleteCache": {
            "name": "deleteCache",
            "summary": "Clears the menu cache",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_menu)\n  {\n    $this->options->deleteCache($this->fromPath('menu'), true);\n    return $this->cacheDelete($id_menu);\n  }",
            "startLine": 388,
            "endLine": 392,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id_menu",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getDefault": {
            "name": "getDefault",
            "summary": "Gets the user's default menu",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (($id_opt = $this->fromPath('default'))\n        && ($all = $this->pref->getAll($id_opt))\n    ) {\n      $id = null;\n      if ($by_id_user = \\array_filter(\n        $all, function ($a) {\n          return !empty($a['id_user']) && !empty($a['id_alias']);\n        }\n      )\n      ) {\n        $id = $by_id_user[0]['id_alias'];\n      }\n      elseif ($by_id_group = \\array_filter(\n        $all, function ($a) {\n          return !empty($a['id_group']) && !empty($a['id_alias']);\n        }\n      )\n      ) {\n        $id = $by_id_group[0]['id_alias'];\n      }\n      elseif ($by_public = \\array_filter(\n        $all, function ($a) {\n          return !empty($a['public']) && !empty($a['id_alias']);\n        }\n      )\n      ) {\n        $id = $by_public[0]['id_alias'];\n      }\n\n      return $id;\n    }\n\n    return null;\n  }",
            "startLine": 400,
            "endLine": 435,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getMenus": {
            "name": "getMenus",
            "summary": "Gets the user's menus list (text-value form)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($k_text = 'text', $k_value = 'value')\n  {\n    $c    = $this->pref->getClassCfg();\n    $pref =& $this->pref;\n    if (!($id_menus = self::getAppuiOptionId('menus'))) {\n      throw new \\Exception(\"Impossible to find the option for menus\");\n    }\n\n    if (!($menus = $this->pref->getAll($id_menus))) {\n      return [];\n      throw new \\Exception(\"Impossible to get the  menus items\");\n    }\n\n    return array_map(\n      function ($e) use ($c, $k_text, $k_value, $pref) {\n        return [\n          $k_text => $e[$c['arch']['user_options']['text']],\n          $k_value => $e[$c['arch']['user_options']['id']],\n          $c['arch']['user_options']['public'] => $e[$c['arch']['user_options']['public']],\n          $c['arch']['user_options']['id_user'] => $e[$c['arch']['user_options']['id_user']],\n          $c['arch']['user_options']['id_group'] => $e[$c['arch']['user_options']['id_group']],\n          'hasItems' => (bool)count($pref->getBits($e[$c['arch']['user_options']['id']]))\n          ];\n      },\n      $menus\n    );\n  }",
            "startLine": 445,
            "endLine": 471,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "k_text",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "text",
                    "default_name": "",
                    "description": "text  The key used for the text. Default: 'text'"
                },
                {
                    "name": "k_value",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "value",
                    "default_name": "",
                    "description": "value The key used for the value. Default 'value'"
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_menu, $submenu = NULL)\n  {\n    $res = $this->pref->getBits($id_menu, $submenu);\n    if (\\is_array($res) && !empty($res)) {\n      foreach ($res as $k => &$d) {\n        $d['numChildren'] = count($this->pref->getBits($id_menu, $d['id']));\n        $path = $tmp = [];\n        if (!is_null($d['id_option'])) {\n          $id_option = $d['id_option'];\n          while ($id_option) {\n            array_unshift($tmp, $id_option);\n            $o = $this->options->parent($id_option);\n            if ($o['code'] === 'access') {\n              $path = $tmp;\n              break;\n            }\n            else {\n              $id_option = $o['id'];\n            }\n          }\n        }\n\n        $d['path'] = $path;\n        if (!empty($d['path'][0])) {\n          \/\/array_shift($d['path']);\n        }\n  \n        if (!$d['numChildren']\n            && isset($d['id_option'])\n            && ($tmp = $this->perm->toPath($d['id_option']))\n        ) {\n          $d['link'] = $tmp;\n        }\n      }\n  \n      unset($d);\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 474,
            "endLine": 514,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_menu",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "submenu",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "clone": {
            "name": "clone",
            "summary": "Clones a menu",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $name)\n  {\n    if (Str::isUid($id) && ($id_menu = $this->add(['text' => $name]))) {\n      if (($bits = $this->pref->getFullBits($id)) && !$this->_clone($id_menu, $bits)) {\n        return null;\n      }\n\n      return $id_menu;\n    }\n\n    return null;\n  }",
            "startLine": 524,
            "endLine": 535,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The menu's ID to clone"
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new menu's name"
                }
            ]
        },
        "copy": {
            "name": "copy",
            "summary": "Copies a menu into another one.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_menu, string $id_menu_to, array $cfg)\n  {\n    if (Str::isUid($id_menu)\n        && Str::isUid($id_menu_to)\n        && ($bits = $this->pref->getFullBits($id_menu))\n        && ($id = $this->add($id_menu_to, $cfg))\n        && $this->_clone($id_menu_to, $bits, $id)\n    ) {\n      return $id;\n    }\n\n    return null;\n  }",
            "startLine": 548,
            "endLine": 560,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_menu",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The menu's ID to copy"
                },
                {
                    "name": "id_menu_to",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "menu_to The target menu's ID"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "copyTo": {
            "name": "copyTo",
            "summary": "Clones a section\/link to an other menu.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_bit, string $id_menu_to, array $cfg)\n  {\n    if (Str::isUid($id_bit)\n        && Str::isUid($id_menu_to)\n        && ($bit = $this->pref->getBit($id_bit))\n        && ($id_menu = $this->getIdMenu($id_bit))\n    ) {\n      $bit  = array_merge(\n        $bit, $cfg, [\n        'id_parent' => null,\n        'num' => $this->pref->getMaxBitNum($id_menu_to, null, true)\n        ]\n      );\n      $bits = $this->pref->getFullBits($id_menu, $id_bit, true);\n      if ($id = $this->add($id_menu_to, $bit)) {\n        if (!empty($bits) && !$this->_clone($id_menu_to, $bits, $id)) {\n          return null;\n        }\n\n        return $id;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 573,
            "endLine": 597,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_bit",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "bit     The bit's ID to clone"
                },
                {
                    "name": "id_menu_to",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "menu_to The menu's ID to clone"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "of bit"
                }
            ]
        },
        "fixOrder": {
            "name": "fixOrder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, $id_parent = NULL, $deep = false)\n  {\n    if (Str::isUid($id)\n        && (empty($id_parent) || Str::isUid($id_parent))\n    ) {\n      $fixed = $this->pref->fixBitsOrder($id, $id_parent, $deep);\n      if ($fixed) {\n        $this->deleteCache($id);\n      }\n\n      return (int)$fixed;\n    }\n\n    return null;\n  }",
            "startLine": 600,
            "endLine": 614,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "order": {
            "name": "order",
            "summary": "Orders a section\/link.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, int $pos)\n  {\n    if (Str::isUid($id)\n        && $this->pref->orderBit($id, $pos)\n    ) {\n      $this->deleteCache($this->getIdMenu($id));\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 624,
            "endLine": 634,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The section\/link's ID"
                },
                {
                    "name": "pos",
                    "position": 1,
                    "type": "int",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new position."
                }
            ]
        },
        "move": {
            "name": "move",
            "summary": "Moves a section\/link inside to another one.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $id_parent = NULL)\n  {\n    if ($this->pref->moveBit($id, $id_parent)) {\n      $this->deleteCache($this->getIdMenu($id));\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 644,
            "endLine": 652,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The section\/link's ID."
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "parent The parent's ID."
                }
            ]
        },
        "getOptionsMenus": {
            "name": "getOptionsMenus",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    \/\/$items = $this->options->fullOptions('menus', self::$option_root_id);\n    $items = self::getAppuiOption('menu');\n    $res   = [];\n    foreach ($items as $it){\n      $res[] = [\n        'text' => $it['text'],\n        'value' => $it['id']\n      ];\n    }\n\n    return $res;\n  }",
            "startLine": 655,
            "endLine": 668,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getByCode": {
            "name": "getByCode",
            "summary": "Gets the ID of a menu by its code and relative user's access",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $code, bool $pub = true, $idUser = NULL, $idGroup = NULL)\n  {\n    $prefCfg = $this->pref->getClassCfg();\n    $pFields = $prefCfg['arch']['user_options'];\n    $where = [\n      'conditions' => [[\n        'field' => $pFields['id_option'],\n        'value' => $this->fromPath('menus')\n      ], [\n        'field' => 'JSON_UNQUOTE(JSON_EXTRACT(' . $pFields['cfg'] . ', \"$.code\"))',\n        'value' => $code\n      ], [\n        'field' => $pFields['public'],\n        'value' => (int)$pub\n      ]]\n    ];\n    if (!empty($idUser)) {\n      $where['conditions'][] = [\n        'field' => $pFields['id_user'],\n        'value' => $idUser\n      ];\n    }\n    if (!empty($idGroup)) {\n      $where['conditions'][] = [\n        'field' => $pFields['id_group'],\n        'value' => $idGroup\n      ];\n    }\n    return $this->pref->getDb()->selectOne([\n      'table' => $prefCfg['table'],\n      'fields' => [$pFields['id']],\n      'where' => $where\n    ]);\n  }",
            "startLine": 679,
            "endLine": 712,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The code of the menu"
                },
                {
                    "name": "pub",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "The value of the 'public' field"
                },
                {
                    "name": "idUser",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "ser The value of the 'id_user' field"
                },
                {
                    "name": "idGroup",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "roup The value of the 'id_group' field"
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 64,
            "endLine": 71,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 193,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTreeRef": {
            "name": "getOptionsTreeRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTreeRef(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 218,
            "endLine": 221,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsRef": {
            "name": "getOptionsRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptionsRef(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 230,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 236,
            "endLine": 239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValueRef": {
            "name": "getOptionsTextValueRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptionsRef($id) : [];\n  }",
            "startLine": 242,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 254,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 260,
            "endLine": 272,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 275,
            "endLine": 278,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 281,
            "endLine": 284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 287,
            "endLine": 290,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Menu",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 293,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "id_public_root": null,
        "public_root": "permissions|access",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}