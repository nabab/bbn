{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Grid",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/Appui\/Grid.php",
    "startLine": 24,
    "endLine": 494,
    "contentConstructor": {
        "file": "bbn\\Appui\\Grid",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Grid constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, array $post, $cfg)\n  {\n    \/\/ We inherit db and cacher properties\n    parent::__construct($db);\n    \/\/ Simple configuration using just a string with the table\n    if ( \\is_string($cfg) ){\n      $cfg = [\n        'tables' => [$cfg]\n      ];\n    }\n    if ( \\is_array($cfg) && $this->db->check() ){\n      \/\/ Preparing a classic config array for DB\n      $db_cfg = [\n        'tables' => $cfg['tables'] ?? ($cfg['table'] ? (\\is_string($cfg['table']) ? [$cfg['table']] : $cfg['table']) : null),\n        'fields' => !empty($cfg['fields']) ? (array)$cfg['fields'] : [],\n        'ofields' => !empty($cfg['ofields']) ? (array)$cfg['ofields'] : [],\n        'order' => $post['order'] ?? ($cfg['order'] ?? []),\n        'join' => $cfg['join'] ?? ($post['join'] ?? []),\n        'group_by' => $cfg['group_by'] ?? [],\n        'having' => !empty($post['having']) ? $post['having'] : [],\n        'limit' => $post['limit'] ?? ($cfg['limit'] ?? 20),\n        'start' => $post['start'] ?? 0,\n        'where' => !empty($post['filters']) ? $post['filters'] : []\n      ];\n      if ( !empty($post['excel']) ){\n        $this->excel = $post['excel'];\n        if ( !empty($post['fields']) ){\n          $fields = $db_cfg['fields'];\n          $link = [];\n          $db_cfg['fields'] = [];\n          foreach ( $fields as $a => $f ){\n            $field = is_string($a) ? $a : $this->db->colSimpleName($f);\n            if ( in_array($field, $post['fields'], true) ){\n              $link[$field] = $a;\n            }\n          }\n          foreach ( $post['fields'] as $f ){\n            if ( isset($link[$f], $fields[$link[$f]]) ){\n              $db_cfg['fields'][$link[$f]] = $fields[$link[$f]];\n            }\n          }\n        }\n        if (\n          isset($cfg['map'], $cfg['map']['callable']) &&\n          is_callable($cfg['map']['callable'])\n        ){\n          $this->excel['map'] = $cfg['map'];\n        }\n      }\n      \/\/ Adding all the fields if fields is empty\n      if ( empty($db_cfg['tables']) ){\n        $this->log(['NO TABLES!', $db_cfg]);\n      }\n      else if ( empty($db_cfg['fields']) ){\n        foreach ( array_unique(array_values($db_cfg['tables'])) as $t ){\n          foreach ( $this->db->getFieldsList($t) as $f ){\n            if ( !\\in_array($f, $db_cfg['fields'], true) ){\n              $db_cfg['fields'][] = $f;\n            }\n          }\n        }\n      }\n      \/\/ For the server config both properties where and filters are accepted (backward compatibility)\n      if ( empty($cfg['filters']) && !empty($cfg['where']) ){\n        $cfg['filters'] = $cfg['where'];\n      }\n      \/\/ The (pre)filters set server-side are mandatory and are added to the client-side filters if any\n      if ( !empty($cfg['filters']) ){\n        $prefilters = isset($cfg['filters']['conditions']) ? $cfg['filters'] : [\n          'logic' => 'AND',\n          'conditions' => $cfg['filters']\n        ];\n        \/\/ They either become the where or are added as a new root condition\n        $db_cfg['where'] = empty($db_cfg['where']) ? $prefilters : [\n          'logic' => 'AND',\n          'conditions' => [\n            $db_cfg['where'],\n            $prefilters\n          ]\n        ];\n      }\n      \/\/ The (pre)having set server-side are mandatory and are added to the client-side having if any\n      if ( !empty($cfg['having']) ){\n        $prehaving = isset($cfg['having']['conditions']) ? $cfg['having'] : [\n          'logic' => 'AND',\n          'conditions' => $cfg['having']\n        ];\n        \/\/ They either become the where or are added as a new root condition\n        $db_cfg['having'] = empty($db_cfg['having']) ? $prehaving : [\n          'logic' => 'AND',\n          'conditions' => [\n            $db_cfg['having'],\n            $prehaving\n          ]\n        ];\n      }\n      $this->cfg = $this->db->processCfg($db_cfg);\n      $this->original_cfg = $db_cfg;\n      if ( !empty($cfg['query']) ){\n        $this->query = $cfg['query'];\n      }\n      \/\/ A query must exist, custom or generated\n      if ( $this->check() ){\n        if ( array_key_exists('observer', $cfg) && isset($cfg['observer']['request']) ){\n          $this->observer = $cfg['observer'];\n        }\n        if ( X::hasProp($cfg, 'count') ){\n          $this->count = $cfg['count'];\n        }\n        else{\n          $db_cfg['count'] = true;\n          $this->count_cfg = $this->db->processCfg($db_cfg);\n          \/\/die(X::dump($this->count_cfg));\n        }\n        if ( !empty($cfg['num']) ){\n          $this->num = $cfg['num'];\n        }\n      }\n    }\n    $this->cache_uid = md5(serialize([\n      'tables' => $this->cfg['tables'],\n      'fields' => $this->cfg['fields'],\n      'order' => $this->cfg['order'],\n      'values' => $this->cfg['values'],\n      'join' => $this->cfg['join'],\n      'group_by' => $this->cfg['group_by'],\n      'having' => $this->cfg['having'],\n      'limit' => $this->cfg['limit'],\n      'start' => $this->cfg['start'],\n      'filters' => $this->cfg['filters']\n    ]));\n    $this->chrono = new bbn\\Util\\Timer();\n  }",
            "startLine": 91,
            "endLine": 223,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n\t\t$this->cacher = bbn\\Cache::getEngine();\n\t\t$this->_cache_prefix = str_replace('\\\\', '\/', \\get_class($this)).'\/';\n  }",
                "startLine": 33,
                "endLine": 37,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database connection"
                },
                {
                    "name": "post",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Mandatory configuration sent by the table component (client side)"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Original table configuration (server side)"
                }
            ]
        },
        "getQuery": {
            "name": "getQuery",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ( $this->db->check() ){\n      if ( $this->query ){\n        return $this->query.PHP_EOL.\n          $this->db->getWhere($this->cfg).\n          $this->db->getGroupBy($this->cfg).\n          $this->db->getOrder($this->cfg).\n          $this->db->getLimit($this->cfg);\n      }\n      return $this->cfg['sql'];\n    }\n    return null;\n  }",
            "startLine": 265,
            "endLine": 278,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getData": {
            "name": "getData",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ( $this->check() ){\n      $this->chrono->start();\n      if ( $this->query ){\n        $this->sql = $this->getQuery();\n        $q = $this->db->query($this->sql, \\array_map(function($v){\n          if (Str::isUid($v)) {\n            $v = hex2bin($v);\n          }\n          return $v;\n        }, $this->db->getQueryValues($this->cfg)));\n        $rows = $q->getRows();\n      }\n      else {\n        $rows = $this->db->rselectAll($this->cfg);\n        $this->sql = $this->cfg['sql'];\n      }\n      $this->query_time = $this->chrono->measure();\n      $this->chrono->stop();\n      return $rows;\n    }\n    return null;\n  }",
            "startLine": 280,
            "endLine": 303,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getTotal": {
            "name": "getTotal",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($force = false)\n  {\n    if ( $this->num && !$force ){\n      return $this->num;\n    }\n    \/*\n    if ( !$force && ($cache = $this->getCache()) ){\n      $this->count_time = $cache['time'];\n      $this->num = $cache['num'];\n      return $this->num;\n    }\n    *\/\n    if ( $this->count ){\n      $this->chrono->start();\n      if ( is_string($this->count) ){\n        $this->num = $this->db->getOne(\n          $this->count.PHP_EOL.\n            $this->db->getWhere($this->cfg).\n            $this->db->getGroupBy($this->cfg),\n            \\array_map(function($v){\n              if (Str::isUid($v)) {\n                $v = hex2bin($v);\n              }\n              return $v;\n            }, $this->db->getQueryValues($this->cfg))\n        );\n      }\n      else if ( is_array($this->count) ){\n        $cfg = $this->count;\n        $cfg['where'] = $this->cfg['where'];\n        $this->num = $this->db->selectOne($cfg);\n      }\n      $this->count_time = $this->chrono->measure();\n      $this->chrono->stop();\n      $this->setCache([\n        'num' => $this->num,\n        'time' => $this->count_time\n      ]);\n      return $this->num ?: 0;\n    }\n    else if ( $this->count_cfg ){\n      \/\/X::log($this->count_cfg, 'mirko');\n      \/\/die(X::dump($this->count_cfg));\n      $this->chrono->start();\n      $this->num = $this->db->selectOne($this->count_cfg);\n      $this->count_time = $this->chrono->measure();\n      $this->chrono->stop();\n      $this->setCache([\n        'num' => $this->num,\n        'time' => $this->count_time\n      ]);\n      return $this->num ?: 0;\n    }\n    return null;\n  }",
            "startLine": 305,
            "endLine": 359,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "force",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "getObserver": {
            "name": "getObserver",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ( $this->observer ){\n      $obs = new bbn\\Appui\\Observer($this->db);\n      if ( $id_obs = $obs->add($this->observer) ){\n        return [\n          'id' => $id_obs,\n          'value' => $obs->getResult($id_obs)\n        ];\n      }\n      return null;\n    }\n  }",
            "startLine": 361,
            "endLine": 373,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getDatatable": {
            "name": "getDatatable",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($force = false)\n  {\n    $r = [\n      'data' => [],\n      'total' => 0,\n      'success' => true,\n      'error' => false,\n      'time' => []\n    ];\n    if ( $this->check() ){\n      if ($total = $this->getTotal($force)) {\n        if ( $this->cfg['start'] ){\n          $r['start'] = $this->cfg['start'];\n        }\n        if ( $this->cfg['limit'] ){\n          $r['limit'] = $this->cfg['limit'];\n        }\n        if ( $this->observer ){\n          $r['observer'] = $this->getObserver();\n        }\n        $r['total'] = $total;\n        $r['data'] = $this->getData();\n        $r['time'] = [\n          'query' => $this->query_time,\n          'count' => $this->count_time\n        ];\n      }\n      \/\/unset($this->count_cfg['where']['conditions'][0]['time']);\n      \/\/$this->count_cfg['where']['conditions'][0]['value'] = hex2bin($this->count_cfg['where']['conditions'][0]['value']);\n      \/\/die(X::dump($this->db->selectOne($this->count_cfg), $this->db->last(), $this->count_cfg, $this->num, $this->db->last_params));\n      if (!defined('BBN_IS_PROD') || (($usr = bbn\\User::getInstance()) && $usr->isAdmin())) {\n        $r['query'] = $this->db->last();\n        $r['queryValues'] = array_map(function($a){\n          if (Str::isBuid($a)) {\n            return bin2hex($a);\n          }\n\n          return $a;\n        }, $this->db->getLastValues());\n      }\n      \/\/die(var_dump($r['query']));\n    }\n    if ( !$this->db->check() ){\n      $r['success'] = false;\n      $r['error'] = $this->db->last_error;\n    }\n    return $r;\n  }",
            "startLine": 375,
            "endLine": 422,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "force",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "toExcel": {
            "name": "toExcel",
            "summary": "Exports the grid's data or the given data to excel",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $data = [])\n  {\n    $path = X::makeStoragePath(\\bbn\\Mvc::getUserTmpPath()) . 'export_' . date('d-m-Y_H-i-s') . '.xlsx';\n    $cfg = $this->getExcel();\n    $dates = array_values(array_filter($cfg['fields'], function($c){\n      return empty($c['hidden']) && (($c['type'] === 'date') || ($c['type'] === 'datetime'));\n    }));\n    $data = array_map(function($row) use($cfg, $dates){\n      foreach ( $row as $i => $r ){\n        if ( \\is_string($r) ){\n          $row[$i] = strpos($r, '=') === 0 ? ' '.$r : $r;\n        }\n        if ( (($k = X::find($dates, ['field' => $i])) !== null ) ){\n          if ( !empty($dates[$k]['format']) && !empty($r) ){\n            $r = date($dates[$k]['format'], strtotime($r));\n          }\n          $row[$i] = \\PhpOffice\\PhpSpreadsheet\\Shared\\Date::PHPToExcel($r);\n        }\n        if (\n          (($idx = X::find($cfg['fields'], ['field' => $i])) === null ) ||\n          (bool)$cfg['fields'][$idx]['hidden']\n        ){\n          unset($row[$i]);\n        }\n      }\n      return $row;\n    }, $data ?: ($this->getData() ?: []));\n    $cfg['fields'] = array_values(array_filter($cfg['fields'], function($c){\n      return empty($c['hidden']);\n    }));\n    if ( X::toExcel($data, $path, true, $cfg) ){\n      return ['file' => $path];\n    }\n    return ['error' => X::_('Error')];\n  }",
            "startLine": 429,
            "endLine": 463,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getExcel": {
            "name": "getExcel",
            "summary": "Gets the excel property",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n   return $this->excel;\n  }",
            "startLine": 469,
            "endLine": 472,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db->check() && ($this->query || $this->cfg['sql']);\n  }",
            "startLine": 474,
            "endLine": 477,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 65,
                "endLine": 72,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getStart": {
            "name": "getStart",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->cfg['start'];\n  }",
            "startLine": 479,
            "endLine": 482,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getLimit": {
            "name": "getLimit",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->cfg['limit'];\n  }",
            "startLine": 484,
            "endLine": 487,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getCfg": {
            "name": "getCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Grid",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->cfg;\n  }",
            "startLine": 489,
            "endLine": 492,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "cacheDeleteAll": {
            "name": "cacheDeleteAll",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\treturn $this;\n  }",
            "startLine": 50,
            "endLine": 53,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "cacheDeleteAll",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\treturn $this;\n  }",
                "startLine": 50,
                "endLine": 53,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "cacheDelete": {
            "name": "cacheDelete",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($uid)\n  {\n\t\treturn $this;\n  }",
            "startLine": 55,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "cacheDelete",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($uid)\n  {\n\t\treturn $this;\n  }",
                "startLine": 55,
                "endLine": 58,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "uid",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "cacheGet": {
            "name": "cacheGet",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($uid, $method = '', $ttl = 0)\n  {\n  }",
            "startLine": 60,
            "endLine": 62,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "cacheGet",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($uid, $method = '', $ttl = 0)\n  {\n  }",
                "startLine": 60,
                "endLine": 62,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 3,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "uid",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "method",
                        "position": 1,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "ttl",
                        "position": 2,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": 0,
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "cacheSet": {
            "name": "cacheSet",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($uid, $method = '', $data = NULL, $ttl = 0)\n  {\n\t\treturn $this;\n  }",
            "startLine": 64,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "cacheSet",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($uid, $method = '', $data = NULL, $ttl = 0)\n  {\n\t\treturn $this;\n  }",
                "startLine": 64,
                "endLine": 67,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 4,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "uid",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "method",
                        "position": 1,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "data",
                        "position": 2,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    },
                    {
                        "name": "ttl",
                        "position": 3,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": 0,
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "cacheGetSet": {
            "name": "cacheGetSet",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(callable $fn, $uid, $method = '', $ttl = 0)\n  {\n\t\treturn $this->cacher->getSet($fn, $cn, $ttl);\n  }",
            "startLine": 69,
            "endLine": 72,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "cacheGetSet",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(callable $fn, $uid, $method = '', $ttl = 0)\n  {\n\t\treturn $this->cacher->getSet($fn, $cn, $ttl);\n  }",
                "startLine": 69,
                "endLine": 72,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 4,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "fn",
                        "position": 0,
                        "type": "callable",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "uid",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "method",
                        "position": 2,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "ttl",
                        "position": 3,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": 0,
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "uid",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "cacheHas": {
            "name": "cacheHas",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Cache",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($uid, $method = '', $ttl = 0)\n  {\n    return $this->cacheGet($uid, $method, $ttl) ? true : false;\n  }",
            "startLine": 74,
            "endLine": 77,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "cacheHas",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Cache",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($uid, $method = '', $ttl = 0)\n  {\n    return $this->cacheGet($uid, $method, $ttl) ? true : false;\n  }",
                "startLine": 74,
                "endLine": 77,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 3,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "uid",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "method",
                        "position": 1,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "ttl",
                        "position": 2,
                        "type": "",
                        "required": false,
                        "has_default": true,
                        "default": 0,
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "method",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "ttl",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 51,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 51,
                "endLine": 58,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 86,
            "endLine": 89,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 86,
                "endLine": 89,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 92,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 92,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 98,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 98,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 115,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 115,
                "endLine": 126,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 132,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 132,
                "endLine": 135,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 142,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 142,
                "endLine": 145,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "numMethods": 25,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Cache",
    "isSubclassOf": false,
    "defaultProperties": {
        "cfg": null,
        "original_cfg": null,
        "count_cfg": null,
        "observer": false,
        "query": null,
        "count": null,
        "num": 0,
        "cache_uid": null,
        "count_time": 0,
        "query_time": 0,
        "chrono": null,
        "excel": [],
        "db": null,
        "_cache_prefix": null,
        "cacher": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Grid",
    "summary": "",
    "description": "",
    "description_parts": []
}