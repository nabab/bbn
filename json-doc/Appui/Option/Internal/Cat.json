{
    "doc": {
        "description": "Trait Cat provides methods to manage categories of options.",
        "tags": []
    },
    "name": "bbn\\Appui\\Option\\Internal\\Cat",
    "namespace": true,
    "realName": "Cat",
    "realNamespace": "bbn\\Appui\\Option\\Internal",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Appui\/Option\/Internal\/Cat.php",
    "startLine": 8,
    "endLine": 129,
    "numMethods": 4,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": [],
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui\\Option\\Internal",
    "shortName": "Cat",
    "contentConstructor": null,
    "methods": {
        "categories": {
            "name": "categories",
            "summary": "Returns a list of categories.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Internal\\Cat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Internal\/Cat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function categories(): array\n  {\n    return $this->options(false);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 16,
            "endLine": 19,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "categories",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns a list of categories.\n",
                "params": [],
                "return": "The list of categories."
            },
            "comments": "  \/**\n   * Returns a list of categories.\n   *\n   * @return array The list of categories.\n   *\/"
        },
        "textValueCategories": {
            "name": "textValueCategories",
            "summary": "Returns the list of categories as a text\/value array.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Internal\\Cat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Internal\/Cat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function textValueCategories(): ?array\n  {\n    \/\/ Check if categories exist and retrieve them in the form of an indexed array on their 'id'.\n    if ($rs = $this->options(false)) {\n      \/\/ Initialize an empty array to store the list of categories as a text\/value array.\n      $res = [];\n\n      \/\/ Iterate over each category and create a corresponding text\/value entry.\n      foreach ($rs as $val => $text) {\n        $res[] = ['text' => $text, 'value' => $val];\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 27,
            "endLine": 43,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "textValueCategories",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the list of categories as a text\/value array.\n",
                "params": [],
                "return": "The list of categories as a text\/value array, or null if no categories are found."
            },
            "comments": "  \/**\n   * Returns the list of categories as a text\/value array.\n   *\n   * @return null|array The list of categories as a text\/value array, or null if no categories are found.\n   *\/"
        },
        "fullCategories": {
            "name": "fullCategories",
            "summary": "Returns all characteristics of the options in a given category.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Internal\\Cat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Internal\/Cat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function fullCategories(): array\n  {\n    \/\/ Retrieve the full options and iterate over them to modify their default values.\n    if ($opts = $this->fullOptions(false)) {\n      foreach ($opts as $k => $o) {\n        \/\/ If a default value exists, replace it with its corresponding text representation.\n        if (!empty($o['default'])) {\n          $opts[$k]['default'] = $this->text($o['default']);\n        }\n      }\n    }\n\n    return $opts ?? [];\n  }",
            "parent": false,
            "trait": false,
            "startLine": 51,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "fullCategories",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns all characteristics of the options in a given category.\n",
                "params": [],
                "return": "An array of characteristics for each option in the category, indexed by their 'id'."
            },
            "comments": "  \/**\n   * Returns all characteristics of the options in a given category.\n   *\n   * @return array An array of characteristics for each option in the category, indexed by their 'id'.\n   *\/"
        },
        "jsCategories": {
            "name": "jsCategories",
            "summary": "Returns all characteristics of the options in a given category as an indexed array on their 'id'.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Internal\\Cat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Internal\/Cat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function jsCategories($id = null)\n  {\n    \/\/ If no ID is provided, use the default code to determine it.\n    if (!$id) {\n      $id = $this->fromCode('options', $this->default);\n    }\n\n    \/\/ Check the cache for an existing result before calculating it.\n    if ($tmp = $this->getCache($id, __FUNCTION__)) {\n      return $tmp;\n    }\n\n    \/\/ Initialize a response array to store category information.\n    $res = [\n      'categories' => []\n    ];\n\n    \/\/ Retrieve the full options for the given ID (or all categories if no ID is provided).\n    if ($cats = $this->fullOptions($id ?: false)) {\n      foreach ($cats as $cat) {\n        \/\/ If a 'tekname' exists, retrieve additional information and create text\/value entries.\n        if (!empty($cat['tekname'])\n          || (empty($cat[$this->fields['text']]) && !empty($cat['alias']['tekname']))\n        ) {\n          $additional = [];\n          \/\/ Retrieve the schema for the current category's ID.\n          if (($schema = $this->getSchema($cat[$this->fields['id']]))\n            || (empty($cat[$this->fields['text']])\n              && !empty($cat[$this->fields['id_alias']])\n              && ($schema = $this->getSchema($cat[$this->fields['id_alias']])))\n          ) {\n            \/\/ Add fields from the schema to the list of additional information.\n            array_push($additional, ...array_map(function ($a) {\n              return $a['field'];\n            }, $schema));\n          }\n\n          \/\/ Create text\/value entries for the current category and its options.\n          if (empty($cat[$this->fields['text']])\n            && !empty($cat[$this->fields['id_alias']])\n            && !empty($cat['alias']['tekname'])\n          ) {\n            $res[$cat['alias']['tekname']] = $this->textValueOptions($cat[$this->fields['id_alias']], 'text', 'value', ...$additional);\n            $res['categories'][$cat[$this->fields['id']]] = $cat['alias']['tekname'];\n          }\n          else {\n            $res[$cat['tekname']] = $this->textValueOptions($cat[$this->fields['id']], 'text', 'value', ...$additional);\n            $res['categories'][$cat[$this->fields['id']]] = $cat['tekname'];\n          }\n        }\n      }\n    }\n\n    \/\/ Store the result in the cache and return it.\n    $this->setCache($id, __FUNCTION__, $res);\n    return $res;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 72,
            "endLine": 128,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "jsCategories",
            "returns": [],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The ID of the category."
                }
            ],
            "doc": {
                "description": "Returns all characteristics of the options in a given category as an indexed array on their 'id'.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$id",
                        "description": "The ID of the category."
                    }
                ],
                "return": "An array of characteristics for each option in the category, indexed by their 'id'."
            },
            "comments": "  \/**\n   * Returns all characteristics of the options in a given category as an indexed array on their 'id'.\n   *\n   * @param string|null $id The ID of the category.\n   * @return array An array of characteristics for each option in the category, indexed by their 'id'.\n   *\/"
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "uses": [],
    "dummyComments": [
        "\/**\n * Trait Cat provides methods to manage categories of options.\n *\/",
        "\/**\n   * Returns a list of categories.\n   *\n   * @return array The list of categories.\n   *\/",
        "\/**\n   * Returns the list of categories as a text\/value array.\n   *\n   * @return null|array The list of categories as a text\/value array, or null if no categories are found.\n   *\/",
        "\/**\n   * Returns all characteristics of the options in a given category.\n   *\n   * @return array An array of characteristics for each option in the category, indexed by their 'id'.\n   *\/",
        "\/**\n   * Returns all characteristics of the options in a given category as an indexed array on their 'id'.\n   *\n   * @param string|null $id The ID of the category.\n   * @return array An array of characteristics for each option in the category, indexed by their 'id'.\n   *\/"
    ],
    "summary": "Trait Cat provides methods to manage categories of options.",
    "description": "",
    "description_parts": []
}