{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Option\\Template",
    "namespace": true,
    "realName": "Template",
    "realNamespace": "bbn\\Appui\\Option",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Appui\/Option\/Template.php",
    "startLine": 8,
    "endLine": 403,
    "numMethods": 21,
    "numProperties": 11,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": true,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "templateIds": [],
        "magicTemplateId": null,
        "magicOptionsTemplateId": null,
        "magicPermissionsTemplateId": null,
        "magicPluginTemplateId": null,
        "magicSubpluginTemplateId": null,
        "magicSubOptionsTemplateId": null,
        "magicSubPermissionsTemplateId": null,
        "magicTemplateTemplateId": null,
        "magicAppuiTemplateId": null,
        "magicPluginsTemplateId": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui\\Option",
    "shortName": "Template",
    "contentConstructor": null,
    "methods": {
        "getTemplateId": {
            "name": "getTemplateId",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getTemplateId($code): ?string\n  {\n    if ($this->check()) {\n      if (!isset($this->templateIds[$code])) {\n        $this->templateIds[$code] = $this->fromCode($code, $this->getMagicTemplateId());\n      }\n\n      if (!isset($this->templateIds[$code])) {\n        foreach ($this->getAliasItems($this->getMagicTemplateTemplateId()) as $it) {\n          if ($this->templateIds[$code] = $this->fromCode($code, $it['id'])) {\n            break;\n          }\n        }\n      }\n\n      return $this->templateIds[$code] ?? null;\n    }\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 33,
            "endLine": 51,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getTemplateId",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMagicTemplateId": {
            "name": "getMagicTemplateId",
            "summary": "Returns the ID of the root templates",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicTemplateId(): string\n  {\n    if (!$this->magicTemplateId && $this->check()) {\n      $this->magicTemplateId = $this->fromCode('templates', $this->getRoot());\n    }\n\n    return $this->magicTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 58,
            "endLine": 65,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicTemplateId",
            "returns": [
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the root templates\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the root templates\n   * @return string\n   *\/"
        },
        "getPermissionsTemplateId": {
            "name": "getPermissionsTemplateId",
            "summary": "Returns the ID of the 'plugin > permissions' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getPermissionsTemplateId()\n  {\n    if (!$this->magicPermissionsTemplateId && $this->check()) {\n      $this->magicPermissionsTemplateId = $this->fromCode('permissions', $this->getMagicPluginTemplateId());\n    }\n\n    return $this->magicPermissionsTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 72,
            "endLine": 79,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getPermissionsTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'plugin > permissions' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'plugin > permissions' template\n   * @return string\n   *\/"
        },
        "getMagicOptionsTemplateId": {
            "name": "getMagicOptionsTemplateId",
            "summary": "Returns the ID of the 'plugin > options' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicOptionsTemplateId()\n  {\n    if (!$this->magicOptionsTemplateId && $this->check()) {\n      $this->magicOptionsTemplateId = $this->fromCode('options', $this->getMagicPluginTemplateId());\n    }\n\n    return $this->magicOptionsTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 86,
            "endLine": 93,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicOptionsTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'plugin > options' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'plugin > options' template\n   * @return string\n   *\/"
        },
        "getMagicPluginTemplateId": {
            "name": "getMagicPluginTemplateId",
            "summary": "Returns the ID of the 'plugin' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicPluginTemplateId()\n  {\n    if (!$this->magicPluginTemplateId && $this->check()) {\n      $this->magicPluginTemplateId = $this->fromCode('plugin', 'templates', $this->getRoot());\n    }\n\n    return $this->magicPluginTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 100,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicPluginTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'plugin' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'plugin' template\n   * @return string\n   *\/"
        },
        "getMagicSubpluginTemplateId": {
            "name": "getMagicSubpluginTemplateId",
            "summary": "Returns the ID of the 'subplugin' template i.e. plugins in plugin",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicSubpluginTemplateId()\n  {\n    if (!$this->magicSubpluginTemplateId && $this->check()) {\n      $this->magicSubpluginTemplateId = $this->fromCode('subplugin', 'templates', $this->getRoot());\n    }\n\n    return $this->magicSubpluginTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 114,
            "endLine": 121,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicSubpluginTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'subplugin' template i.e. plugins in plugin\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'subplugin' template i.e. plugins in plugin\n   * @return string\n   *\/"
        },
        "getMagicSubOptionsTemplateId": {
            "name": "getMagicSubOptionsTemplateId",
            "summary": "Returns the ID of the options template in the 'subplugin' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicSubOptionsTemplateId()\n  {\n    if (!$this->magicSubpluginTemplateId && $this->check()) {\n      $this->magicSubpluginTemplateId = $this->fromCode('options', $this->getMagicSubpluginTemplateId());\n    }\n\n    return $this->magicSubOptionsTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 128,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicSubOptionsTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the options template in the 'subplugin' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the options template in the 'subplugin' template\n   * @return string\n   *\/"
        },
        "getMagicSubPermissionsTemplateId": {
            "name": "getMagicSubPermissionsTemplateId",
            "summary": "Returns the ID of the options template in the 'subplugin' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicSubPermissionsTemplateId()\n  {\n    if (!$this->magicSubpluginTemplateId && $this->check()) {\n      $this->magicSubpluginTemplateId = $this->fromCode('permissions', $this->getMagicSubpluginTemplateId());\n    }\n\n    return $this->magicSubPermissionsTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 142,
            "endLine": 149,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicSubPermissionsTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the options template in the 'subplugin' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the options template in the 'subplugin' template\n   * @return string\n   *\/"
        },
        "getMagicTemplateTemplateId": {
            "name": "getMagicTemplateTemplateId",
            "summary": "Returns the ID of the 'plugin > template' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicTemplateTemplateId()\n  {\n    if (!$this->magicTemplateTemplateId && $this->check()) {\n      $this->magicTemplateTemplateId = $this->fromCode('templates', $this->getMagicPluginTemplateId());\n    }\n\n    return $this->magicTemplateTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 156,
            "endLine": 163,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicTemplateTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'plugin > template' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'plugin > template' template\n   * @return string\n   *\/"
        },
        "getMagicPluginsTemplateId": {
            "name": "getMagicPluginsTemplateId",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicPluginsTemplateId()\n  {\n    if (!$this->magicPluginsTemplateId && $this->check()) {\n      $this->magicPluginsTemplateId = $this->fromCode('plugins', $this->getMagicPluginTemplateId());\n    }\n\n    return $this->magicPluginsTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 166,
            "endLine": 173,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicPluginsTemplateId",
            "returns": [],
            "arguments": []
        },
        "getMagicAppuiTemplateId": {
            "name": "getMagicAppuiTemplateId",
            "summary": "Returns the ID of the 'plugin > plugins > appui' template",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMagicAppuiTemplateId()\n  {\n    if (!$this->magicAppuiTemplateId && $this->check()) {\n      $this->magicAppuiTemplateId = $this->fromCode('appui', $this->getMagicPluginsTemplateId());\n    }\n\n    return $this->magicAppuiTemplateId;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 180,
            "endLine": 187,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getMagicAppuiTemplateId",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Returns the ID of the 'plugin > plugins > appui' template\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the ID of the 'plugin > plugins > appui' template\n   * @return string\n   *\/"
        },
        "applyAllTemplates": {
            "name": "applyAllTemplates",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function applyAllTemplates(): ?int\n  {\n    $tot = 0;\n    $tids = $this->items($this->getMagicTemplateId());\n    foreach ($tids as $tid) {\n      foreach ($this->getAliasItems($tid) as $id) {\n        $tot += $this->applyTemplate($id);\n      }\n    }\n\n    $tids = $this->getAliasItems($this->getMagicTemplateTemplateId());\n    foreach ($tids as $tid) {\n      foreach ($this->getAliasItems($tid) as $id) {\n        $tot += $this->applyTemplate($id);\n      }\n    }\n\n    return $tot;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 190,
            "endLine": 208,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "applyAllTemplates",
            "returns": [
                null,
                "int"
            ],
            "arguments": []
        },
        "updateTemplate": {
            "name": "updateTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function updateTemplate(string $id = null): ?int\n  {\n    if ($this->exists($id)) {\n      $res = 0;\n      \/\/ All the options referring to this template\n      $all = $this->getAliases($id);\n      if (\n        !empty($all)\n        && ($export = $this->export($id, 'sfull'))\n        && !empty($export['items'])\n      ) {\n        foreach ($all as $a) {\n          foreach ($this->import($export['items'], $a[$this->fields['id']]) as $num) {\n            $res += $num;\n          }\n        }\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 215,
            "endLine": 237,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "updateTemplate",
            "returns": [
                null,
                "int"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$id"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string|null $id\n   * @return int|null\n   *\/"
        },
        "updateAllTemplates": {
            "name": "updateAllTemplates",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function updateAllTemplates(): ?int\n  {\n    if ($id = $this->fromCode('list', 'templates')) {\n      $res = 0;\n      foreach ($this->itemsRef($id) ?? [] as $a) {\n        $res += (int)$this->updateTemplate($a);\n      }\n\n      return $res;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 243,
            "endLine": 255,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "updateAllTemplates",
            "returns": [
                null,
                "int"
            ],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return int|null\n   *\/"
        },
        "applyTemplate": {
            "name": "applyTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function applyTemplate(string $id, bool $rootAlso = false): ?int\n  {\n    if (!($idAlias = $this->alias($id))) {\n      X::ddump($this->option($id));\n      throw new Exception(X::_(\"Impossible to apply a template, the option must be aliased\"));\n    }\n\n    $tot = 0;\n    $templateParent = $this->parent($idAlias);\n    if ($templateParent['id'] !== $this->getMagicTemplateId()) {\n      if (!$templateParent['id_alias']) {\n        throw new Exception(X::_(\"Impossible to apply a template, the template's parent must have an alias\"));\n      }\n\n      if ($templateParent['id_alias'] !== $this->getMagicTemplateTemplateId()) {\n        throw new Exception(X::_(\"Impossible to apply a template, the template's parent must be aliased with the templates' list\"));\n      }\n    }\n\n    if ($rootAlso) {\n      $opt = $this->option($id);\n      $topt = $this->option($idAlias);\n      unset($opt['id_alias'], $opt['alias']);\n      if ((json_encode($opt) !== json_encode($topt)) && $this->set($id, $topt)) {\n        $tot++;\n      }\n    }\n\n    foreach ($this->items($idAlias) as $tid) {\n      $tot += $this->applyChildTemplate($tid, $id);\n    }\n\n    return $tot;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 263,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "applyTemplate",
            "returns": [
                null,
                "int"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "rootAlso",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "lso"
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$root",
                        "description": "lso"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param string $id\n   * @param bool $rootAlso\n   * @return int|null\n   *\/"
        },
        "applyChildTemplate": {
            "name": "applyChildTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function applyChildTemplate($idSubtemplate, $target): int\n  {\n    $tot = 0;\n    $opt = $this->option($idSubtemplate);\n    $foptions = $this->fullOptions($target);\n    if (!($o = X::getRow($foptions, ['id_alias' => $idSubtemplate]))) {\n      if ($opt['code']) {\n        $o = X::getRow($foptions, ['code' => $opt['code']]);\n      } else {\n        $o = X::getRow($foptions, ['text' => $opt['text']]);\n      }\n\n      if ($o) {\n        $o['id_alias'] = $idSubtemplate;\n      }\n    }\n\n    $id = null;\n    $cfg = $this->getCfg($idSubtemplate);\n    if ($o) {\n      $id = $o['id'];\n      unset($opt['alias']);\n      $opt['id_alias'] = $idSubtemplate;\n      $ocfg = $this->getCfg($id);\n      $totDone = false;\n      if ((json_encode($opt) !== json_encode($o)) && $this->set($id, $opt)) {\n        $tot++;\n        $totDone = true;\n      }\n      if ((json_encode($cfg) !== json_encode($ocfg)) && $this->setCfg($id, $cfg) && !$totDone) {\n        $tot++;\n      }\n    } else {\n      $opt['id_parent'] = $target;\n      $opt['id_alias'] = $idSubtemplate;\n      if ($id = $this->add($opt)) {\n        $this->setCfg($id, $cfg);\n        $tot++;\n      }\n    }\n\n    foreach ($this->items($idSubtemplate) as $tid) {\n      $tot += $this->applyChildTemplate($tid, $id);\n    }\n\n    return $tot;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 298,
            "endLine": 344,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "applyChildTemplate",
            "returns": [
                "int"
            ],
            "arguments": [
                {
                    "name": "idSubtemplate",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "target",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "parentTemplate": {
            "name": "parentTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function parentTemplate(string $id): ?string\n  {\n    if ($this->exists($id) && ($idAlias = $this->getIdAlias($id))) {\n      $idTemplate = $this->getMagicTemplateId();\n      $idParent = $idAlias;\n      while ($idParent) {\n        $id = $idParent;\n        if ($idParent === $idTemplate) {\n          return $id;\n        } else if ($this->getIdAlias($idParent) === $idTemplate) {\n          return $id;\n        }\n        $idParent = $this->getIdParent($idParent);\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 346,
            "endLine": 363,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "parentTemplate",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "hasTemplate": {
            "name": "hasTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasTemplate(string $id): bool\n  {\n    return (bool)$this->parentTemplate($id);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 365,
            "endLine": 368,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "hasTemplate",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isInTemplate": {
            "name": "isInTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isInTemplate(string $id): bool\n  {\n    $templateId = $this->getMagicTemplateId();\n    while ($idParent = $this->getIdParent($id)) {\n      if ($idParent === $templateId) {\n        return true;\n      }\n      if ($this->getIdAlias($idParent) === $templateId) {\n        return true;\n      }\n\n      $id = $idParent;\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 371,
            "endLine": 386,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isInTemplate",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionTemplate": {
            "name": "getOptionTemplate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getOptionTemplate(string $id): ?array\n  {\n    if ($this->isInTemplate($id)) {\n      return $this->option($this->alias($id));\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 389,
            "endLine": 396,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getOptionTemplate",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isApp": {
            "name": "isApp",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Option\\Template",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Option\/Template.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isApp(string $id): bool\n  {\n    return $this->isPlugin($id) && ($this->getIdParent($id) === $this->root);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 399,
            "endLine": 402,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "isApp",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "templateIds": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": []
        },
        "magicTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicOptionsTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicPermissionsTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicPluginTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicSubpluginTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicSubOptionsTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicSubPermissionsTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicTemplateTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicAppuiTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        },
        "magicPluginsTemplateId": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Option\\Template"
            },
            "declaring_trait": "bbn\\Appui\\Option\\Template",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": false,
            "value": null
        }
    },
    "staticProperties": [],
    "constants": null,
    "uses": {
        "Exception": "Exception",
        "bbn\\X": "X"
    },
    "dummyComments": [
        "\/**\n   * Returns the ID of the root templates\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'plugin > permissions' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'plugin > options' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'plugin' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'subplugin' template i.e. plugins in plugin\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the options template in the 'subplugin' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the options template in the 'subplugin' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'plugin > template' template\n   * @return string\n   *\/",
        "\/**\n   * Returns the ID of the 'plugin > plugins > appui' template\n   * @return string\n   *\/",
        "\/**\n   * @param string|null $id\n   * @return int|null\n   *\/",
        "\/**\n   * @return int|null\n   *\/",
        "\/**\n   * @param string $id\n   * @param bool $rootAlso\n   * @return int|null\n   *\/"
    ],
    "summary": "",
    "description": "",
    "description_parts": []
}