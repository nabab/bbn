{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Mailing",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Mailing.php",
    "startLine": 15,
    "endLine": 868,
    "numMethods": 52,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "_cfgs": null,
        "_mailers": [],
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "_test_emails": null,
        "notes": null,
        "medias": null,
        "mailer": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Mailing",
    "contentConstructor": {
        "file": "bbn\\Appui\\Mailing",
        "returns": []
    },
    "methods": {
        "_get_cfg": {
            "name": "_get_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    return bbn\\X::getRow(\n      self::_get_cfgs() ?: [],\n      bbn\\Str::isUid($id) ? ['id' => $id] : ['code' => $id]\n    );\n  }",
            "startLine": 70,
            "endLine": 76,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, array $cfg = NULL)\n  {\n    if ($db->check()) {\n      self::optionalInit();\n      $this->getOptionsTextValue('text');\n      $this->db = $db;\n    }\n  }",
            "startLine": 97,
            "endLine": 104,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getTestEmails": {
            "name": "getTestEmails",
            "summary": "Returns an array of email addresses used for testing purposes.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!is_array($this->_test_emails)) {\n      $emails = $this->getOptionsTextValue('test');\n      $this->_test_emails = [];\n      foreach ($emails as $em) {\n        $this->_test_emails[] = $em['text'];\n      }\n    }\n    return $this->_test_emails;\n  }",
            "startLine": 111,
            "endLine": 121,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks if the object is in error state.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db && $this->db->check();\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "isSending": {
            "name": "isSending",
            "summary": "Checks if the given mailing is being sent.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = NULL)\n  {\n    $cond = ['state' => 'sending'];\n    if ($id) {\n      $cond['id'] = $id;\n    }\n    return $this->db->count('bbn_emailings', $cond) > 0;\n  }",
            "startLine": 139,
            "endLine": 146,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "isSuspended": {
            "name": "isSuspended",
            "summary": "Checks if the given mailing is in suspended state.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id = NULL)\n  {\n    $cond = ['state' => 'suspended'];\n    if ($id) {\n      $cond['id'] = $id;\n    }\n    return $this->db->count('bbn_emailings', $cond) > 0;\n  }",
            "startLine": 154,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getNextMailing": {
            "name": "getNextMailing",
            "summary": "Returns the next mailing to process if any.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check() \n        && ($id = $this->db->selectOne(\n          'bbn_emailings', 'id', [\n          ['state', 'LIKE', 'ready'],\n          ['sent', '<', Date('Y-m-d H:i:s')],\n          ['sent', 'isnotnull']\n          ], ['sent' => 'ASC']\n        ))\n    ) {\n      return $this->getMailing($id);\n    }\n    return null;\n  }",
            "startLine": 181,
            "endLine": 195,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "changeState": {
            "name": "changeState",
            "summary": "Changes the state of the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, string $new_state)\n  {\n    if ($this->check()) {\n      $cur = $this->db->selectOne(\"bbn_emailings\", 'state', ['id' => $id]);\n      if (($cur === 'sent') || ($cur === 'cancelled')) {\n        return false;\n      }\n      return (bool)$this->db->update(\"bbn_emailings\", ['state' => $new_state], ['id' => $id]);\n    }\n    return false;\n  }",
            "startLine": 204,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "new_state",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "state"
                }
            ]
        },
        "getMedias": {
            "name": "getMedias",
            "summary": "Returns the attachments for the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($this->check() && ($row = $this->db->select('bbn_emailings', ['id_note', 'version'], ['id' => $id]))) {\n      return $this->_note()->getMedias($row->id_note, $row->version);\n    }\n    return null;\n  }",
            "startLine": 222,
            "endLine": 228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMailing": {
            "name": "getMailing",
            "summary": "Returns all the information about the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($this->check()) {\n      $notes = $this->_note();\n      if (($row = $this->db->rselect('bbn_emailings', [], ['id' => $id])) \n          && ($note = $notes->get($row['id_note']))\n      ) {\n        return array_merge($note, $row);\n      }\n    }\n    return null;\n  }",
            "startLine": 236,
            "endLine": 247,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "process": {
            "name": "process",
            "summary": "Sends the emails to be sent in the limit provided.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $limit = 10)\n  {\n    if ($this->check()) {\n      $sent = 0;\n      $successes = 0;\n      $mailings = [];\n      foreach ($this->db->rselectAll(\n        [\n        'table' => 'bbn_emails',\n        'fields' => ['bbn_emails.id', 'email', 'id_mailing', 'subject', 'text', 'cfg', 'status', 'delivery', 'read', 'priority'],\n        'join' => [[\n          'table' => 'bbn_emailings',\n          'type' => 'left',\n          'on' => [\n            'conditions' => [\n              [\n                'field' => 'id_mailing',\n                'exp' => 'bbn_emailings.id'\n              ]\n            ]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [\n            'status' => 'ready',\n            [\n              'logic' => 'OR',\n              'conditions' => [\n                [\n                  'field' => 'delivery',\n                  'operator' => 'isnull'\n                ], [\n                  'field' => 'delivery',\n                  'operator' => '<',\n                  'exp' => 'NOW()'\n                ]\n              ]\n            ], [\n              'logic' => 'OR',\n              'conditions' => [\n                [\n                  'field' => 'bbn_emailings.state',\n                  'operator' => 'isnull'\n                ], [\n                  'field' => 'bbn_emailings.state',\n                  'value' => 'ready'\n                ], [\n                  'field' => 'bbn_emailings.state',\n                  'value' => 'sending'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'order' => ['priority'],\n        'limit' => $limit\n        ]\n      ) as $r) {\n        $sent++;\n        $ok = false;\n        $att = [];\n        if (!empty($r['id_mailing'])) {\n          if (!isset($mailings[$r['id_mailing']])) {\n            $mailings[$r['id_mailing']] = $this->getMailing($r['id_mailing']);\n          }\n          $mailing = &$mailings[$r['id_mailing']];\n          if ($mailing['state'] === 'ready') {\n            $this->changeState($r['id_mailing'], 'sending');\n            $mailing['state'] = 'sending';\n          }\n          $text = $mailing['content'];\n          $subject = $mailing['title'];\n          $sender = $mailing['sender'];\n          if (!empty($mailing['medias'])) {\n            foreach ($mailing['medias'] as $a){\n              if (!empty($a['file']) && file_exists($a['file'])) {\n                $att[] = $a['file'];\n              }\n            }\n          }\n        }\n        else{\n          $text = $r['text'];\n          $subject = $r['subject'];\n          $sender = null;\n          if ($r['cfg']) {\n            $r['cfg'] = json_decode($r['cfg'], true);\n            if (!empty($r['cfg']['attachments'])) {\n              foreach ($r['cfg']['attachments'] as $a){\n                $f = \\bbn\\X::indexOf($a, '\/') === 0 ? $a : \\bbn\\Mvc::getContentPath().$a;\n                if (file_exists($f)) {\n                  $att[] = $f;\n                }\n              }\n            }\n          }\n        }\n        if ($subject && $text && \\bbn\\Str::isEmail($r['email'])) {\n          $params = [\n            'to' => $r['email'],\n            'subject' => $subject,\n            'text' => $text\n          ];\n          if (count($att)) {\n            $params['attachments'] = $att;\n          }\n          if ($ok = $this->send($params, $sender)) {\n            $successes++;\n          }\n        }\n        $this->db->update(\n          'bbn_emails', [\n          'status' => $ok ? 'success' : 'failure',\n          'delivery' => date('Y-m-d H:i:s')\n          ], ['id' => $r['id']]\n        );\n      }\n      foreach ($mailings as $id => $m) {\n        if (($m['state'] === 'sending')\n            && !$this->db->count(\n              'bbn_emails', [\n              'id_mailing' => $id,\n              'status'=> 'ready'\n              ]\n            )\n        ) {\n          $this->changeState($id, 'sent');\n        }\n      }\n      return $successes;\n    }\n    $this->setError(X::_(\"No mailer defined\"));\n    return null;\n  }",
            "startLine": 255,
            "endLine": 388,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "send": {
            "name": "send",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg, string $sender = NULL)\n  {\n    if (!empty($cfg['to']) && ($mailer = $this->_get_mailer($sender))) {\n      return $mailer->send($cfg);\n    }\n    return false;\n  }",
            "startLine": 390,
            "endLine": 396,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sender",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Adds a new mailing and returns its ID.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    $notes = $this->_note();\n    if ($this->check()\n        && $notes\n        && bbn\\X::hasProps($cfg, ['title', 'content', 'sender'], true)\n        && ($id_type = Note::getOptionId('mailings','types'))\n        && ($id_note = $notes->insert($cfg['title'], $cfg['content'], $id_type))\n        \/\/ Cannot give a date if no recipients selected\n        && (!empty($cfg['recipients']) || empty($cfg['sent']))\n    ) {\n      if (empty($cfg['sent'])) {\n        $cfg['sent'] = null;\n      }\n      if ($this->db->insert(\n        'bbn_emailings', [\n        'id_note' => $id_note,\n        'version' => 1,\n        'sender' => $cfg['sender'],\n        'recipients' => $cfg['recipients'] ?: null,\n        'sent' => $cfg['sent']\n        ]\n      )\n      ) {\n        $cfg['id'] = $this->db->lastId();\n        $cfg['id_note'] = $id_note;\n        $cfg['version'] = 1;\n        if (!empty($cfg['attachments'])) {\n          foreach ($cfg['attachments'] as $f){\n            if (is_array($f)) {\n              $notes->addMediaToNote($f['id_media'], $id_note, 1);\n            }\n            elseif (is_file($f)) {\n              \/\/ Add media\n              $notes->addMedia($id_note, $f);\n            }\n          }\n        }\n        if (bbn\\X::hasProps($cfg, ['recipients', 'sent', 'emails'], true)) {\n          $cfg['res'] = $this->insertEmails($cfg['id'], $cfg['sent'], $cfg['emails'], $cfg['priority'] ?? 5);\n        }\n        return $cfg;\n      }\n    }\n    return null;\n  }",
            "startLine": 404,
            "endLine": 449,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "insertEmails": {
            "name": "insertEmails",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_mailing, string $date, array $emails, int $priority = 5)\n  {\n    if (!empty($date) && \\bbn\\Date::validateSQL($date)) {\n      $res = [];\n      foreach ($emails as $item) {\n        if ($this->db->insertIgnore(\n          'bbn_emails', [\n            'email' => $item['email'],\n            'id_mailing' => $id_mailing,\n            'priority' => $priority,\n            'status' => 'ready',\n            'delivery' => $date\n          ]\n        )\n        ) {\n          $item['id'] = $this->db->lastId();\n          $res[] = $item;\n        }\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 451,
            "endLine": 473,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "date",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "emails",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "priority",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 5,
                    "default_name": ""
                }
            ]
        },
        "edit": {
            "name": "edit",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $cfg)\n  {\n    $notes = $this->_note();\n    $user = bbn\\User::getInstance();\n    $medias = $this->_medias();\n    $res = 0;\n    \n    if ($this->check() \n        && $user && $notes \n        && bbn\\X::hasProps($cfg, ['title', 'content', 'sender']) \n        && ($mailing = $this->getMailing($id))\n    ) {\n      $cfg['id'] = $id;\n      if ($this->countSent($id)) {\n        throw new Error(X::_(\"Impossible to edit a message already sent or partially sent, you need to duplicate it.\"));\n      }\n      $version = $mailing['version'];\n      if (($cfg['title'] !== $mailing['title']) || ($cfg['content'] !== $mailing['content'])) {\n        $version = $notes->insertVersion($mailing['id_note'], $cfg['title'], $cfg['content']);\n      }\n      $this->db->update(\n        'bbn_emailings', [\n        'version' => $version,\n        'sender' => $cfg['sender'],\n        'recipients' => $cfg['recipients'] ?: null,\n        'sent' => $cfg['sent']\n        ], [\n        'id' => $id\n        ]\n      );\n      foreach ($cfg['attachments'] as $f){\n        \/\/ It exists already, the file is not sent\n        if (is_array($f)) {\n          $idx = empty($mailing['medias']) ? false : \\bbn\\X::find($mailing['medias'], ['name' => $f['name']]);\n          if ($idx !== null) {\n            if ($version === $mailing['version']) {\n              \/\/ If file found in attachments when note is not modified, it is removed from the original array which can then be used for deleting all remaining attachments\n              array_splice($mailing['medias'], $idx, 1);\n            }\n            elseif ($notes->addMediaToNote($mailing['medias'][$idx]['id'], $mailing['id_note'], $version)) {\n              $res++;\n            }\n          }\n        }\n        \/\/ The pure path to the file is sent\n        elseif ($notes->addMedia($mailing['id_note'], $f)) {\n          $res++;\n        }\n      }\n      if (!empty($mailing['medias']) && ($version === $mailing['version'])) {\n        foreach ($mailing['medias'] as $med) {\n          if ($medias->delete($med['id'])) {\n            $res++;\n          }\n        }\n      }\n      else{\n        $res++;\n      }\n      if (!$cfg['sent'] || ($mailing['recipients'] !== $cfg['recipients'])) {\n        $this->deleteAllEmails($id);\n      }\n      if (bbn\\X::hasProps($cfg, ['recipients', 'sent', 'emails'], true)) {\n        $cfg['res'] = $this->insertEmails($cfg['id'], $cfg['sent'], $cfg['emails'], $cfg['priority'] ?? 5);\n      }\n      return $cfg;\n    }\n    return null;\n  }",
            "startLine": 475,
            "endLine": 543,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes the mailing and relative emails.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    \/\/ We do not delete mailings which have been sent\n    if ($this->countSent($id)) {\n      \/\/return 0;\n    }\n    $success = null;\n    $mailing = $this->getMailing($id);\n    if (!empty($mailing['id_note'])) {\n      $notes = $this->_note();\n      \/\/if the notes has media removes media before to remove the note\n      if ($medias = $notes->getMedias($mailing['id_note'])) {\n        foreach ($medias as $media){\n          $notes->removeMedia($media['id'], $mailing['id_note']);\n        }\n      }\n\n      \/\/ if there are emails with the given id_mailing\n      if ($this->db->count('bbn_emails', ['id_mailing' => $id])) {\n        \/\/it removes the emails ready or cancelled relative to this id_mailing\n        $this->deleteAllEmails($id);\n      }\n      if (!$this->db->count('bbn_emails', ['id_mailing' => $id])) {\n        \/\/deletes the row\n        $success = $this->db->delete(\"bbn_emailings\", ['id' => $id]);\n        \/\/$notes->remove($mailing['id_note']);\n      }\n    }\n    return $success;\n  }",
            "startLine": 550,
            "endLine": 579,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "deleteSent": {
            "name": "deleteSent",
            "summary": "Deletes a sent mailing. If $history is true completely delete the row from history.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, $history = false)\n  {\n    $success = false;\n    if ($mailing = $this->getMailing($id)) {\n      if (!empty($mailing['id_note']) && ($mailing['state'] === 'sent')) {\n        if (!empty($history)) {\n          $notes = $this->_note();\n          if (($medias = $notes->getMedias($mailing['id_note']) )) {\n            foreach ($medias as $media){\n              $notes->removeMedia($media['id'],$mailing['id_note']);\n            }\n          }\n          $notes->remove($mailing['id_note']);  \n          $success = $this->db->delete('bbn_$_uids', ['bbn_uid' => $id]);\n        }\n        else {\n          $success = $this->db->delete('bbn_emailings', ['id' => $id]);\n        }\n      }\n      \n    }\n    \n    return $success;\n  }",
            "startLine": 588,
            "endLine": 611,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "history",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "deleteEmail": {
            "name": "deleteEmail",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_email)\n  {\n    if (!empty($id_email)) {\n      return $this->db->delete('bbn_users_emails', ['id' => $id_email]);\n    }\n    return 0;\n  }",
            "startLine": 619,
            "endLine": 625,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "email"
                }
            ]
        },
        "deleteAllEmails": {
            "name": "deleteAllEmails",
            "summary": "Deletes all the emails ready or cancelled relative to the given id_mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_mailing)\n  {\n    $success = null;\n    $emails = $this->db->rselectAll('bbn_emails', [], ['id_mailing' => $id_mailing]);\n    if (!empty($emails)) {\n      $n = 0;\n      foreach ($emails as $e){\n        if (($e['status'] === 'ready') || ($e['status'] === 'cancelled')) {\n          if ($this->db->delete('bbn_emails', ['id' => $e['id']])) {\n            $n++;\n          }\n        }\n      }\n      $success = $n;\n    }\n    return $success;\n  }",
            "startLine": 633,
            "endLine": 649,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "mailing"
                }
            ]
        },
        "changeEmailStatus": {
            "name": "changeEmailStatus",
            "summary": "Changes the status of the given id email.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_email, string $state)\n  {\n    return $this->db->update(\n      'bbn_emails', ['status' => $state], [\n      'id' => $id_email,\n      ]\n    );\n  }",
            "startLine": 659,
            "endLine": 666,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "email"
                },
                {
                    "name": "state",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getEmails": {
            "name": "getEmails",
            "summary": "Returns the array containing all the emails relative to an id_mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    return $this->db->rselectAll(\n      'bbn_emails', [], [\n      'id_mailing' => $id\n      ]\n    );\n  }",
            "startLine": 674,
            "endLine": 681,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "countSent": {
            "name": "countSent",
            "summary": "Returns the number of emails sent for the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($this->check()) {\n      return $this->db->count(\n        'bbn_emails', [\n        'id_mailing' => $id,\n        ['status', '!=', 'ready'],\n        ['email', '!=', $this->getTestEmails()]\n        ]\n      );\n    }\n    return null;\n  }",
            "startLine": 689,
            "endLine": 701,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "changeEmailsStatus": {
            "name": "changeEmailsStatus",
            "summary": "Changes the status of the emails relative to the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_mailing, string $status)\n  {\n    $count = 0;\n    if (($emails = $this->getEmails($id_mailing))) {\n      foreach ($emails as $e){\n        \/\/here I've to check if ready or cancelled??\n        if ($this->changeEmailStatus($e['id'], $status)) {\n          $count ++;\n        };\n      }\n      return $count;\n    }\n  }",
            "startLine": 710,
            "endLine": 722,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "status",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "copy": {
            "name": "copy",
            "summary": "Copies the email",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($row = $this->getMailing($id)) {\n      $id_mailing = $this->add(\n        [\n        'title' => $row['title'],\n        'content' => $row['content'],\n        'sender' => $row['sender'],\n        'recipients' => $row['recipients']\n        ]\n      );\n      if (!empty($row['medias']) && ($row2 = $this->getMailing($id_mailing))) {\n        foreach ($row['medias'] as $r){\n          $this->notes->addMediaToNote($r['id'], $row2['id_note'], 1);\n        }\n      }\n      return $id_mailing;\n    }\n  }",
            "startLine": 730,
            "endLine": 748,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLasts": {
            "name": "getLasts",
            "summary": "Get the last mailings rows which aree not sending",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $limit = 10)\n  {\n    return $this->db->rselectAll(\n      [\n      'table' => 'bbn_emailings',\n      'fields' => ['id', 'title', 'sent', 'state'],\n      'join' => [\n        [\n          'table' => 'bbn_notes_versions',\n          'on' => [\n            'conditions' => [\n              [\n                'field' => 'bbn_notes_versions.id_note',\n                'exp' => 'bbn_emailings.id_note'\n              ], [\n                'field' => 'bbn_notes_versions.version',\n                'exp' => 'bbn_emailings.version'\n              ]\n            ]\n          ]\n        ]\n      ],\n      'where' => [\n        ['state', '!=', 'sending'],\n        ['sent', 'isnotnull'],\n        ['sent', '<', Date('Y-m-d H:i:s')]\n      ],\n      'order' => [\n        'sent' => 'DESC'\n      ],\n      'limit' => $limit\n      ]\n    );\n  }",
            "startLine": 756,
            "endLine": 789,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "getNexts": {
            "name": "getNexts",
            "summary": "Get the next mailings rows to be sent",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $limit = 10)\n  {\n    return $this->db->rselectAll(\n      [\n        'table' => 'bbn_emailings',\n        'fields' => ['id', 'title', 'sent', 'state'],\n        'join' => [\n          [\n            'table' => 'bbn_notes_versions',\n            'on' => [\n              'conditions' => [\n                [\n                  'field' => 'bbn_notes_versions.id_note',\n                  'exp' => 'bbn_emailings.id_note'\n                ], [\n                  'field' => 'bbn_notes_versions.version',\n                  'exp' => 'bbn_emailings.version'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'where' => [\n          ['state', '=', 'ready'],\n          ['sent', 'isnotnull'],\n        ],\n        'order' => [\n          'sent' => 'ASC'\n        ],\n        'limit' => $limit\n      ]\n    );\n  }",
            "startLine": 797,
            "endLine": 829,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "getSendings": {
            "name": "getSendings",
            "summary": "Get the next mailings rows to be sent",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db->rselectAll(\n      [\n        'table' => 'bbn_emailings',\n        'fields' => ['id', 'title', 'sent', 'state'],\n        'join' => [\n          [\n            'table' => 'bbn_notes_versions',\n            'on' => [\n              'conditions' => [\n                [\n                  'field' => 'bbn_notes_versions.id_note',\n                  'exp' => 'bbn_emailings.id_note'\n                ], [\n                  'field' => 'bbn_notes_versions.version',\n                  'exp' => 'bbn_emailings.version'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'where' => [\n          ['state', '=', 'sending']\n        ],\n        'order' => [\n          'sent' => 'DESC'\n        ]\n      ]\n    );\n  }",
            "startLine": 837,
            "endLine": 867,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 193,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTreeRef": {
            "name": "getOptionsTreeRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTreeRef(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 218,
            "endLine": 221,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsRef": {
            "name": "getOptionsRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptionsRef(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 230,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 236,
            "endLine": 239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValueRef": {
            "name": "getOptionsTextValueRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptionsRef($id) : [];\n  }",
            "startLine": 242,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 254,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 260,
            "endLine": 272,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 275,
            "endLine": 278,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 281,
            "endLine": 284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 287,
            "endLine": 290,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Mailing",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 293,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_cfgs": null,
        "_mailers": [],
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}