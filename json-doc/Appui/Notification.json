{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Notification",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Notification.php",
    "startLine": 7,
    "endLine": 881,
    "contentConstructor": {
        "file": "bbn\\Appui\\Notification",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db)\n  {\n    parent::__construct($db);\n    $this->_init_class_cfg(self::$default_class_cfg);\n    self::optionalInit();\n    $this->opt   = bbn\\Appui\\Option::getInstance();\n    $this->user  = bbn\\User::getInstance();\n    $this->pref  = new bbn\\User\\Preferences($this->db);\n    $this->perms = new bbn\\User\\Permissions();\n  }",
            "startLine": 56,
            "endLine": 65,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "create": {
            "name": "create",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $opt_path, string $title, string $content, $perms = true, string $opt_text = '', string $cat_text = '', bool $user_excluded = false)\n  {\n    if ($list_opt = self::getOptionId('list')) {\n      $ocfg  = $this->opt->getClassCfg();\n      $pcfg  = $this->pref->getClassCfg();\n      $users = \\is_array($perms) ? $perms : [];\n      $perms = \\is_bool($perms) && !empty($perms) && defined('BBN_ID_PERMISSION');\n      if (!($id_opt = $this->opt->fromPath($opt_path, '\/', $list_opt))) {\n        $bits = \\explode('\/', $opt_path);\n        if (count($bits) === 2) {\n          if ($perms) {\n            \/\/ Get permissions from the current BBN_ID_PERMISSION value\n            $permissions = $this->db->selectAll(\n              $pcfg['table'], [\n              $pcfg['arch']['user_options']['id_user'],\n              $pcfg['arch']['user_options']['id_group']\n              ], [$pcfg['arch']['user_options']['id_option'] => BBN_ID_PERMISSION]\n            );\n            $is_public   = (bool)$this->opt->getProp(BBN_ID_PERMISSION, 'public');\n            $perm_parent = $this->perms->optionToPermission($list_opt, true);\n          }\n          $parent = $list_opt;\n          foreach ($bits as $i => $code) {\n            $text = ($i === 0) && !empty($cat_text) ? $cat_text : (($i === 1) && !empty($opt_text) ? $opt_text : $code);\n            if (!($p = $this->opt->fromCode($code, $parent))) {\n              $p = $this->opt->add(\n                [\n                $ocfg['arch']['options']['text'] => $text,\n                  $ocfg['arch']['options']['code'] => $code,\n                  $ocfg['arch']['options']['id_parent'] => $parent\n                ]\n              );\n            }\n            if ($perms) {\n              if (!($pp = $this->perms->optionToPermission($p))) {\n                $pp = $this->perms->optionToPermission($p, true);\n                $this->opt->setProp($pp, ['public' => $is_public]);\n                if (!$is_public) {\n                  foreach ($permissions as $perm) {\n                    $this->lastDbId = $this->db->lastId();\n                    if ($this->db->insert(\n                      $pcfg['table'], [\n                      $pcfg['arch']['user_options']['id_option'] => $pp,\n                      $pcfg['arch']['user_options']['id_user'] => $perm->{$pcfg['arch']['user_options']['id_user']},\n                      $pcfg['arch']['user_options']['id_group'] => $perm->{$pcfg['arch']['user_options']['id_group']}\n                      ]\n                    ) ) {\n                      $this->lastId = $this->db->lastId();\n                    }\n\n                    $this->db->setLastInsertId($this->lastDbId);\n                  }\n                }\n              }\n              $perm_parent = $pp;\n            }\n            $parent = $p;\n            if ($i === 1) {\n              $id_opt = $parent;\n            }\n          }\n        }\n      }\n\n      if (bbn\\Str::isUid($id_opt)) {\n        if ($perms) {\n          return $perms ? $this->insertByOption($title, $content, $id_opt, $user_excluded) : $this->insert($title, $content, $id_opt, $users, $user_excluded);\n        }\n      }\n    }\n\n    return false;\n  }",
            "startLine": 68,
            "endLine": 140,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 7,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "opt_path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "title",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "perms",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                },
                {
                    "name": "opt_text",
                    "position": 4,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cat_text",
                    "position": 5,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 6,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "insert": {
            "name": "insert",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $title, string $content, string $id_option = NULL, array $users = [], bool $user_excluded = false)\n  {\n    if (\\is_string($id_option) && !bbn\\Str::isUid($id_option)) {\n      $id_option = \\array_reverse(\\explode('\/', $id_option));\n      $id_option[] = 'list';\n      $id_option = self::getOptionId(...$id_option);\n    }\n\n    if (!empty($title)\n        && !empty($content)\n        && (\\is_null($id_option)\n        || bbn\\Str::isUid($id_option))\n    ) {\n      $notification = [\n        $this->class_cfg['arch']['content']['id_option'] => $id_option,\n        $this->class_cfg['arch']['content']['title'] => $title,\n        $this->class_cfg['arch']['content']['content'] => $content,\n        $this->class_cfg['arch']['content']['creation'] => \\date('Y-m-d H:i:s')\n      ];\n      $this->lastDbId = $this->db->lastId();\n      if ($this->db->insert($this->class_cfg['tables']['content'], $notification)) {\n        $id = $this->db->lastId();\n        if (empty($users) && !$user_excluded) {\n          $users[] = $this->user->getId();\n        }\n\n        $i               = 0;\n        $current_id_user = $this->user->getId();\n        foreach ($users as $u){\n          if ((!$user_excluded || ($current_id_user !== $u))\n              && $this->_user_has_permission($notification, $u)\n          ) {\n            $i += (int)$this->db->insert(\n              $this->class_table, [\n              $this->fields['id_content'] => $id,\n              $this->fields['id_user'] => $u\n              ]\n            );\n            $this->lastId = $this->db->lastId();\n          }\n        }\n        $this->db->setLastInsertId($this->lastDbId);\n        return (bool)$i;\n      }\n    }\n\n    return false;\n  }",
            "startLine": 143,
            "endLine": 190,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "users",
                    "position": 3,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 4,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "insertByOption": {
            "name": "insertByOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $title, string $content, string $id_option, bool $user_excluded = false)\n  {\n    if (!bbn\\Str::isUid($id_option)) {\n      $id_option = \\array_reverse(\\explode('\/', $id_option));\n      if (\\count($id_option) === 2) {\n        $id_option[] = 'list';\n      }\n\n      $id_option = self::getOptionId(...$id_option);\n    }\n\n    if (bbn\\Str::isUid($id_option)\n        && ($ucfg = $this->user->getClassCfg())\n        && ($ocfg = $this->opt->getClassCfg())\n        && ($groups = $this->db->getColumnValues($ucfg['tables']['groups'], $ucfg['arch']['groups']['id'], [$ucfg['arch']['groups']['type'] => 'real']))\n        && ($id_perm = $this->db->selectOne($ocfg['table'], $ocfg['arch']['options']['id'], [$ocfg['arch']['options']['code'] => 'opt'.$id_option]))\n        && ($perm = $this->opt->option($id_perm))\n    ) {\n      $users           = [];\n      $is_public       = !empty($perm['public']);\n      $current_id_user = $this->user->getId();\n      foreach ($groups as $group) {\n        $has_perm    = $this->pref->groupHas($id_perm, $group);\n        $group_users = $this->db->selectAll(\n          $ucfg['table'], [], [\n          $ucfg['arch']['users']['id_group'] => $group,\n          $ucfg['arch']['users']['active'] => 1\n          ]\n        );\n        foreach ($group_users as $user) {\n          $id_user = $user->{$ucfg['arch']['users']['id']};\n          if (!\\in_array($id_user, $users, true)\n              && (!$user_excluded || ($current_id_user !== $id_user))\n              && ($is_public\n              || $has_perm\n              || $this->pref->userHas($id_perm, $id_user)\n              || (!empty($user->{$ucfg['arch']['users']['admin']})\n              || !empty($user->{$ucfg['arch']['users']['dev']})))\n          ) {\n            $users[] = $id_user;\n          }\n        }\n      }\n\n      if (!empty($users)) {\n        return $this->insert($title, $content, $id_option, $users);\n      }\n    }\n\n    return false;\n  }",
            "startLine": 193,
            "endLine": 243,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 3,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (bbn\\Str::isUid($id)) {\n      return (bool)$this->db->delete($this->class_table, [$this->fields['id'] => $id]);\n    }\n\n    return null;\n  }",
            "startLine": 246,
            "endLine": 253,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "read": {
            "name": "read",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, string $id_user = NULL, $moment = NULL)\n  {\n    if (!$id_user) {\n      $id_user = $this->user->getId();\n    }\n\n    if (bbn\\Str::isUid($id_user)) {\n      if (\\is_array($id)) {\n        $todo = count($id);\n        $did  = 0;\n        foreach ($id as $i) {\n          if ($this->read($i, $id_user, $moment)) {\n            $did++;\n          }\n        }\n\n        return $todo === $did;\n      }\n      elseif (bbn\\Str::isUid($id)\n          && !$this->db->selectOne($this->class_table, $this->fields['read'], [$this->fields['id'] => $id])\n      ) {\n        return (bool)$this->db->update(\n          $this->class_table, [\n          $this->fields['read'] => $moment ? \\round((float)$moment, 4) : bbn\\X::microtime()\n          ], [\n          $this->fields['id'] => $id\n          ]\n        );\n      }\n    }\n\n    return false;\n  }",
            "startLine": 256,
            "endLine": 288,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "readAll": {
            "name": "readAll",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user = NULL, $moment = NULL)\n  {\n    if (!$id_user) {\n      $id_user = $this->user->getId();\n    }\n\n    if (bbn\\Str::isUid($id_user)\n        && ($unreads = $this->getUnreadIds($id_user))\n    ) {\n      $todo = count($unreads);\n      $did  = 0;\n      foreach ($unreads as $id){\n        $did += $this->db->update(\n          $this->class_table, [\n          $this->fields['read'] => $moment ? \\round((float)$moment, 4) : bbn\\X::microtime()\n          ], [\n          $this->fields['id'] => $id\n          ]\n        );\n      }\n\n      return $todo === $did;\n    }\n\n    return false;\n  }",
            "startLine": 291,
            "endLine": 316,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (bbn\\Str::isUid($id) && ($ucfg = $this->user->getClassCfg())) {\n      return $this->db->rselect(\n        [\n        'table' => $this->class_table,\n        'fields' => array_merge(\n          array_values($this->fields), [\n          $this->class_cfg['arch']['content']['id_option'],\n          $this->class_cfg['arch']['content']['title'],\n          $this->class_cfg['arch']['content']['content'],\n          $this->class_cfg['arch']['content']['creation']\n          ]\n        ),\n        'join' => [[\n          'table' => $this->class_cfg['tables']['content'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($this->fields['id_content'], $this->class_table),\n              'exp' => $this->db->colFullName($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n            ]]\n          ]\n        ], [\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n              'exp' => $this->db->colFullName($ucfg['arch']['users']['id'], $ucfg['table'])\n            ], [\n              'field' => $this->db->colFullName($ucfg['arch']['users']['active'], $ucfg['table']),\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id'], $this->class_table),\n            'value' => $id\n          ]]\n        ]\n        ]\n      );\n    }\n\n    return null;\n  }",
            "startLine": 319,
            "endLine": 364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getIdContent": {
            "name": "getIdContent",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if (bbn\\Str::isUid($id)) {\n      return $this->db->selectOne([\n        'table' => $this->class_table,\n        'fields' => [$this->fields['id_content']],\n        'where' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id'], $this->class_table),\n            'value' => $id\n          ]]\n        ]\n      ]);\n    }\n    return null;\n  }",
            "startLine": 367,
            "endLine": 382,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getUnread": {
            "name": "getUnread",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user = NULL, array $additional_where = [])\n  {\n    $ucfg  = $this->user->getClassCfg();\n    $where = [\n      'conditions' => [[\n        'field' => $this->db->colFullName($this->fields['read'], $this->class_table),\n        'operator' => 'isnull'\n      ]]\n    ];\n    if (bbn\\Str::isUid($id_user)) {\n      $where['conditions'][] = [\n        'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n        'value' => $id_user\n      ];\n    }\n\n    if (!empty($additional_where)) {\n      $where['conditions'][] = $additional_where;\n    }\n\n    return $this->db->rselectAll(\n      [\n      'table' => $this->class_table,\n      'fields' => array_merge(\n        array_values($this->fields), [\n        $this->class_cfg['arch']['content']['id_option'],\n        $this->class_cfg['arch']['content']['title'],\n        $this->class_cfg['arch']['content']['content'],\n        $this->class_cfg['arch']['content']['creation']\n        ]\n      ),\n      'join' => [[\n        'table' => $this->class_cfg['tables']['content'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id_content'], $this->class_table),\n            'exp' => $this->db->colFullName($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n          ]]\n        ]\n      ], [\n        'table' => $ucfg['table'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n            'exp' => $this->db->colFullName($ucfg['arch']['users']['id'], $ucfg['table'])\n          ], [\n            'field' => $this->db->colFullName($ucfg['arch']['users']['active'], $ucfg['table']),\n            'value' => 1\n          ]]\n        ]\n      ]],\n      'where' => $where,\n      'order_by' => [[\n        'field' => $this->db->colFullName($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n        'dir' => 'ASC'\n      ]]\n      ]\n    );\n  }",
            "startLine": 385,
            "endLine": 443,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "additional_where",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getUnreadIds": {
            "name": "getUnreadIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user = NULL, array $filters = [])\n  {\n    $ucfg  = $this->user->getClassCfg();\n    $where = [\n      'conditions' => [[\n        'field' => $this->db->colFullName($this->fields['read'], $this->class_table),\n        'operator' => 'isnull'\n      ]]\n    ];\n    if (bbn\\Str::isUid($id_user)) {\n      $where['conditions'][] = [\n        'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n        'value' => $id_user\n      ];\n    }\n\n    if (!empty($filters)) {\n      $where['conditions'] = bbn\\X::mergeArrays($where['conditions'], $filters);\n    }\n\n    return $this->db->getColumnValues(\n      [\n      'table' => $this->class_table,\n      'fields' => [$this->fields['id']],\n      'join' => [[\n        'table' => $this->class_cfg['tables']['content'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id_content'], $this->class_table),\n            'exp' => $this->db->colFullName($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n          ]]\n        ]\n      ], [\n        'table' => $ucfg['table'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n            'exp' => $this->db->colFullName($ucfg['arch']['users']['id'], $ucfg['table'])\n          ], [\n            'field' => $this->db->colFullName($ucfg['arch']['users']['active'], $ucfg['table']),\n            'value' => 1\n          ]]\n        ]\n      ]],\n      'where' => $where,\n      'order_by' => [[\n        'field' => $this->db->colFullName($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n        'dir' => 'ASC'\n      ]]\n      ]\n    );\n  }",
            "startLine": 446,
            "endLine": 497,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "filters",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getListByUser": {
            "name": "getListByUser",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user, array $data)\n  {\n    if (bbn\\Str::isUid($id_user)) {\n      $ucfg = $this->user->getClassCfg();\n      $grid = new bbn\\Appui\\Grid(\n        $this->db, $data, [\n        'table' => $this->class_table,\n        'fields' => array_merge(\n          array_values($this->fields), [\n          $this->class_cfg['arch']['content']['id_option'],\n          $this->class_cfg['arch']['content']['title'],\n          $this->class_cfg['arch']['content']['content'],\n          $this->class_cfg['arch']['content']['creation']\n          ]\n        ),\n        'join' => [[\n          'table' => $this->class_cfg['tables']['content'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($this->fields['id_content'], $this->class_table),\n              'exp' => $this->db->colFullName($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n            ]]\n          ]\n        ], [\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n              'exp' => $this->db->colFullName($ucfg['arch']['users']['id'], $ucfg['table'])\n            ], [\n              'field' => $this->db->colFullName($ucfg['arch']['users']['active'], $ucfg['table']),\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'filters' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->fields['id_user'], $this->class_table),\n            'value' => $id_user\n          ]]\n        ],\n        'order' => [[\n          'field' => $this->db->colFullName($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n          'dir' => 'DESC'\n        ]]\n        ]\n      );\n      if ($grid->check()) {\n        return $grid->getDatatable();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 500,
            "endLine": 553,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLastId": {
            "name": "getLastId",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 555,
            "endLine": 557,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "contUnread": {
            "name": "contUnread",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user = NULL)\n  {\n    return \\count($this->getUnreadIds($id_user));\n  }",
            "startLine": 559,
            "endLine": 562,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "notify": {
            "name": "notify",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($notification)\n  {\n    if (bbn\\Str::isUid($notification)) {\n      $notification = $this->get($notification);\n    }\n\n    if (\\is_array($notification)\n        && bbn\\Str::isUid($notification[$this->fields['id']])\n        && bbn\\Str::isUid($notification[$this->fields['id_content']])\n        && bbn\\Str::isUid($notification[$this->fields['id_user']])\n        && ($id_user = $notification[$this->fields['id_user']])\n        && !empty($notification[$this->class_cfg['arch']['content']['title']])\n        && !empty($notification[$this->class_cfg['arch']['content']['content']])\n        && empty($notification[$this->fields['read']])\n        && ($cfg = $this->getCfg($id_user, $notification[$this->class_cfg['arch']['content']['id_option']]))\n    ) {\n      $mtime    = bbn\\X::microtime();\n      $dpath    = bbn\\Mvc::getUserDataPath($id_user, 'appui-notification');\n      $ucfg     = $this->user->getClassCfg();\n      $sessions = $this->db->selectAll(\n        $ucfg['tables']['sessions'], [\n        $ucfg['arch']['sessions']['id'],\n        $ucfg['arch']['sessions']['sess_id']\n        ], [\n        $ucfg['arch']['sessions']['id_user'] => $id_user,\n        $ucfg['arch']['sessions']['opened'] => 1\n        ]\n      );\n      \/\/ Web notification\n      if (empty($notification[$this->fields['web']])\n          && !empty($cfg['web'])\n          && !empty($sessions)\n          && empty($notification[$this->fields['mail']])\n      ) {\n        foreach ($sessions as $sess) {\n          $path = $dpath . \"web\/{$sess->id}\/\";\n          if (bbn\\File\\Dir::createPath($path) && !\\is_file($path . \"$mtime.json\")) {\n            $notification[$this->fields['web']]    = $mtime;\n            $notification[$this->fields['dt_web']] = date('Y-m-d H:i:s', $mtime);\n            file_put_contents($path . \"$mtime.json\", Json_encode($notification));\n          }\n        }\n      }\n      \/\/ Browser notification\n      elseif (empty($notification[$this->fields['browser']])\n          && !empty($cfg['browser'])\n          && !empty($sessions)\n          && empty($notification[$this->fields['mail']])\n      ) {\n        foreach ($sessions as $sess) {\n          $path = $dpath . \"browser\/{$sess->id}\/\";\n          if (bbn\\File\\Dir::createPath($path) && !\\is_file($path . \"$mtime.json\")) {\n            $notification[$this->fields['browser']]    = $mtime;\n            $notification[$this->fields['dt_browser']] = date('Y-m-d H:i:s', $mtime);\n            file_put_contents($path . \"$mtime.json\", Json_encode($notification));\n          }\n        }\n      }\n      \/\/ Mail notification\n      elseif (empty($notification[$this->fields['mail']]) && !empty($cfg['mail'])) {\n        $creation = strtotime($notification[$this->class_cfg['arch']['content']['creation']]);\n        if (($cfg['mail'] === 'immediately')\n            || (($cfg['mail'] === 'daily')\n            && (time() > strtotime('00:00:00 +1 day', $creation)))\n            || (($cfg['mail'] === 'default')\n            && (time() > strtotime('+1 hour', $creation)))\n        ) {\n          $notification[$this->fields['mail']] = $mtime;\n          $this->_send_grouped_mail($notification, $cfg['mail']);\n        }\n      }\n\n      \/\/ App notification\n      \/\/else if (empty($notification[$this->fields['mobile']]) && !empty($cfg['mobile'])) {}\n      return $this->_update($notification[$this->fields['id']], $notification);\n    }\n\n    return null;\n  }",
            "startLine": 565,
            "endLine": 643,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "notification",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "process": {
            "name": "process",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filters = [])\n  {\n    foreach ($this->getUnreadIds(null, $filters) as $n) {\n      $this->notify($n);\n    }\n  }",
            "startLine": 646,
            "endLine": 651,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "filters",
                    "position": 0,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "getCfg": {
            "name": "getCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id_user, string $id_option = NULL)\n  {\n    if (bbn\\Str::isUid($id_user)\n        && ($cfg_opt_id = self::getOptionId('cfg'))\n        && bbn\\Str::isUid($cfg_opt_id)\n    ) {\n      \/\/ Glogal cfg\n      if (empty($this->cfg)) {\n        $this->cfg = $this->opt->getValue($cfg_opt_id);\n      }\n\n      $cfg = $this->cfg;\n      \/\/ Get global user's preferences\n      if ($cfg_pref = $this->pref->getCfgByOption($cfg_opt_id, $id_user)) {\n        $cfg = \\array_merge($cfg, $cfg_pref);\n      }\n\n      \/\/ Get users's preferences of the notification's category\n      if (bbn\\Str::isUid($id_option)\n          && ($id_option_parent = $this->opt->getIdParent($id_option))\n          && bbn\\Str::isUid($id_option_parent)\n          && ($not_parent_pref = $this->pref->getCfgByOption($id_option_parent, $id_user))\n      ) {\n        $cfg = \\array_merge($cfg, $not_parent_pref);\n      }\n\n      \/\/ Get user's preferences of this notification\n      if (bbn\\Str::isUid($id_option)\n          && ($not_pref = $this->pref->getCfgByOption($id_option, $id_user))\n      ) {\n        $cfg = \\array_merge($cfg, $not_pref);\n      }\n\n      return $cfg;\n    }\n\n    return null;\n  }",
            "startLine": 654,
            "endLine": 691,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setCfg": {
            "name": "setCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    if (!empty($cfg['id_option'])\n        && isset($cfg['web'], $cfg['browser'], $cfg['mail'], $cfg['mobile'])\n    ) {\n      return (bool)$this->pref->updateByOption(\n        $cfg['id_option'], [\n        'web' => (bool)$cfg['web'],\n        'browser' => (bool)$cfg['browser'],\n        'mail' => \\is_string($cfg['mail']) ? $cfg['mail'] : (bool)$cfg['mail'],\n        'mobile' => (bool)$cfg['mobile']\n        ]\n      );\n    }\n\n    return false;\n  }",
            "startLine": 694,
            "endLine": 710,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_user_has_permission": {
            "name": "_user_has_permission",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($notification, string $id_user = NULL)\n  {\n    if (!\\is_array($notification)\n        && \\is_string($notification)\n        && bbn\\Str::isUid($notification)\n    ) {\n      $notification = $this->get($notification);\n    }\n\n    if (\\is_array($notification)\n        && ($id_user = $id_user ?: ($notification[$this->fields['id_user']] ?? $this->user->getId()))\n        && bbn\\Str::isUid($id_user)\n        && ($ucfg = $this->user->getClassCfg())\n        && ($ocfg = $this->opt->getClassCfg())\n        && ($user = $this->db->select(\n          $ucfg['table'], [\n          $ucfg['arch']['users']['id_group'],\n          $ucfg['arch']['users']['admin'],\n          $ucfg['arch']['users']['dev']\n          ], [$ucfg['arch']['users']['id'] => $id_user]\n        ))\n    ) {\n      $id_opt = $notification[$this->class_cfg['arch']['content']['id_option']] ?? null;\n      if (!empty($user->{$ucfg['arch']['users']['admin']})\n          || !empty($user->{$ucfg['arch']['users']['dev']})\n          || empty($id_opt)\n      ) {\n        return true;\n      }\n\n      if (($id_perm = $this->db->selectOne($ocfg['table'], $ocfg['arch']['options']['id'], [$ocfg['arch']['options']['code'] => 'opt'.$id_opt]))\n          && ($perm = $this->opt->option($id_perm))\n      ) {\n        if (!empty($perm['public'])) {\n          return true;\n        }\n\n        return $this->pref->userHas($id_perm, $id_user)\n          || $this->pref->groupHas($id_perm, $user->{$ucfg['arch']['users']['id_group']});\n      }\n    }\n\n    return false;\n  }",
            "startLine": 835,
            "endLine": 878,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "notification",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 51,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 51,
                "endLine": 58,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 65,
            "endLine": 72,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 65,
                "endLine": 72,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 86,
            "endLine": 89,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 86,
                "endLine": 89,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 92,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 92,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 98,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 98,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 115,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 115,
                "endLine": 126,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 132,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 132,
                "endLine": 135,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 142,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 142,
                "endLine": 145,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())), function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 187,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 199,
            "endLine": 202,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 205,
            "endLine": 208,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 211,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 217,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 229,
            "endLine": 232,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 235,
            "endLine": 247,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 250,
            "endLine": 253,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 256,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 262,
            "endLine": 265,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 268,
            "endLine": 271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if (!$this->class_table_index) {\n      throw new \\Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    $res = $this->db->count(\n      $this->class_table, [\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n      ]\n    );\n    return (bool)$res;\n  }",
            "startLine": 35,
            "endLine": 47,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getClassCfg": {
            "name": "getClassCfg",
            "summary": "Returns the class configuration.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 55,
            "endLine": 58,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getFields": {
            "name": "getFields",
            "summary": "Returns the fields of the main table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 66,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "update": {
            "name": "update",
            "summary": "Updates a single row in the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $data, bool $addCfg = false)\n  {\n    if (!$this->exists($id)) {\n      throw new \\Exception(X::_(\"Impossible to find the given row\"));\n    }\n\n    if ($addCfg) {\n      $data = array_merge($this->select($id), $data);\n    }\n\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      $f = $ccfg['arch'][$this->class_table_index];\n      return (bool)$this->db->update($ccfg['table'], $data, [$f['id'] => $id]);\n    }\n\n    return false;\n  }",
            "startLine": 119,
            "endLine": 136,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "addCfg",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "select": {
            "name": "select",
            "summary": "Retrieves a row from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($this->exists($id)) {\n      $f = $this->class_cfg['arch'][$this->class_table_index];\n      if ($arr = $this->db->rselect(\n        $this->class_table, array_values($f), [\n          $f['id'] => $id\n        ]\n      )) {\n        if (!empty($f['cfg']) && !empty($arr[$f['cfg']])) {\n          $cfg = json_decode($arr[$f['cfg']], true);\n          $arr = array_merge($cfg, $arr);\n          unset($arr[$f['cfg']]);\n        }\n\n        return $arr;\n      }\n    }\n\n    return null;\n\n  }",
            "startLine": 146,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "selectAll": {
            "name": "selectAll",
            "summary": "Returns an array of rows from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Notification",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cond)\n  {\n    if (!$this->class_table_index) {\n      throw new \\Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    $f = $this->class_cfg['arch'][$this->class_table_index];\n    if ($arrs = $this->db->rselectAll($this->class_table, array_values($f), $cond)) {\n      foreach ($arrs as &$arr) {\n        if (!empty($f['cfg']) && !empty($arr[$f['cfg']])) {\n          $cfg = json_decode($arr[$f['cfg']], true);\n          $arr = array_merge($cfg, $arr);\n          unset($arr[$f['cfg']]);\n        }\n      }\n      unset($arr);\n\n      return $arrs;\n    }\n\n    return [];\n  }",
            "startLine": 177,
            "endLine": 198,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cond",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_notifications",
            "tables": {
                "notifications": "bbn_notifications",
                "content": "bbn_notifications_content"
            },
            "arch": {
                "notifications": {
                    "id": "id",
                    "id_content": "id_content",
                    "id_user": "id_user",
                    "web": "web",
                    "browser": "browser",
                    "mail": "mail",
                    "mobile": "mobile",
                    "read": "read",
                    "dt_web": "dt_web",
                    "dt_browser": "dt_browser",
                    "dt_mail": "dt_mail",
                    "dt_mobile": "dt_mobile",
                    "dt_read": "dt_read"
                },
                "content": {
                    "id": "id",
                    "id_option": "id_option",
                    "title": "title",
                    "content": "content",
                    "creation": "creation"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "numMethods": 48,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_notifications",
            "tables": {
                "notifications": "bbn_notifications",
                "content": "bbn_notifications_content"
            },
            "arch": {
                "notifications": {
                    "id": "id",
                    "id_content": "id_content",
                    "id_user": "id_user",
                    "web": "web",
                    "browser": "browser",
                    "mail": "mail",
                    "mobile": "mobile",
                    "read": "read",
                    "dt_web": "dt_web",
                    "dt_browser": "dt_browser",
                    "dt_mail": "dt_mail",
                    "dt_mobile": "dt_mobile",
                    "dt_read": "dt_read"
                },
                "content": {
                    "id": "id",
                    "id_option": "id_option",
                    "title": "title",
                    "content": "content",
                    "creation": "creation"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "opt": null,
        "user": null,
        "pref": null,
        "perms": null,
        "cfg": null,
        "lastDbId": null,
        "lastId": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null,
        "_is_init_class_cfg": false,
        "fields": null,
        "class_cfg": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Notification",
    "summary": "",
    "description": "",
    "description_parts": []
}