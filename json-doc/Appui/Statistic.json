{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Statistic",
    "namespace": true,
    "realName": "Statistic",
    "realNamespace": "bbn\\Appui",
    "traits": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Statistic.php",
    "startLine": 28,
    "endLine": 1210,
    "numMethods": 40,
    "numProperties": 26,
    "numConstants": 1,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null,
        "is_total": false,
        "db_cfg": null,
        "ocfg": null,
        "inserter": null,
        "updater": null,
        "deleter": null,
        "db": null,
        "errors": [],
        "error": false,
        "errorCode": false,
        "errorCodes": [],
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Statistic",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct(Db $db, string $code, array $cfg = [])\n  {\n    \/\/ Parent constructors\n    parent::__construct($db);\n    self::optionalInit();\n    \/\/ Db ok\n    if (!$this->db->check()) {\n      throw new Exception(X::_(\"The database is in error mode\"));\n    }\n\n    \/\/ History ok\n    if (!History::isInit()) {\n      throw new Exception(X::_(\"History is disabled\"));\n    }\n\n    \/\/ Option found\n    if (!($this->id_option = self::getOptionId($code, 'active'))) {\n      throw new Exception(X::_(\"No id option corresponding to code in active statistics\"));\n    }\n\n    \/\/ Cfg retrieved\n    if (!($this->ocfg = self::getOptionsObject()->option($this->id_option))) {\n      throw new Exception(X::_(\"No cfg option corresponding to id in active statistics\"));\n    }\n\n    $cfg = array_merge($cfg, $this->ocfg);\n    \/\/ Params ok\n    if (!X::hasProps($cfg, ['type', 'table'], true) || !X::is_string($cfg['type'], $cfg['table'])) {\n      X::log($cfg);\n      throw new Exception(X::_(\"Invalid configuration\"));\n    }\n    \/\/ Correcting case\n    $cfg['type'] = strtolower($cfg['type']);\n\n    \/\/ Type accepted\n    if (X::indexOf(self::$types, $cfg['type']) === -1) {\n      throw new Exception(X::_(\"Invalid type in configuration\"));\n    }\n\n    \/\/ History config retrieved\n    if ($this->hcfg = History::getTableCfg($cfg['table'])) {\n      \/\/ For sum and avg types field is mandatory\n      if ((X::indexOf(['sum', 'avg'], $cfg['type']) > -1) && !isset($cfg['field'])) {\n        throw new Exception(X::_(\"The field parameter is mandatory for sum and avg types\"));\n      }\n\n      $this->code = $code;\n      $this->dbo  = new Database($this->db);\n      if (isset($cfg['field'])) {\n        if (!($this->_id_field = $this->dbo->columnId($cfg['field'], $cfg['table']))) {\n          throw new Exception(X::_(\"The field parameter must be a known field of the table (asked %s in %s)\", $cfg['field'], $cfg['table']));\n        }\n      }\n\n      if (($cfg['type'] === 'update') && empty($this->_id_field)) {\n        throw new Exception(X::_(\"The field parameter is mandatory for statistics of type update\"));\n      }\n\n      $this->type = $cfg['type'];\n      $this->cfg  = $cfg;\n      if (!empty($cfg['inserter']) && Str::isUid($cfg['inserter'])) {\n        $this->inserter = $cfg['inserter'];\n      }\n\n      if (!empty($cfg['updater']) && Str::isUid($cfg['updater'])) {\n        $this->updater = $cfg['updater'];\n      }\n\n      if (!empty($cfg['deleter']) && Str::isUid($cfg['deleter'])) {\n        $this->deleter = $cfg['deleter'];\n      }\n\n      \/\/ Creating the configuration\n      $req          = $this->_set_request_cfg();\n      X::log([$cfg, $req], 'stat');\n      $this->db_cfg = $this->db->processCfg($req);\n    }\n    \/\/ Right props in cfg\n  }",
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Db",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Db.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function __construct(dbClass $db)\n  {\n    $this->db = $db;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "__construct",
                "returns": [],
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "type_arr": [
                            "bbn\\Db"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ],
                "doc": {
                    "description": "Constructor.\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "dbClass",
                            "name": "$db",
                            "description": "A database connection"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * Constructor.\n   *\n   * @param dbClass $db A database connection\n   *\/"
            },
            "trait": false,
            "startLine": 125,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "type_arr": [
                        "bbn\\Db"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database connection"
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The code of the option"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The configuration"
                }
            ],
            "doc": {
                "description": "Constructor.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "bbn\\Db",
                        "name": "$db",
                        "description": "The database connection"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$code",
                        "description": "The code of the option"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$cfg",
                        "description": "The configuration"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Constructor.\n   *\n   * @param bbn\\Db $db   The database connection\n   * @param string $code The code of the option\n   * @param array  $cfg  The configuration\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks if the constructor is gone through.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check(): bool\n  {\n    return (bool)$this->ocfg;\n  }",
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 71,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "check",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 211,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Checks if the constructor is gone through.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks if the constructor is gone through.\n   *\n   * @return bool\n   *\/"
        },
        "getCode": {
            "name": "getCode",
            "summary": "Code getter.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getCode(): ?string\n  {\n    if ($this->check()) {\n      return $this->code;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 222,
            "endLine": 229,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getCode",
            "returns": [
                null,
                "string"
            ],
            "arguments": [],
            "doc": {
                "description": "Code getter.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Code getter.\n   *\n   * @return string|null\n   *\/"
        },
        "run": {
            "name": "run",
            "summary": "Run the stat",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function run($start, $end = null): mixed\n  {\n    if ($this->db_cfg && !empty($this->db_cfg['values'])) {\n      if (is_string($start)) {\n        $start = strtotime($start . (strlen($start) === 10 ? ' 00:00:00' : ''));\n      }\n\n      if (!$start || !is_int($start)) {\n        throw new Exception(X::_('Impossible to read the given start date'));\n      }\n\n      if (!$this->is_total) {\n        if (!$end || ($end <= $start)) {\n          $end = mktime(23, 59, 59, Date('n', $start), Date('j', $start), Date('Y', $start));\n        }\n\n        if (!$end || !is_int($end)) {\n          throw new Exception(X::_('Impossible to read the given end date'));\n        }\n      }\n\n      $vals = [];\n      foreach ($this->db_cfg['values'] as $v) {\n        if (!$this->is_total && ($v === self::$_placeholder . '2')) {\n          $vals[] = $end;\n        } else {\n          $vals[] = $v === self::$_placeholder ? $start : $v;\n        }\n      }\n\n      $cfg           = $this->db_cfg;\n      $cfg['values'] = $vals;\n      try {\n        $res = $this->db->selectOne($cfg);\n      }\n      catch (Exception $e) {\n        X::log([$e->getMessage(), $this->ocfg, $cfg['sql'], $cfg['values']], 'stat');\n        throw new Exception($e);\n      }\n\n      return $res;\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 239,
            "endLine": 281,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "run",
            "returns": [
                null,
                "mixed"
            ],
            "arguments": [
                {
                    "name": "start",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Run the stat\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "[type]",
                        "name": "$start"
                    },
                    {
                        "tag": "param",
                        "type": "[type]",
                        "name": "$end"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Run the stat\n   *\n   * @param [type] $start\n   * @param [type] $end\n   * @return mixed\n   *\/"
        },
        "update": {
            "name": "update",
            "summary": "Update a statistic in the table bbn_statistics from the start of time",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function update(string|null $variant = null, string|null $start = null): ?int\n  {\n    if ($this->check()) {\n      if (!$variant) {\n        $variant = 'default';\n      }\n\n      if (!($real_start = $this->db->selectOne('bbn_statistics', 'MAX(day)', ['id_option' => $this->id_option, 'code' => $variant]))) {\n        if ($start) {\n          $real_start = $start;\n        } elseif (!empty($this->ocfg['start'])) {\n          $real_start = $this->ocfg['start'];\n        } else {\n          $real_start = self::ODATE;\n        }\n      }\n\n      if (Str::isDateSql($real_start)) {\n        $num_days  = 0;\n        $num       = $this->db->count(\n          'bbn_statistics',\n          [\n            'id_option' => $this->id_option,\n            'code' => $variant\n          ]\n        );\n        $today     = date('Ymd');\n        $last_res  = null;\n        $last_date = $real_start;\n        $time      = mktime(\n          12,\n          0,\n          0,\n          (int)substr($real_start, 5, 2),\n          (int)substr($real_start, 8, 2),\n          (int)substr($real_start, 0, 4)\n        );\n        $test      = date('Ymd', $time);\n        while ($test <= $today) {\n          $res = $this->run($real_start);\n          \/\/X::adump($res, $this->db->last(), $this->db->getLastValues());\n          \/*\n          if ($num_days) {\n            X::hdump($res, $this->db->getLastValues());\n          }\n          else {\n            X::hdump($res, $this->db->last(), $this->db->getLastValues());\n          }\n          *\/\n\n          $num_days++;\n          if (!$res) {\n            $res = 0;\n          }\n\n          if (($res !== $last_res) || !$num) {\n            if ($this->db->count(\n              'bbn_statistics',\n              [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $real_start\n              ]\n            )) {\n              $this->db->update(\n                'bbn_statistics',\n                [\n                  'res' => $res\n                ],\n                [\n                  'id_option' => $this->ocfg['id'],\n                  'code' => $variant,\n                  'day' => $real_start\n                ]\n              );\n            } else {\n              $this->db->insert(\n                'bbn_statistics',\n                [\n                  'id_option' => $this->ocfg['id'],\n                  'code' => $variant,\n                  'day' => $real_start,\n                  'res' => $res\n                ]\n              );\n            }\n\n            $last_res = $res;\n            $num++;\n          } else {\n            $this->db->update(\n              'bbn_statistics',\n              [\n                'day' => $real_start\n              ],\n              [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $last_date\n              ]\n            );\n          }\n\n          $last_date  = $real_start;\n          $time      += 24 * 3600;\n          $real_start = date('Y-m-d', $time);\n          $test       = date('Ymd', $time);\n        }\n\n        return $num_days;\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 291,
            "endLine": 405,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "shortName": "update",
            "returns": [
                null,
                "int"
            ],
            "arguments": [
                {
                    "name": "variant",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Start of time"
                }
            ],
            "doc": {
                "description": "Update a statistic in the table bbn_statistics from the start of time\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$variant"
                    },
                    {
                        "tag": "param",
                        "type": "string|null",
                        "name": "$start",
                        "description": "Start of time"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Update a statistic in the table bbn_statistics from the start of time\n   *\n   * @param string      $variant\n   * @param string|null $start   Start of time\n   * @return int\n   *\/"
        },
        "serieByDate": {
            "name": "serieByDate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function serieByDate($unit, string $end, string $start): ?array\n  {\n    if (empty($unit)) {\n      $unit = 'd';\n    }\n\n    if (Str::isDateSql($start, $end)) {\n      $tsStart = mktime(12, 0, 0, substr($start, 5, 2), substr($start, 8, 2), substr($start, 0, 4));\n      $res = [];\n      $labels = [];\n      switch ($unit) {\n        case 'd':\n          $label = \"%s\";\n          $format = \"d\/m\";\n          break;\n        case 'w':\n          $label = \"week %s\";\n          $format = \"W\";\n          break;\n        case 'm':\n          $label = \"%s\";\n          $format = \"m\/Y\";\n          break;\n        case 'y':\n          $label = \"%s\";\n          $format = \"Y\";\n          break;\n      }\n      $idx = null;\n\n      $total = 0;\n      while ($start <= $end) {\n        $new_idx = date($format, $tsStart);\n        if ($new_idx !== $idx) {\n          if (!is_null($idx)) {\n            $res[] = $total;\n          }\n\n          $labels[] = $start;\n          \/\/$labels[] = sprintf($label, $new_idx);\n          $total = 0;\n          $idx = $new_idx;\n        }\n\n        if ($tmp = $this->db->rselect(\n          'bbn_statistics',\n          ['day', 'res'],\n          [\n            'id_option' => $this->id_option,\n            'day' => $start\n          ]\n        )) {\n          if (empty($this->ocfg['total'])) {\n            $total += (int)$tmp['res'];\n          } else {\n            $total = (int)$tmp['res'];\n          }\n        }\n\n        $tsStart = strtotime(\"+ 1 day\", $tsStart);\n        $start = date('Y-m-d', $tsStart);\n        if ($start > $end) {\n          $res[] = $total;\n        }\n      }\n\n      return [\n        'labels' => $labels,\n        'series' => $res\n      ];\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 408,
            "endLine": 481,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "shortName": "serieByDate",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "unit",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "serie": {
            "name": "serie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function serie(int $values = 30, string $unit = 'd', string|null $end = null): ?array\n  {\n    if ($this->check()) {\n      if (!Str::isDateSql($end)) {\n        $end = date('Y-m-d');\n      }\n      $tst = mktime(12, 0, 0, substr($end, 5, 2), substr($end, 8, 2), substr($end, 0, 4));\n      switch ($unit) {\n        case 'd':\n          $exp = 'days';\n          break;\n        case 'w':\n          $exp = 'weeks';\n          break;\n        case 'm':\n          $exp = 'month';\n          break;\n        case 'y':\n          $exp = 'years';\n          break;\n      }\n\n      $start = date('Y-m-d', strtotime(\"$values $exp ago\", $tst));\n      return $this->serieByDate($unit, $end, $start);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 483,
            "endLine": 510,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "shortName": "serie",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "unit",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "d",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serieValues": {
            "name": "serieValues",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function serieValues(int $values = 30, string $unit = 'd', string|null $end = null): ?array\n  {\n    if ($res = $this->serie($values, $unit, $end)) {\n      return $res['series'];\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 513,
            "endLine": 520,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "shortName": "serieValues",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "unit",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "d",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serieByPeriod": {
            "name": "serieByPeriod",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function serieByPeriod(int $values = 30, string $unit = 'm', string|null $end = null, string|null $pstart = null): ?array\n  {\n    if ($this->ocfg && $values) {\n      if (!$end) {\n        $end = date('Y-m-d');\n      }\n\n      if (Str::isDateSql($end)) {\n        switch (strtolower($unit)) {\n          case 'y':\n            $funit = 'years';\n            $tmp   = date('Y-m-d', mktime(23, 59, 59, 12, 31, substr($end, 0, 4)));\n            if ($end !== $tmp) {\n              $end = date('Y-m-d', mktime(23, 59, 59, 12, 31, (int)substr($end, 0, 4) - 1));\n            }\n            break;\n          case 't':\n            $funit   = 'months';\n            $values *= 3;\n          case 'm':\n            $funit  = 'months';\n            $month  = (int)substr($end, 5, 2);\n            $remain = $month % 3;\n            if ($remain) {\n              $remain = 3 - $remain;\n            }\n\n            $tmp = date('Y-m-d', mktime(23, 59, 59, $month + 1, 0, substr($end, 0, 4)));\n            if (($end !== $tmp) || $remain) {\n              $end = date('Y-m-d', mktime(23, 59, 59, $month - $remain + 1, 0, (int)substr($end, 0, 4)));\n            }\n            break;\n          case 'w':\n            $funit = 'weeks';\n\n            break;\n          case 'd':\n            $funit = 'days';\n            break;\n        }\n\n        if (isset($funit)) {\n          $dend   = new DateTime($end);\n          $dstart = $dend->sub(date_interval_create_from_date_string(\"$values $funit\"));\n          $start  = $dstart->format('Y-m-d');\n          $res    = [\n            'labels' => [],\n            'series' => []\n          ];\n          if ($all = $this->db->rselectAll(\n            'bbn_statistics',\n            ['day', 'res'],\n            [\n              [\n                'field' => 'id_option',\n                'value' => $this->id_option\n              ], [\n                'field' => 'day',\n                'operator' => '<=',\n                'value' => $end\n              ], [\n                'field' => 'day',\n                'operator' => '>=',\n                'value' => $start\n              ]\n            ],\n            [\n              'day' => 'ASC'\n            ]\n          )) {\n            $last = count($all) - 1;\n            if (($all[$last]['day'] !== $end) && ($tmp = $this->db->rselect(\n                'bbn_statistics',\n                ['day', 'res'],\n                [\n                  [\n                    'field' => 'id_option',\n                    'value' => $this->id_option\n                  ], [\n                    'field' => 'day',\n                    'operator' => '>',\n                    'value' => $end\n                  ]\n                ],\n                [\n                  'day' => 'ASC'\n                ]\n              ))\n            ) {\n              $all[] = $tmp;\n              $last++;\n            }\n\n            $dcurrent = new DateTime($start);\n            $num_days = (int)$dend->diff($dcurrent)->format('%a');\n            $diff     = $num_days;\n            $interval = (int)floor($num_days \/ $values);\n            $num      = 0;\n            $idx      = 0;\n            $didx     = 0;\n            while ($diff >= 0) {\n              $current = $dcurrent->format('Y-m-d');\n              if ($num === $interval) {\n                $num = 0;\n              }\n\n              if (!$num) {\n                $res['labels'][$didx] = $current;\n                $res['series'][$didx] = $all[$idx]['res'];\n                $didx++;\n              } elseif (empty($this->ocfg['total'])) {\n                $res['labels'][$didx]  = $current;\n                $res['series'][$didx] += (int)$all[$idx]['res'];\n              }\n\n              if (!$diff) {\n                break;\n              }\n\n              if ($current === $all[$idx]['day']) {\n                $idx++;\n              }\n\n              $dcurrent = $dcurrent->add(date_interval_create_from_date_string('1 days'));\n              $diff     = (int)$dend->diff($dcurrent)->format('%a');\n              $num++;\n            }\n          }\n\n          return $res;\n        }\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 523,
            "endLine": 658,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 0,
            "shortName": "serieByPeriod",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "unit",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "m",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "pstart",
                    "position": 3,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "_set_request_cfg": {
            "name": "_set_request_cfg",
            "summary": "Creates the proper request parameters from the current configuration",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_request_cfg(): ?array\n  {\n    if ($this->type) {\n      $cfg = [\n        'tables' => ['bbn_history'],\n        'join' => [\n          [\n            'table' => $this->cfg['table'],\n            'on' => [\n              [\n                'field' => $this->cfg['table'] . '.' . $this->hcfg['primary'],\n                'exp' => 'bbn_history.uid'\n              ]\n            ]\n          ]\n        ],\n        'where' => [\n          'logic' => 'AND',\n          'conditions' => [[\n            'field' => 'bbn_history.tst',\n            'operator' => '<=',\n            'value' => self::$_placeholder . ($this->is_total ? '' : '2')\n          ]]\n        ]\n      ];\n      if ($this->inserter) {\n        if ($this->type === 'insert') {\n          $cfg['where']['conditions'][] = [\n            'field' => 'bbn_history.usr',\n            'value' => $this->inserter\n          ];\n        } else {\n          $alias                        = Str::genpwd(12);\n          $cfg['join'][]                = [\n            'table' => 'bbn_history',\n            'alias' => $alias,\n            'on' => [\n              [\n                'field' => 'bbn_history.uid',\n                'exp' => $alias . '.uid'\n              ], [\n                'field' => 'bbn_history.tst',\n                'operator' => '>',\n                'exp' => $alias . '.tst'\n              ], [\n                'field' => $alias . '.opr',\n                'value' => 'INSERT'\n              ]\n            ]\n          ];\n          $cfg['where']['conditions'][] = [\n            'field' => $alias . '.usr',\n            'value' => $this->inserter\n          ];\n        }\n      }\n\n      switch ($this->type) {\n        case 'insert':\n          $this->_set_insert_cfg($cfg);\n          break;\n        case 'update':\n          $this->_set_update_cfg($cfg);\n          break;\n        case 'delete':\n          $this->_set_delete_cfg($cfg);\n          break;\n        case 'restore':\n          $this->_set_restore_cfg($cfg);\n          break;\n        case 'count':\n          $this->_set_count_cfg($cfg);\n          break;\n        case 'sum':\n        case 'avg':\n          $this->_set_fn_cfg($this->type, $cfg);\n          break;\n      }\n\n      if (\n        X::hasProp($this->cfg, 'filter', true)\n        && ($conditions = $this->db->treatConditions($this->cfg['filter']))\n        && !empty($conditions['where']['conditions'])\n        && ($tmp2 = $this->_set_filter($conditions['where']))\n      ) {\n        foreach ($tmp2['join'] as $j) {\n          $cfg['join'][] = $j;\n        }\n\n        if (!empty($tmp2['filter'])) {\n          $cfg['where']['conditions'][] = $tmp2['filter'];\n        }\n      }\n\n      $this->request = $cfg;\n      return $cfg;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 666,
            "endLine": 765,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "_set_request_cfg",
            "returns": [
                null,
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Creates the proper request parameters from the current configuration\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Creates the proper request parameters from the current configuration\n   *\n   * @return array|null\n   *\/"
        },
        "_set_count_cfg": {
            "name": "_set_count_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_count_cfg(array &$cfg): array\n  {\n    $alias         = Str::genpwd(12);\n    $cfg['fields'] = ['COUNT(DISTINCT bbn_history.uid)'];\n    $cfg['join'][] = [\n      'table' => 'bbn_history',\n      'alias' => $alias,\n      'type' => 'left',\n      'on' => [\n        \/\/ Same UID\n        [\n          'field' => $alias . '.uid',\n          'operator' => '=',\n          'exp' => 'bbn_history.uid'\n        ],\n        \/\/ Delete action\n        [\n          'field' => $alias . '.opr',\n          'operator' => 'LIKE',\n          'value' => 'DELETE'\n        ],\n        \/\/ Performed after the INSERT\n        [\n          'field' => $alias . '.tst',\n          'operator' => '>',\n          'exp' => 'bbn_history.tst'\n        ],\n        \/\/ Performed before the end of the period\n        [\n          'field' => $alias . '.tst',\n          'operator' => '<=',\n          'value' => self::$_placeholder . ($this->is_total ? '' : '2')\n        ]\n      ]\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.opr',\n      'operator' => 'LIKE',\n      'value' => 'INSERT'\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => $alias . '.uid',\n      'operator' => 'isnull'\n    ];\n    return $cfg;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 768,
            "endLine": 813,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_count_cfg",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_fn_cfg": {
            "name": "_set_fn_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_fn_cfg($fn, array &$cfg): array\n  {\n    $alias         = Str::genpwd(12);\n    $alias1        = Str::genpwd(12);\n    $alias2        = Str::genpwd(12);\n    $field         = $this->db->cfn($this->cfg['field'], $this->cfg['table'], true);\n    $fn            = strtoupper($fn);\n    $cfg['fields'] = [\"$fn(IFNULL($alias1.val, $field))\"];\n    $cfg['join'][] = [\n      'table' => 'bbn_history',\n      'alias' => $alias,\n      'type' => 'left',\n      'on' => [\n        \/\/ Same UID\n        [\n          'field' => $alias . '.uid',\n          'operator' => '=',\n          'exp' => 'bbn_history.uid'\n        ],\n        \/\/ Delete action\n        [\n          'field' => $alias . '.opr',\n          'operator' => 'LIKE',\n          'value' => 'DELETE'\n        ],\n        \/\/ Performed after the INSERT\n        [\n          'field' => $alias . '.tst',\n          'operator' => '>',\n          'exp' => 'bbn_history.tst'\n        ],\n        \/\/ Performed before the end of the period\n        [\n          'field' => $alias . '.tst',\n          'operator' => '<=',\n          'value' => self::$_placeholder . ($this->is_total ? '' : '2')\n        ]\n      ]\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.opr',\n      'operator' => 'LIKE',\n      'value' => 'INSERT'\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => $alias . '.uid',\n      'operator' => 'isnull'\n    ];\n    $join1                        = [\n      'table' => 'bbn_history',\n      'alias' => $alias1,\n      'type' => 'LEFT',\n      'on' => [\n        [\n          'field' => $alias1 . '.uid',\n          'operator' => '=',\n          'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n        ], [\n          'field' => $alias1 . '.opr',\n          'operator' => 'LIKE',\n          'value' => 'UPDATE'\n        ], [\n          'field' => $alias1 . '.col',\n          'operator' => '=',\n          'value' => $this->_id_field\n        ], [\n          'field' => $alias1 . '.tst',\n          'operator' => '>',\n          'value' => self::$_placeholder . '2'\n        ]\n      ]\n    ];\n    $join2                        = [\n      'table' => 'bbn_history',\n      'alias' => $alias2,\n      'type' => 'LEFT',\n      'on' => [\n        [\n          'field' => $alias2 . '.uid',\n          'operator' => '=',\n          'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n        ], [\n          'field' => $alias2 . '.col',\n          'operator' => '=',\n          'exp' => $alias1 . '.col'\n        ], [\n          'field' => $alias2 . '.opr',\n          'operator' => 'LIKE',\n          'exp' => $alias1 . '.opr'\n        ], [\n          'field' => $alias2 . '.tst',\n          'operator' => '<',\n          'exp' => $alias1 . '.tst'\n        ]\n      ]\n    ];\n    $cfg['join'][]                = $join1;\n    $cfg['join'][]                = $join2;\n    $cfg['where']['conditions'][] = [\n      'field' => $alias2 . '.uid',\n      'operator' => 'isnull'\n    ];\n    return $cfg;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 816,
            "endLine": 919,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "_set_fn_cfg",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "fn",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_insert_cfg": {
            "name": "_set_insert_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_insert_cfg(array &$cfg): array\n  {\n    $cfg['fields']                = ['COUNT(DISTINCT bbn_history.uid)'];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.opr',\n      'operator' => 'LIKE',\n      'value' => 'INSERT'\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.tst',\n      'operator' => '>=',\n      'value' => self::$_placeholder\n    ];\n    return $cfg;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 922,
            "endLine": 936,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_insert_cfg",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_update_cfg": {
            "name": "_set_update_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_update_cfg(array &$cfg)\n  {\n    if (empty($this->cfg['field'])) {\n      throw new Exception(X::_(\"The parameters field and value must be given for update statistics\"));\n    }\n\n    if (!$this->_id_field) {\n      throw new Exception(X::_(\"The parameters field must be a valid column from the given table\"));\n    }\n\n    $cfg['fields']                = ['COUNT(DISTINCT bbn_history.uid)'];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.col',\n      'value' => $this->_id_field\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.opr',\n      'value' => 'UPDATE'\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.tst',\n      'operator' => '>=',\n      'value' => self::$_placeholder\n    ];\n    if (array_key_exists('value', $this->cfg)) {\n      $alias1                       = Str::genpwd(12);\n      $alias2                       = Str::genpwd(12);\n      $join1                        = [\n        'table' => 'bbn_history',\n        'alias' => $alias1,\n        'type' => 'LEFT',\n        'on' => [\n          [\n            'field' => $alias1 . '.uid',\n            'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n          ], [\n            'field' => $alias1 . '.opr',\n            'exp' => 'bbn_history.opr'\n          ], [\n            'field' => $alias1 . '.col',\n            'exp' => 'bbn_history.col'\n          ], [\n            'field' => $alias1 . '.tst',\n            'operator' => '>',\n            'exp' => 'bbn_history.tst'\n          ]\n        ]\n      ];\n      $join2                        = [\n        'table' => 'bbn_history',\n        'alias' => $alias2,\n        'type' => 'LEFT',\n        'on' => [\n          [\n            'field' => $alias2 . '.uid',\n            'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n          ], [\n            'field' => $alias2 . '.col',\n            'exp' => $alias1 . '.col'\n          ], [\n            'field' => $alias2 . '.opr',\n            'exp' => $alias1 . '.opr'\n          ], [\n            'field' => $alias2 . '.tst',\n            'operator' => '<',\n            'exp' => $alias1 . '.tst'\n          ]\n        ]\n      ];\n      $cd                           = [\n        'logic' => 'OR',\n        'conditions' => [\n          [\n            'logic' => 'AND',\n            'conditions' => [\n              is_null($this->cfg['value']) ? \n              [\n                'field' => $this->db->cfn($this->cfg['field'], $this->cfg['table']),\n                'operator' => 'isnull'\n              ] : [\n                'field' => $this->db->cfn($this->cfg['field'], $this->cfg['table']),\n                'operator' => $this->cfg['operator'] ?? '=',\n                'value' => $this->cfg['value']\n              ], [\n                'field' => $alias1 . '.uid',\n                'operator' => 'isnull'\n              ]\n            ]\n          ], is_null($this->cfg['value']) ? [\n            'field' => 'IFNULL(' . $alias1 . '.ref, ' . $alias1 . '.val)',\n            'operator' => 'isnull'\n          ] : [\n            'field' => 'IFNULL(' . $alias1 . '.ref, ' . $alias1 . '.val)',\n            'operator' => $this->cfg['operator'] ?? '=',\n            'value' => $this->cfg['value']\n          ]\n        ]\n      ];\n      $cfg['join'][]                = $join1;\n      $cfg['join'][]                = $join2;\n      $cfg['where']['conditions'][] = [\n        'logic' => 'AND',\n        'conditions' => [\n          $cd,\n          [\n            'field' => $alias2 . '.uid',\n            'operator' => 'isnull'\n          ]\n        ]\n      ];\n    }\n\n    return $cfg;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 939,
            "endLine": 1052,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_update_cfg",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_delete_cfg": {
            "name": "_set_delete_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_delete_cfg(array &$cfg)\n  {\n    $cfg['fields']                = ['COUNT(DISTINCT bbn_history.uid)'];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.opr',\n      'value' => 'DELETE'\n    ];\n    $cfg['where']['conditions'][] = [\n      'field' => 'bbn_history.tst',\n      'operator' => '>=',\n      'value' => self::$_placeholder\n    ];\n    return $cfg;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1055,
            "endLine": 1068,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_delete_cfg",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_restore_cfg": {
            "name": "_set_restore_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_restore_cfg(array &$cfg)\n  {\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1071,
            "endLine": 1073,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_restore_cfg",
            "returns": [],
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_filter": {
            "name": "_set_filter",
            "summary": "Combines the history filters with config filters recursively.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Statistic.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_filter(array $conditions, int $tst = 0): ?array\n  {\n    if (!empty($conditions['conditions'])) {\n      $flt  = [\n        'logic' => $conditions['logic'],\n        'conditions' => []\n      ];\n      $join = [];\n      foreach ($conditions['conditions'] as $c) {\n        if (!empty($c['conditions'])) {\n          if ($tmp = $this->_set_filter($c)) {\n            if (!empty($tmp['join'])) {\n              foreach ($tmp['join'] as $j) {\n                $join[] = $j;\n              }\n            }\n\n            if (X::hasDeepProp($tmp, ['filter', 'conditions'], true)) {\n              $flt['conditions'][] = $tmp['filter'];\n            }\n          }\n        }\n        \/\/ Adding for each filter 2 alternative conditions:\n        \/\/ - The value matches and has not been changed since then\n        \/\/ - The value used to match but has been changed\n        elseif ($id_col = $this->dbo->columnId($c['field'], $this->cfg['table'])) {\n          $alias1 = Str::genpwd(12);\n          $alias2 = Str::genpwd(12);\n          $join1  = [\n            'table' => 'bbn_history',\n            'alias' => $alias1,\n            'type' => 'LEFT',\n            'on' => [\n              [\n                'field' => $alias1 . '.uid',\n                'operator' => '=',\n                'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n              ], [\n                'field' => $alias1 . '.opr',\n                'operator' => 'LIKE',\n                'value' => 'UPDATE'\n              ], [\n                'field' => $alias1 . '.col',\n                'operator' => '=',\n                'value' => $id_col\n              ], [\n                'field' => $alias1 . '.tst',\n                'operator' => '>',\n                'value' => self::$_placeholder\n              ]\n            ]\n          ];\n          $join2  = [\n            'table' => 'bbn_history',\n            'alias' => $alias2,\n            'type' => 'LEFT',\n            'on' => [\n              [\n                'field' => $alias2 . '.uid',\n                'operator' => '=',\n                'exp' => $this->cfg['table'] . '.' . $this->hcfg['primary']\n              ], [\n                'field' => $alias2 . '.col',\n                'operator' => '=',\n                'exp' => $alias1 . '.col'\n              ], [\n                'field' => $alias2 . '.opr',\n                'operator' => 'LIKE',\n                'exp' => $alias1 . '.opr'\n              ], [\n                'field' => $alias2 . '.tst',\n                'operator' => '<',\n                'exp' => $alias1 . '.tst'\n              ]\n            ]\n          ];\n          $cd     = [\n            'logic' => 'OR',\n            'conditions' => [\n              [\n                'logic' => 'AND',\n                'conditions' => [\n                  [\n                    'field' => $this->db->cfn($c['field'], $this->cfg['table']),\n                    'operator' => $c['operator']\n                  ], [\n                    'field' => $alias1 . '.uid',\n                    'operator' => 'isnull'\n                  ]\n                ]\n              ], [\n                'field' => 'IFNULL(' . $alias1 . '.ref, ' . $alias1 . '.val)',\n                'operator' => $c['operator']\n              ]\n            ]\n          ];\n          if (!empty($c['exp'])) {\n            $cd['conditions'][0]['conditions'][0]['exp'] = $c['exp'];\n            $cd['conditions'][1]['exp']                  = $c['exp'];\n          } elseif (X::hasProp($c, 'value')) {\n            $cd['conditions'][0]['conditions'][0]['value'] = $c['value'];\n            $cd['conditions'][1]['value']                  = $c['value'];\n          }\n\n          $join[]              = $join1;\n          $join[]              = $join2;\n          $tmp                 = [\n            'logic' => 'AND',\n            'conditions' => [\n              $cd,\n              [\n                'field' => $alias2 . '.uid',\n                'operator' => 'isnull'\n              ]\n            ]\n          ];\n          $flt['conditions'][] = $tmp;\n        }\n      }\n\n      return ['join' => $join, 'filter' => $flt];\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1085,
            "endLine": 1209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_filter",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "conditions",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "A conditions array in a conditions prop."
                },
                {
                    "name": "tst",
                    "position": 1,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": "",
                    "description": "A Timestamp."
                }
            ],
            "doc": {
                "description": "Combines the history filters with config filters recursively.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$conditions",
                        "description": "A conditions array in a conditions prop."
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$tst",
                        "description": "A Timestamp."
                    }
                ],
                "return": "",
                "todo": {
                    "tag": "todo",
                    "text": "Useless second argument, what for?"
                }
            },
            "comments": "  \/**\n   * Combines the history filters with config filters recursively.\n   *\n   * @todo  Useless second argument, what for?\n   *\n   * @param array $conditions A conditions array in a conditions prop.\n   * @param int   $tst        A Timestamp.\n   * @return array|null\n   *\/"
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 57,
                "endLine": 64,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "test",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 57,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "test",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "setError": {
            "name": "setError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
            "parent": {
                "name": "setError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 81,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 1,
                "shortName": "setError",
                "returns": [],
                "arguments": [
                    {
                        "name": "err",
                        "position": 0,
                        "type": "string",
                        "type_arr": [
                            "string"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "code",
                        "position": 1,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 81,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setError",
            "returns": [],
            "arguments": [
                {
                    "name": "err",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getError()\n  {\n    return $this->error;\n  }",
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getError()\n  {\n    return $this->error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 98,
                "endLine": 101,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 98,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": []
        },
        "getErrorCode": {
            "name": "getErrorCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
            "parent": {
                "name": "getErrorCode",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 104,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrorCode",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorCode",
            "returns": [],
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 110,
                "endLine": 113,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrors",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrors",
            "returns": [],
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 116,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "log",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 116,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": []
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
                "parent": false,
                "trait": false,
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "isDebug",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * @return boolean\n   *\/"
            },
            "trait": false,
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isDebug",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return boolean\n   *\/"
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "setDebug",
                "returns": [],
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "type_arr": [
                            "bool"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [
                        {
                            "tag": "param",
                            "type": "boolean",
                            "name": "$debug"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
            },
            "trait": false,
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDebug",
            "returns": [],
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "boolean",
                        "name": "$debug"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
        },
        "optionalInit": {
            "name": "optionalInit",
            "summary": "Returns the option's root ID for the current class based on {@link $option_root_code}",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "protected",
            "final": false,
            "code": "  protected static function optionalInit(array|null $path = null)\n  {\n    if (!self::$optional_is_init) {\n      $opt = Option::getInstance();\n      $cls = false;\n      if (!$opt) {\n        throw new Exception(X::_(\"There is no options object as needed by\").' '.__CLASS__);\n      }\n\n      if (!$path) {\n        $tmp = explode('\\\\', __CLASS__);\n        $cls = strtolower(end($tmp));\n        $path = [$cls, 'appui', 'plugins'];\n      }\n\n      self::$option_root_id = $opt->fromCode(...$path);\n      \/\/X::ddump($path, self::$option_root_id);\n      if (!self::$option_root_id) {\n        if (empty($cls)) {\n          throw new Exception(\"Impossible to find the option \".json_encode($path).\" !!! for \".__CLASS__);\n        }\n\n        throw new Exception(\"Impossible to find the option $cls for \".__CLASS__);\n      }\n\n      self::$optional_is_init = true;\n    }\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 41,
            "endLine": 68,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "optionalInit",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the option's root ID for the current class based on {@link $option_root_code}\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the option's root ID for the current class based on {@link $option_root_code}\n   *\n   * @return false|int\n   *\/"
        },
        "initOptionalGlobal": {
            "name": "initOptionalGlobal",
            "summary": "Sets only once all the constants used by the class.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "protected",
            "final": false,
            "code": "  protected static function initOptionalGlobal(Option $opt, array|null $path = null)\n  {\n    if (!self::$optional_is_init) {\n      if (!$path) {\n        $tmp                   = explode('\\\\', __CLASS__);\n        $cls                   = end($tmp);\n        $path                  = [$cls, 'appui'];\n      }\n\n      self::$option_root_id = $opt->fromCode(...$path);\n      if (!self::$option_root_id) {\n        X::log(\"Impossible to find the option $cls for \".__CLASS__, 'errors');\n        return;\n      }\n\n      self::$optional_is_init = true;\n    }\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 78,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "initOptionalGlobal",
            "returns": [],
            "arguments": [
                {
                    "name": "opt",
                    "position": 0,
                    "type": "bbn\\Appui\\Option",
                    "type_arr": [
                        "bbn\\Appui\\Option"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "path",
                    "position": 1,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sets only once all the constants used by the class.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "Option",
                        "name": "$opt"
                    },
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$path"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets only once all the constants used by the class.\n   *\n   * @param Option $opt\n   * @param array             $path\n   * @return void\n   *\/"
        },
        "initOptional": {
            "name": "initOptional",
            "summary": "Defines the options prop and launches the static init method.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function initOptional(array|null $path = null)\n  {\n    $this->options = Option::getInstance();\n    if (!$this->options) {\n      throw new Exception(X::_(\"There is no options object as needed by\").' '.__CLASS__);\n    }\n\n    self::initOptionalGlobal($this->options, $path);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 104,
            "endLine": 112,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "initOptional",
            "returns": [],
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "null|array",
                    "type_arr": [
                        "null",
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Defines the options prop and launches the static init method.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$path"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Defines the options prop and launches the static init method.\n   *\n   * @param array $path\n   * @return void\n   *\/"
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionRoot()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 115,
            "endLine": 119,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionRoot",
            "returns": [],
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsObject(): Option\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 122,
            "endLine": 130,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionsObject",
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionId(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return self::getOptionsObject()->fromCode(...$codes);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 139,
            "endLine": 143,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionId",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns The option's ID of a category, i.e. direct children of option's root\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$code"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns The option's ID of a category, i.e. direct children of option's root\n   *\n   * @param string $code\n   * @return int|false\n   *\/"
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsIds(...$codes): array\n  {\n    $codes[] = self::getOptionRoot();\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...$codes),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 152,
            "endLine": 163,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionsIds",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Undocumented function\n",
                "params": [],
                "return": "",
                "todo": {
                    "tag": "todo",
                    "text": "Check it, it doesn't seem ok"
                }
            },
            "comments": "  \/**\n   * Undocumented function\n   *\n   * @todo Check it, it doesn't seem ok\n   * @return array\n   *\/"
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsTree(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return ($tree = self::getOptionsObject()->fullTree(...$codes)) ? $tree['items'] : [];\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 166,
            "endLine": 170,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionsTree",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionsTreeRef": {
            "name": "getOptionsTreeRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsTreeRef(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return ($tree = self::getOptionsObject()->fullTreeRef(...$codes)) ? $tree['items'] : [];\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 173,
            "endLine": 177,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionsTreeRef",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptions(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return self::getOptionsObject()->fullOptions(...$codes);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 180,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptions",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getSimpleOptions": {
            "name": "getSimpleOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getSimpleOptions(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return self::getOptionsObject()->options(...$codes);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 187,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getSimpleOptions",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionsRef": {
            "name": "getOptionsRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsRef(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return self::getOptionsObject()->fullOptionsRef(...$codes);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 194,
            "endLine": 198,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOptionsRef",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOption(...$codes)\n  {\n    $codes[] = self::getOptionRoot();\n    return self::getOptionsObject()->option(...$codes);\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 201,
            "endLine": 205,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getOption",
            "returns": [],
            "arguments": [
                {
                    "name": "codes",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsTextValue(string|array $id, string $text = 'text', string $value = 'value', ...$additionalFields): array\n  {\n    if (is_string($id) && !Str::isUid($id)) {\n      $id = [$id];\n    }\n\n    if (is_array($id)) {\n      $id[] = self::getOptionRoot();\n    }\n\n    return $id ? self::getOptionsObject()->textValueOptions($id, $text, $value, ...$additionalFields) : [];\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 208,
            "endLine": 219,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getOptionsTextValue",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "array|string",
                    "type_arr": [
                        {},
                        {}
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "text",
                    "default_name": ""
                },
                {
                    "name": "value",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "value",
                    "default_name": ""
                },
                {
                    "name": "additionalFields",
                    "position": 3,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionsTextValueRef": {
            "name": "getOptionsTextValueRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Statistic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Tts\/Optional.php",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "  public static function getOptionsTextValueRef(string|array $id, string $text = 'text', string $value = 'value', ...$additionalFields): array\n  {\n    if (is_string($id) && !Str::isUid($id)) {\n      $id = self::getOptionId($id);\n    }\n\n    return $id ? self::getOptionsObject()->textValueOptionsRef($id, $text, $value, ...$additionalFields) : [];\n  }",
            "parent": false,
            "trait": "bbn\\Models\\Tts\\Optional",
            "startLine": 222,
            "endLine": 229,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": true,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getOptionsTextValueRef",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "array|string",
                    "type_arr": [
                        {},
                        {}
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "text",
                    "default_name": ""
                },
                {
                    "name": "value",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": "value",
                    "default_name": ""
                },
                {
                    "name": "additionalFields",
                    "position": 3,
                    "type": "",
                    "type_arr": [],
                    "variadic": true,
                    "reference": false,
                    "required": false,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "types": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array",
                        "description": "List of accepteed values for the opr option config"
                    }
                ]
            },
            "parent": false,
            "value": [
                "insert",
                "update",
                "delete",
                "restore",
                "count",
                "sum",
                "avg"
            ]
        },
        "type": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "name": "$oprs"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "id_option": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The UID of the statistic's option"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "dbo": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "bbn\\Appui\\Database",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "Database",
                        "description": "The DB object used to retrieve columns IDs"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "request": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "array",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array",
                        "name": "$db"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "is_total": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "bool",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "bool",
                        "description": "If true the statistic will show the aggregated total for each day"
                    }
                ]
            },
            "parent": false,
            "value": false
        },
        "cfg": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "array",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array",
                        "description": "The configuration array as used in constructor"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "db_cfg": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "array",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "?array",
                        "description": "The database configuration array ending the construction"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "hcfg": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "array",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array",
                        "name": "$cfg"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "ocfg": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array",
                        "description": "The configuration from the statistic's option"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "code": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The configuration's code from the statistic's option"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "inserter": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "When stat by user the UID of the user inserting."
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "updater": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "When stat by user the UID of the user updating."
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "deleter": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "When stat by user the UID of the user deleting."
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_id_field": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The UID."
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "_placeholder": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "string",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Appui\\Statistic",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The expression that will be used as placeholder for the timestamps"
                    }
                ]
            },
            "parent": false,
            "value": "___BBN_TST___"
        },
        "db": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Db"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Db",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "dbClass"
                    }
                ]
            },
            "parent": {
                "name": "db",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Db"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Db",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "dbClass"
                        }
                    ]
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "errors": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "errors",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "error": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|string"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCode": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|int"
                    }
                ]
            },
            "parent": {
                "name": "errorCode",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|int"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCodes": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": {
                "name": "errorCodes",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": "",
                "parent": false,
                "value": []
            },
            "value": []
        },
        "debug": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": {
                "name": "debug",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "boolean"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "log": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "log",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "optional_is_init": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Models\\Tts\\Optional",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "bool",
                        "description": "Set as true from the moment a first instance has been initiated and has defined the constants."
                    }
                ]
            },
            "parent": false,
            "value": false
        },
        "option_root_id": {
            "trait": false,
            "static": true,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Models\\Tts\\Optional",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The ID of the root option"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "options": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Statistic"
            },
            "declaring_trait": "bbn\\Models\\Tts\\Optional",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "Option",
                        "description": "The Option object"
                    }
                ]
            },
            "parent": false,
            "value": null
        }
    },
    "staticProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null
    },
    "constants": {
        "ODATE": {
            "name": "ODATE",
            "value": "2014-01-01",
            "class": "bbn\\Appui\\Statistic",
            "parent": false,
            "private": false,
            "protected": true,
            "public": false,
            "final": false,
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "string",
                        "description": "The default start date of the statistic"
                    }
                ]
            }
        }
    },
    "uses": {
        "bbn": "bbn",
        "Exception": "Exception",
        "DateTime": "DateTime",
        "bbn\\X": "X",
        "bbn\\Str": "Str",
        "bbn\\Db": "Db",
        "bbn\\Appui\\Database": "Database",
        "bbn\\Models\\Cls\\Db": "DbCls",
        "bbn\\Models\\Tts\\Optional": "Optional"
    },
    "dummyComments": [
        "\/**\n * This class creates daily statistics in the database, and extracts series for displaying graphs.\n * The list of statistic is based on the options in appui > statistics > active; \n * The statistic system uses the history system to determine and store values of the past.\n * For counting the number of elements in a table on a given day the class will check:\n *  - that the latest creation event (INSERT\/RESTORE) happened before the given day\n *  - while there has not been posterior deletion (DELETE) before the given day\n * If there are filters with value, for each of them the class will also check:\n *  - if the column had not been changed to that value after the given day\n *  - if the column with a different value had that value before the given day\n * Therefore a lot of JOINs are added to each request and the filling of the table can take a long time\n *\/"
    ],
    "summary": "",
    "description": "",
    "description_parts": []
}