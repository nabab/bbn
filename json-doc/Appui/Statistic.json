{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Statistic",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Statistic.php",
    "startLine": 21,
    "endLine": 1204,
    "numMethods": 30,
    "numProperties": 0,
    "numConstants": 1,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "is_total": false,
        "db_cfg": null,
        "ocfg": null,
        "inserter": null,
        "updater": null,
        "deleter": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Statistic",
    "contentConstructor": {
        "file": "bbn\\Appui\\Statistic",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, string $code, array $cfg = [])\n  {\n    \/\/ Parent constructors\n    parent::__construct($db);\n    self::optionalInit();\n    \/\/ Db ok\n    if (!$this->db->check()) {\n      throw new Exception(X::_(\"The database is in error mode\"));\n    }\n\n    \/\/ History ok\n    if (!History::isInit()) {\n      throw new Exception(X::_(\"History is disabled\"));\n    }\n\n    \/\/ Option found\n    if (!($this->id_option = self::getOptionId($code, 'active'))) {\n      throw new Exception(X::_(\"No id option corresponding to code in active statistics\"));\n    }\n\n    \/\/ Cfg retrieved\n    if (!($this->ocfg = self::getOption($this->id_option))) {\n      throw new Exception(X::_(\"No cfg option corresponding to id in active statistics\"));\n    }\n\n    \/\/ Params ok\n    if (!X::hasProps($cfg, ['type', 'table'], true) || !X::is_string($cfg['type'], $cfg['table'])) {\n      throw new Exception(X::_(\"Invalid configuration\"));\n    }\n    \/\/ Correcting case\n    $cfg['type'] = strtolower($cfg['type']);\n\n    \/\/ Type accepted\n    if (X::indexOf(self::$types, $cfg['type']) === -1) {\n      throw new Exception(X::_(\"Invalid type in configuration\"));\n    }\n\n    \/\/ History config retrieved\n    if ($this->hcfg = History::getTableCfg($cfg['table'])) {\n      \/\/ For sum and avg types field is mandatory\n      if ((X::indexOf(['sum', 'avg'], $cfg['type']) > -1) && !isset($cfg['field'])) {\n        throw new Exception(X::_(\"The field parameter is mandatory for sum and avg types\"));\n      }\n\n      $this->code = $code;\n      $this->dbo  = new \\bbn\\Appui\\Database($this->db);\n      if (isset($cfg['field'])) {\n        if (!($this->_id_field = $this->dbo->columnId($cfg['field'], $cfg['table']))) {\n          throw new Exception(X::_(\"The field parameter must be a known field of the table (asked %s in %s)\", $cfg['field'], $cfg['table']));\n        }\n      }\n\n      if (($cfg['type'] === 'update') && empty($this->_id_field)) {\n        throw new Exception(X::_(\"The field parameter is mandatory for statistics of type update\"));\n      }\n\n      $this->type = $cfg['type'];\n      $this->cfg  = $cfg;\n      if (!empty($cfg['inserter']) && bbn\\Str::isUid($cfg['inserter'])) {\n        $this->inserter = $cfg['inserter'];\n      }\n\n      if (!empty($cfg['updater']) && bbn\\Str::isUid($cfg['updater'])) {\n        $this->updater = $cfg['updater'];\n      }\n\n      if (!empty($cfg['deleter']) && bbn\\Str::isUid($cfg['deleter'])) {\n        $this->deleter = $cfg['deleter'];\n      }\n\n      \/\/ Creating the configuration\n      $req          = $this->_set_request_cfg();\n      X::log([$cfg, $req], 'stat');\n      $this->db_cfg = $this->db->processCfg($req);\n    }\n        \/\/ Right props in cfg\n  }",
            "startLine": 118,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database connection"
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The code of the option"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The configuration"
                }
            ]
        },
        "check": {
            "name": "check",
            "summary": "Checks if the constructor is gone through.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return (bool)$this->ocfg;\n  }",
            "startLine": 202,
            "endLine": 205,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getCode": {
            "name": "getCode",
            "summary": "Code getter.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check()) {\n      return $this->code;\n    }\n\n    return null;\n  }",
            "startLine": 213,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "run": {
            "name": "run",
            "summary": "Run the stat",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($start, $end = NULL)\n  {\n    if ($this->db_cfg && !empty($this->db_cfg['values'])) {\n      if (is_string($start)) {\n        $start = strtotime($start.(strlen($start) === 10 ? ' 00:00:00' : ''));\n      }\n\n      if (!$start || !is_int($start)) {\n        throw new Exception(X::_('Impossible to read the given start date'));\n      }\n\n      if (!$this->is_total) {\n        if (!$end || ($end <= $start)) {\n          $end = mktime(23, 59, 59, Date('n', $start), Date('j', $start), Date('Y', $start));\n        }\n\n        if (!$end || !is_int($end)) {\n          throw new Exception(X::_('Impossible to read the given end date'));\n        }\n      }\n\n      $vals = [];\n      foreach ($this->db_cfg['values'] as $v) {\n        if (!$this->is_total && ($v === self::$_placeholder.'2')) {\n          $vals[] = $end;\n        }\n        else {\n          $vals[] = $v === self::$_placeholder ? $start : $v;\n        }\n      }\n\n      $cfg           = $this->db_cfg;\n      $cfg['values'] = $vals;\n      return $this->db->selectOne($cfg);\n    }\n  }",
            "startLine": 230,
            "endLine": 265,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "start",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Update a statistic in the table bbn_statistics from the start of time",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $variant = NULL, string $start = NULL)\n  {\n    if ($this->check()) {\n      if (!$variant) {\n        $variant = 'default';\n      }\n\n      if (!($real_start = $this->db->selectOne('bbn_statistics', 'MAX(day)', ['id_option' => $this->id_option, 'code' => $variant]))) {\n        if ($start) {\n          $real_start = $start;\n        }\n        elseif (!empty($this->ocfg['start'])) {\n          $real_start = $this->ocfg['start'];\n        }\n        else {\n          $real_start = self::ODATE;\n        }\n      }\n\n      if (Str::isDateSql($real_start)) {\n        $num_days  = 0;\n        $num       = $this->db->count(\n          'bbn_statistics',\n          [\n            'id_option' => $this->id_option,\n            'code' => $variant\n          ]\n        );\n        $today     = date('Ymd');\n        $last_res  = null;\n        $last_date = $real_start;\n        $time      = mktime(\n          12,\n          0,\n          0,\n          (int)substr($real_start, 5, 2),\n          (int)substr($real_start, 8, 2),\n          (int)substr($real_start, 0, 4)\n        );\n        $test      = date('Ymd', $time);\n        while ($test <= $today) {\n          $res = $this->run($real_start);\n          \/*\n          if ($num_days) {\n            X::hdump($res, $this->db->getLastValues());\n          }\n          else {\n            X::hdump($res, $this->db->last(), $this->db->getLastValues());\n          }\n          *\/\n\n          $num_days++;\n          if (!$res) {\n            $res = 0;\n          }\n\n          if (($res !== $last_res) || !$num) {\n            if ($this->db->count(\n              'bbn_statistics', [\n              'id_option' => $this->ocfg['id'],\n              'code' => $variant,\n              'day' => $real_start\n              ]\n            )\n            ) {\n              $this->db->update(\n                'bbn_statistics', [\n                'res' => $res\n                ], [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $real_start\n                ]\n              );\n            }\n            else {\n              $this->db->insert(\n                'bbn_statistics', [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $real_start,\n                'res' => $res\n                ]\n              );\n            }\n\n            $last_res = $res;\n            $num++;\n          }\n          else {\n            $this->db->update(\n              'bbn_statistics', [\n              'day' => $real_start\n              ], [\n              'id_option' => $this->ocfg['id'],\n              'code' => $variant,\n              'day' => $last_date\n              ]\n            );\n          }\n\n          $last_date  = $real_start;\n          $time      += 24 * 3600;\n          $real_start = date('Y-m-d', $time);\n          $test       = date('Ymd', $time);\n        }\n\n        return $num_days;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 275,
            "endLine": 387,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "variant",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Start of time"
                }
            ]
        },
        "serie": {
            "name": "serie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $values = 30, string $start = NULL, string $end = NULL)\n  {\n    if ($this->check()) {\n      if (!$end) {\n        $end = date('Y-m-d');\n      }\n\n      if (!$start) {\n        $start = date('Y-m-d', strtotime($end.' 12:00:00') - ($values * 24 * 3600));\n      }\n\n      if (bbn\\Str::isDateSql($start, $end)) {\n        $res = [\n          'labels' => [],\n          'series' => []\n        ];\n        \/\/ All the values between start and end\n        $all = $this->db->rselectAll(\n          'bbn_statistics', ['day', 'res'], [\n          [\n            'field' => 'id_option',\n            'value' => $this->id_option\n          ], [\n            'field' => 'day',\n            'operator' => '>=',\n            'value' => $start\n          ], [\n            'field' => 'day',\n            'operator' => '<=',\n            'value' => $end\n          ]\n          ], [\n          'day' => 'ASC'\n          ]\n        );\n        \/\/ As the row appears with its last date for value we pick the nextr row if the last row is not the last day\n        $last = count($all) - 1;\n        if (($all[$last]['day'] !== $end) && ($tmp = $this->db->rselect(\n          'bbn_statistics', ['day', 'res'], [\n          [\n            'field' => 'id_option',\n            'value' => $this->id_option\n          ], [\n            'field' => 'day',\n            'operator' => '>',\n            'value' => $end\n          ]\n          ], [\n          'day' => 'ASC'\n          ]\n        ))\n        ) {\n          $all[] = $tmp;\n          $last++;\n        }\n\n        if (count($all)) {\n          $dcurrent = new \\DateTime($start);\n          $dend     = new \\DateTime($end);\n          $num_days = (int)$dend->diff($dcurrent)->format('%a');\n          $diff     = $num_days;\n          $interval = (int)floor(($num_days + 1) \/ $values);\n          $num      = 0;\n          $idx      = 0;\n          $didx     = 0;\n          $pstart   = false;\n          while ($diff >= 0) {\n            $current = $dcurrent->format('Y-m-d');\n            if (!$pstart) {\n              $pstart = $current;\n            }\n\n            if ($num === $interval) {\n              $num = 0;\n            }\n\n            if (!$num) {\n              if (!empty($this->ocfg['total']) || ($interval === 1)) {\n                $res['labels'][$didx] = $current;\n              }\n              else {\n                $res['labels'][$didx] = bbn\\Date::format($pstart, 's').' - '.bbn\\Date::format($current, 's');\n              }\n\n              if (isset($res['series'][$didx]) && empty($this->ocfg['total'])) {\n                $res['series'][$didx] = $res['series'][$didx] + $all[$idx]['res'];\n              }\n              else {\n                $res['series'][$didx] = $all[$idx]['res'];\n              }\n\n              $pstart = false;\n              $didx++;\n            }\n            elseif (empty($this->ocfg['total'])) {\n              $res['labels'][$didx]  = $current;\n              $res['series'][$didx] += (int)$all[$idx]['res'];\n            }\n\n            if (!$diff) {\n              break;\n            }\n\n            if ($current === $all[$idx]['day']) {\n              $idx++;\n            }\n\n            $dcurrent = $dcurrent->add(date_interval_create_from_date_string('1 days'));\n            $diff     = (int)$dend->diff($dcurrent)->format('%a');\n            $num++;\n          }\n        }\n\n        return $res;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 390,
            "endLine": 508,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serieValues": {
            "name": "serieValues",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $values = 30, string $start = NULL, string $end = NULL)\n  {\n    if ($res = $this->serie($values, $start, $end)) {\n      $res = array_map(\n        function ($a) {\n\n        }, $res\n      );\n    }\n\n    return $res;\n  }",
            "startLine": 511,
            "endLine": 522,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serieByPeriod": {
            "name": "serieByPeriod",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(int $values = 30, string $unit = 'm', string $end = NULL, string $pstart = NULL)\n  {\n    if ($this->ocfg && $values) {\n      if (!$end) {\n        $end = date('Y-m-d');\n      }\n\n      if (bbn\\Str::isDateSql($end)) {\n        switch (strtolower($unit)) {\n          case 'y':\n            $funit = 'years';\n            $tmp   = date('Y-m-d', mktime(23, 59, 59, 12, 31, substr($end, 0, 4)));\n            if ($end !== $tmp) {\n              $end = date('Y-m-d', mktime(23, 59, 59, 12, 31, (int)substr($end, 0, 4) - 1));\n            }\n            break;\n          case 't':\n            $funit   = 'months';\n            $values *= 3;\n          case 'm':\n            $funit  = 'months';\n            $month  = (int)substr($end, 5, 2);\n            $remain = $month % 3;\n            if ($remain) {\n              $remain = 3 - $remain;\n            }\n\n            $tmp = date('Y-m-d', mktime(23, 59, 59, $month + 1, 0, substr($end, 0, 4)));\n            if (($end !== $tmp) || $remain) {\n              $end = date('Y-m-d', mktime(23, 59, 59, $month - $remain + 1, 0, (int)substr($end, 0, 4)));\n            }\n            break;\n          case 'w':\n            $funit = 'weeks';\n\n            break;\n          case 'd':\n            $funit = 'days';\n            break;\n        }\n\n        if (isset($funit)) {\n          $dend   = new \\DateTime($end);\n          $dstart = $dend->sub(date_interval_create_from_date_string(\"$values $funit\"));\n          $start  = $dstart->format('Y-m-d');\n          $res    = [\n            'labels' => [],\n            'series' => []\n          ];\n          if ($all = $this->db->rselectAll(\n            'bbn_statistics', ['day', 'res'], [\n            [\n              'field' => 'id_option',\n              'value' => $this->id_option\n            ], [\n              'field' => 'day',\n              'operator' => '<=',\n              'value' => $end\n            ], [\n              'field' => 'day',\n              'operator' => '>=',\n              'value' => $start\n            ]\n            ], [\n            'day' => 'ASC'\n            ]\n          )\n          ) {\n            $last = count($all) - 1;\n            if (($all[$last]['day'] !== $end) && ($tmp = $this->db->rselect(\n              'bbn_statistics', ['day', 'res'], [\n              [\n                'field' => 'id_option',\n                'value' => $this->id_option\n              ], [\n                'field' => 'day',\n                'operator' => '>',\n                'value' => $end\n              ]\n              ], [\n              'day' => 'ASC'\n              ]\n            ))\n            ) {\n              $all[] = $tmp;\n              $last++;\n            }\n\n            $dcurrent = new \\DateTime($start);\n            $num_days = (int)$dend->diff($dcurrent)->format('%a');\n            $diff     = $num_days;\n            $interval = (int)floor($num_days \/ $values);\n            $num      = 0;\n            $idx      = 0;\n            $didx     = 0;\n            while ($diff >= 0) {\n              $current = $dcurrent->format('Y-m-d');\n              if ($num === $interval) {\n                $num = 0;\n              }\n\n              if (!$num) {\n                $res['labels'][$didx] = $current;\n                $res['series'][$didx] = $all[$idx]['res'];\n                $didx++;\n              }\n              elseif (empty($this->ocfg['total'])) {\n                $res['labels'][$didx]  = $current;\n                $res['series'][$didx] += (int)$all[$idx]['res'];\n              }\n\n              if (!$diff) {\n                break;\n              }\n\n              if ($current === $all[$idx]['day']) {\n                $idx++;\n              }\n\n              $dcurrent = $dcurrent->add(date_interval_create_from_date_string('1 days'));\n              $diff     = (int)$dend->diff($dcurrent)->format('%a');\n              $num++;\n            }\n          }\n\n          return $res;\n        }\n      }\n    }\n\n    return null;\n  }",
            "startLine": 525,
            "endLine": 656,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "unit",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "m",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "pstart",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())), function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 187,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 199,
            "endLine": 202,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 205,
            "endLine": 208,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 211,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 217,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 229,
            "endLine": 232,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 235,
            "endLine": 247,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 250,
            "endLine": 253,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 256,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 262,
            "endLine": 265,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 268,
            "endLine": 271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": [],
    "summary": "",
    "description": "",
    "description_parts": []
}