{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\Appui\\Ide2",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Ide2.php",
    "startLine": 14,
    "endLine": 732,
    "numMethods": 35,
    "numProperties": 2,
    "numConstants": 0,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "excluded": {
            "public": [
                "_ctrl.php"
            ]
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "id": null,
        "fs": null,
        "projectInfo": null,
        "pathInfo": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Ide2",
    "contentConstructor": {
        "file": "bbn\\Appui\\Ide2",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "constructor of the classe Project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db, string $id)\n  {\n    parent::__construct($db);\n    self::optionalInit();\n    $this->id = $id;\n    $this->fs = new System();\n  }",
            "startLine": 32,
            "endLine": 38,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "urlToPaths": {
            "name": "urlToPaths",
            "summary": "Gets the potential existing paths from an URL",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $url)\n  {\n    $cfg = $this->urlToConfig($url, true);\n    $file = array_pop(X::split($cfg['file'], '\/'));\n    $res = [\n      'root' => $cfg['info']['parent_code'],\n      'path' => $cfg['path'],\n      'files' => (!empty($cfg['typology']['tabs'])) ? $files : $cfg['file'],\n    ];\n    if (!empty($cfg['typology']['tabs'])) {\n      $files = [];\n      foreach($cfg['typology']['tabs'] as $tab) {\n        if ($cfg['typology']['directories'] === true) {\n          $path = $cfg['typology']['code'].'\/'.$tab['path'].$file;\n        }\n        else {\n          $path = $cfg['typology']['code'].'\/'.$file.'\/'.$file;\n        }\n        $files[$tab['url']] = [\n          'path' => $path,\n          'extensions' => $tab['extensions']\n        ];\n      }\n      $res['files'] = $files;\n    }\n    else {\n      $res['files'] = $cfg['file'];\n      $res['extensions'] = $cfg['extensions'];\n    }\n    return $res;\n  }",
            "startLine": 46,
            "endLine": 76,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The file's URL\nreturn array"
                }
            ]
        },
        "urlToConfig": {
            "name": "urlToConfig",
            "summary": "Gets the configuration of an URL",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $url, bool $force = false)\n  {\n    \/\/ a typical url : lib\/appui-api\/js\/test\/_end_\/code\n    \/** @var array $bits each substring of the url *\/\n    $bits = X::split($url, '\/');\n    \/** @var string $root the first element must correspond to a path retriever function of mvc (app, lib, data, cdn) *\/\n    $root = array_shift($bits);\n    \/** @var string $path the code of the repository under $root (in the options) *\/\n    $path = array_shift($bits);\n    \/** @var array $info all the options for this project *\/\n    $info = $this->getProjectInfo();\n    \/** @var array $path_info full option for the current path *\/\n    $path_info = X::getRow($info['path'], ['parent_code' => $root, 'code' => $path]);\n    \/** @var string $type the last part of the url after _end_ *\/\n    $type = false;\n    if (in_array('_end_', $bits)) {\n      $type = array_pop($bits);\n      \/\/ the url structure with _end_ and $type is mandatory\n      if (array_pop($bits) !== '_end_') {\n        throw new Exception('Malformed URL');\n      }\n    }\n    $mvc = Mvc::getInstance();\n    if ($path_info && method_exists($mvc, $root.'Path')) {\n      if ($path_info['path'] === '\/') {\n        $path_info['path'] = '';\n      }\n      elseif (substr($path_info['path'], -1) !== '\/') {\n        $path_info['path'] .= '\/';\n      }\n      $res = [\n        'root' => $mvc->{$root.'Path'}(true),\n        'path' => $path_info['path'],\n        'info' => $path_info\n      ];\n      \/** @var string $real the result of this function *\/\n      $real = $res['root'].$res['path'];\n      \/\/ case of folder is a component or a mvc\n      $path_info = $path_info['alias'];\n      $source_path = $path_info['sourcePath'] ?? '';\n      $real .= $source_path;\n      if (!empty($path_info['types'])) {\n        \/** @var string $path_type type found in the url (mvc, component, lib cli) *\/\n        $path_type = array_shift($bits);\n        \/** @var array $path_row option corresponding to the type $path_type *\/\n        $path_row = X::getRow($path_info['types'], ['type' => $path_type]);\n        if (!$path_row) {\n          throw new Exception(X::_('Impossible to find the type %s', $path_type));\n        }\n        $res['typology'] = $this->getType($path_type);\n        $real .= $path_type.'\/';\n        if ($force && !$type) {\n          if (!empty($res['typology']['tabs'])) {\n            if ($row = X::getRow($res['typology']['tabs'], ['default' => true])) {\n              $type = $row['url'];\n            }\n          }\n        }\n        $path_info = X::getRow($res['typology']['tabs'], ['url' => $type]);\n        \/\/ add directly what remain in the url\n        if (empty($res['typology']['directories'])) {\n          $real .= X::join($bits, '\/');\n        }\n        \/\/ add the directory to explore if 'directories' value is true (public, private, html, ...)\n        else {\n          $real .= $path_info['path'];\n          if (!$this->fs->isDir($real)) {\n            throw new Exception(X::_(\"The directory %s doesn't exist\", $real));\n          }\n          $real .= X::join($bits, '\/');\n        }\n      }\n      \/\/ case of a simple file\n      else {\n        $real .= '\/'.X::join($bits, '\/');\n        if ($type !== 'code') {\n          $real .= '\/';\n        }\n      }\n      $res['file'] = $real;\n      $res['extensions'] = $path_info['extensions'];\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 84,
            "endLine": 168,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The file's URL"
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "urlToReal": {
            "name": "urlToReal",
            "summary": "Gets the real file's path from an URL",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $url)\n  {\n    $res = $this->urlToConfig($url);\n    if ($url) {\n      foreach($res['extensions'] as $e) {\n        $file = $res['file'].'.'.$e['ext'];\n        if ($this->fs->exists($file)) {\n          return $file;\n        }\n      }\n    }\n    return null;\n  }",
            "startLine": 177,
            "endLine": 189,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The file's URL"
                }
            ]
        },
        "realToUrl": {
            "name": "realToUrl",
            "summary": "Gets the file's URL from the real file's path.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $file)\n  {\n    foreach ($this->repositories as $i => $d) {\n      $root = isset($d['root_path']) ? $d['root_path'] : $this->getRootPath($d['name']);\n      if (\n        $root\n        && (strpos($file, $root) === 0)\n      ) {\n        $rep = $i;\n        break;\n      }\n    }\n    if (isset($rep)) {\n      X::log([561, $file, $rep, $root], 'real');\n      $res = $rep . '\/';\n      $bits = explode('\/', substr($file, \\strlen($root)));\n      $filename  = array_pop($bits);\n      $extension = \\bbn\\Str::fileExt($filename);\n      $basename  = \\bbn\\Str::fileExt($filename, 1)[0];\n      \/\/ MVC or Component\n      if (!empty($d['tabs'])) {\n        \/\/ URL is interverted\n        if ($d['type'] === 'components') {\n          foreach ($d['tabs'] as $tab) {\n            foreach ($tab['extensions'] as $ext) {\n              if ($extension === $ext['ext']) {\n                $tab_path = $tab['url'];\n                break;\n              }\n            }\n\n            if (isset($tab_path)) {\n              break;\n            }\n          }\n        }\n        else {\n          $tab_path = array_shift($bits);\n          X::log([$tab_path, $bits], 'real');\n        }\n        $res     .= implode('\/', $bits);\n        foreach ($d['tabs'] as $t) {\n          if (\n            empty($t['fixed'])\n            && ($t['path'] === $tab_path . '\/')\n          ) {\n            $res .= \"\/$filename\";\n            break;\n          }\n        }\n      }\n      \/\/ Normal file\n      else {\n        $res .= implode('\/', $bits) . '\/' . $basename . '.' . $extension;\n      }\n      return \\bbn\\Str::parsePath($res);\n    }\n    return false;\n  }",
            "startLine": 197,
            "endLine": 255,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The real file's path"
                }
            ]
        },
        "getFullTree": {
            "name": "getFullTree",
            "summary": "function to get the full option tree of the project",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $res = self::getOptionsObject()->fullTree($this->id);\n    foreach($res['items'] as $t) {\n      $res[$t['code']] = $t;\n    }\n    unset($res['items']);\n    return $res;\n  }",
            "startLine": 262,
            "endLine": 270,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getPaths": {
            "name": "getPaths",
            "summary": "function to get all path of the project and format each path",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $withPath = false, bool $force = false)\n  {\n    if ($force || !$this->pathInfo) {\n      $tree = $this->getFullTree();\n      $roots = $tree['path']['items'];\n      $res = [];\n      foreach($roots as $root) {\n        if (defined(\"BBN_\".strtoupper($root['code']).\"_PATH\")) {\n          $path = constant(\"BBN_\".strtoupper($root['code']).\"_PATH\");\n          foreach($root['items'] as $option) {\n            $tmp = [\n              'id' => $option['id'],\n              'id_alias' => $option['id_alias'],\n              'parent_code' => $root['code'],\n              'text' => $option['text'],\n              'code' => $option['code'],\n              'bcolor' => $option['bcolor'] ?? null,\n              'fcolor' => $option['fcolor'] ?? null,\n              'language' => $option['language'] ?? BBN_LANG,\n              'alias' => $option['alias'],\n              'parent' => $path,\n              'path' => $option['path'] === '\/' ? '\/' : $option['path']\n            ];\n            $res[] = $tmp;\n          }\n        }\n      }\n      $this->pathInfo = $res;\n    }\n    if (!$withPath) {\n      foreach($roots as $root) {\n        if (defined(\"BBN_\".strtoupper($root['code']).\"_PATH\")) {\n          foreach($root['items'] as &$option) {\n            unset($option['parent']);\n            unset($option['path']);\n          }\n        }\n      }\n    }\n    return $this->pathInfo;\n  }",
            "startLine": 279,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "withPath",
                    "position": 0,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "ath  adds the full path to the results"
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "force update $this->pathInfo"
                }
            ]
        },
        "getPath": {
            "name": "getPath",
            "summary": "function to get a path by id",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, bool $withPath = false, bool $force = false)\n  {\n    $paths = $this->getPaths($withPath, $force);\n    $row = X::getRow($paths, ['id' => $id]);\n    return $row ?: null;\n  }",
            "startLine": 329,
            "endLine": 334,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "id of the path to get"
                },
                {
                    "name": "withPath",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "ath  adds the full path to the results"
                },
                {
                    "name": "force",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "force update $this->pathInfo"
                }
            ]
        },
        "getProjectInfo": {
            "name": "getProjectInfo",
            "summary": "function to get all path of the project and format each path",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $force = false)\n  {\n    if ($force || !$this->projectInfo) {\n      $info = $this->getFullTree();\n      $info['path'] = $this->getPaths();\n      $this->projectInfo = $info;\n    }\n    return $this->projectInfo;\n  }",
            "startLine": 342,
            "endLine": 350,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "force",
                    "position": 0,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "force update $this->projectInfo"
                }
            ]
        },
        "openTree": {
            "name": "openTree",
            "summary": "function to get array to fill the tree component",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $path, string $id_path, string $type = NULL)\n  {\n    return $this->_getTree($path, $id_path, $type);\n  }",
            "startLine": 391,
            "endLine": 394,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "given path of the file selected"
                },
                {
                    "name": "id_path",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "path  given id_path of the directory"
                },
                {
                    "name": "type",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "type given in order to fill the tree"
                }
            ]
        },
        "getType": {
            "name": "getType",
            "summary": "function to get a type by a code",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $code)\n  {\n    $o = self::getOptionsObject();\n    return $o->option($code, 'types', 'ide', 'appui');\n  }",
            "startLine": 402,
            "endLine": 406,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "code given to retrieve its type"
                }
            ]
        },
        "getIcon": {
            "name": "getIcon",
            "summary": "function to get a icon of a type",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $code)\n  {\n    $type = $this->getType($code);\n    if (!empty($type['icon'])) {\n      return $type['icon'];\n    }\n    return '';\n  }",
            "startLine": 414,
            "endLine": 421,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "code given to retrieve its icon"
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 64,
            "endLine": 71,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())), function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 187,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 199,
            "endLine": 202,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 205,
            "endLine": 208,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 211,
            "endLine": 214,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 217,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 229,
            "endLine": 232,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 235,
            "endLine": 247,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 250,
            "endLine": 253,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 256,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 262,
            "endLine": 265,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Ide2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 268,
            "endLine": 271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        }
    },
    "properties": {
        "id": {
            "visibility": "public"
        },
        "fs": {
            "visibility": "public"
        }
    },
    "staticProperties": {
        "excluded": {
            "public": [
                "_ctrl.php"
            ]
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "summary": "",
    "description": "",
    "description_parts": []
}