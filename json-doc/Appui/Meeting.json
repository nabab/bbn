{
    "doc": {
        "description": "Meeting management in Appui\n",
        "tags": {
            "category": "Appui",
            "package": "Appui",
            "author": "Mirko Argentino <mirko@bbn.solutions>",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.html MIT License",
            "link": "https:\/\/bbn.io\/bbn-php\/doc\/class\/Appui\/Meeting"
        }
    },
    "name": "bbn\\Appui\\Meeting",
    "namespace": true,
    "traits": [
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/Appui\/Meeting.php",
    "startLine": 16,
    "endLine": 1014,
    "numMethods": 68,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\Models\\Tts\\Optional",
        "bbn\\Models\\Tts\\Dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_meetings",
            "tables": {
                "meetings": "bbn_meetings",
                "participants": "bbn_meetings_participants"
            },
            "arch": {
                "meetings": {
                    "id": "id",
                    "id_room": "id_room",
                    "id_tmp": "id_tmp",
                    "started": "started",
                    "ended": "ended"
                },
                "participants": {
                    "id": "id",
                    "id_meeting": "id_meeting",
                    "id_tmp": "id_tmp",
                    "id_user": "id_user",
                    "name": "name",
                    "invited": "invited",
                    "joined": "joined",
                    "leaved": "leaved"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "opt": null,
        "optFields": null,
        "prefTable": null,
        "prefFields": null,
        "passCls": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null,
        "_is_init_class_cfg": false,
        "fields": null,
        "class_cfg": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Meeting",
    "contentConstructor": {
        "file": "bbn\\Appui\\Meeting",
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\Db $db)\n  {\n    parent::__construct($db);\n    $this->_init_class_cfg();\n    self::optionalInit();\n    $this->opt = self::getOptionsObject();\n    $optCfg = $this->opt->getClassCfg();\n    if (!$optCfg) {\n      throw new \\Error(_('No configuration found for the Option class'));\n    }\n    $this->optFields = $optCfg['arch']['options'];\n    $pref = \\bbn\\User\\Preferences::getInstance();\n    if (!empty($pref)) {\n      $prefCfg = $pref->getClassCfg();\n      if (!$prefCfg) {\n        throw new \\Error(_('No configuration found for the Preferences class'));\n      }\n      $this->prefTable = $prefCfg['table'];\n      $this->prefFields = $prefCfg['arch']['user_options'];\n      $this->passCls = new \\bbn\\Appui\\Passwords($this->db);\n    }\n  }",
            "startLine": 63,
            "endLine": 84,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\Db $db)\n  {\n    $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getRoom": {
            "name": "getRoom",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom)\n  {\n    if (!Str::isUid($idRoom)) {\n      throw new \\Error(_('The room id given is not a uuid'));\n    }\n    if (($room = $this->db->rselect($this->prefTable, [], [$this->prefFields['id'] => $idRoom]))\n      && Str::isJson($room[$this->prefFields['cfg']])\n    ) {\n      $room = \\array_merge($room, \\json_decode($room[$this->prefFields['cfg']], true));\n      unset($room[$this->prefFields['cfg']]);\n    }\n    return $room;\n  }",
            "startLine": 87,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getRooms": {
            "name": "getRooms",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $server, string $idUser = NULL, string $idGroup = NULL)\n  {\n    if (!Str::isUid($server)) {\n      $server = $this->getOptionId($server);\n    }\n    if (!Str::isUid($server)) {\n      throw new \\Error(_('The server id given is not a uuid'));\n    }\n    $where = [\n      'conditions' => [[\n        'field' => $this->prefFields['id_option'],\n        'value' => $server\n      ], [\n        'field' => $this->prefFields['id_alias'],\n        'operator' => 'isnull'\n      ], [\n        'logic' => 'OR',\n        'conditions' => [[\n          'field' => $this->prefFields['public'],\n          'value' => 1\n        ]]\n      ]]\n    ];\n    if (!empty($idUser)) {\n      $where['conditions'][2]['conditions'][] = [\n        'field' => $this->prefFields['id_user'],\n        'value' => $idUser\n      ];\n    }\n    if (!empty($idGroup)) {\n      $where['conditions'][2]['conditions'][] = [\n        'field' => $this->prefFields['id_group'],\n        'value' => $idGroup\n      ];\n    }\n    $rooms = $this->db->rselectAll([\n      'table' => $this->prefTable,\n      'fields' => [],\n      'where' => $where,\n      'order' => [[\n        'field' => $this->prefFields['text'],\n        'dir' => 'ASC'\n      ]]\n    ]);\n    if (!empty($rooms)) {\n      foreach ($rooms as $i => $r) {\n        $rooms[$i]['moderators'] = $this->getModerators($r[$this->prefFields['id']]);\n        if (Str::isJson($r[$this->prefFields['cfg']])) {\n          $rooms[$i] = \\array_merge($rooms[$i], \\json_decode($r[$this->prefFields['cfg']], true));\n          unset($rooms[$i][$this->prefFields['cfg']]);\n        }\n      }\n    }\n    return $rooms;\n  }",
            "startLine": 102,
            "endLine": 156,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "server",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "idGroup",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getAllRooms": {
            "name": "getAllRooms",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser = NULL, string $idGroup = NULL)\n  {\n    $servers = $this->getOptionsIds('list');\n    if (!empty($servers)) {\n      $servers = \\array_values($servers);\n      $serverWhere = [];\n      if (\\count($servers) > 1) {\n        $serverWhere['logic'] = 'OR';\n        $serverWhere['conditions'] = [];\n        foreach ($servers as $s) {\n          $serverWhere['conditions'][] = [\n            'field' => $this->prefFields['id_option'],\n            'value' => $s\n          ];\n        }\n      }\n      else {\n        $serverWhere['field'] = $this->prefFields['id_option'];\n        $serverWhere['value'] = $servers[0];\n      }\n    }\n    $where = [\n      'conditions' => [[\n        'field' => $this->prefFields['id_alias'],\n        'operator' => 'isnull'\n      ], $serverWhere, [\n        'logic' => 'OR',\n        'conditions' => [[\n          'field' => $this->prefFields['public'],\n          'value' => 1\n        ]]\n      ]]\n    ];\n    if (!empty($idUser)) {\n      $where['conditions'][2]['conditions'][] = [\n        'field' => $this->prefFields['id_user'],\n        'value' => $idUser\n      ];\n    }\n    if (!empty($idGroup)) {\n      $where['conditions'][2]['conditions'][] = [\n        'field' => $this->prefFields['id_group'],\n        'value' => $idGroup\n      ];\n    }\n    $rooms = $this->db->rselectAll([\n      'table' => $this->prefTable,\n      'fields' => [],\n      'where' => $where,\n      'order' => [[\n        'field' => $this->prefFields['text'],\n        'dir' => 'ASC'\n      ]]\n    ]);\n    if (!empty($idUser)) {\n      $meetingsTable = $this->class_cfg['tables']['meetings'];\n      $meetingsFields = $this->class_cfg['arch']['meetings'];\n      $partsTable = $this->class_cfg['tables']['participants'];\n      $partsFields = $this->class_cfg['arch']['participants'];\n      $t = $this;\n      if ($roomsInvited = $this->db->rselectAll([\n        'table' => $this->prefTable,\n        'fields' => \\array_map(function($f) use ($t){\n          return $t->db->colFullName($f, $t->prefTable);\n        }, $this->prefFields),\n        'join' => [[\n          'table' => $meetingsTable,\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($meetingsFields['id_room'], $meetingsTable),\n              'exp' => $this->db->colFullName($this->prefFields['id'], $this->prefTable)\n            ]]\n          ]\n        ], [\n          'table' => $partsTable,\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->colFullName($meetingsFields['id'], $meetingsTable),\n              'exp' => $this->db->colFullName($partsFields['id_meeting'], $partsTable)\n            ]]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($partsFields['id_user'], $partsTable),\n            'value' => $idUser\n          ], [\n            'field' => $this->db->colFullName($partsFields['invited'], $partsTable),\n            'value' => 1\n          ]]\n        ],\n        'group_by' => [$this->db->colFullName($meetingsFields['id_room'], $meetingsTable)]\n      ])) {\n        foreach ($roomsInvited as $r) {\n          if (X::find($rooms, [$this->prefFields['id'] => $r[$this->prefFields['id']]]) === null) {\n            $rooms[] = $r;\n          }\n        }\n      }\n    }\n    X::sortBy($rooms, $this->prefFields['text'], 'asc');\n    if (!empty($rooms)) {\n      foreach ($rooms as $i => $r) {\n        $r['moderators'] = $this->getModerators($r[$this->prefFields['id']]);\n        if (Str::isJson($r[$this->prefFields['cfg']])) {\n          $r = \\array_merge($r, \\json_decode($r[$this->prefFields['cfg']], true));\n          unset($r[$this->prefFields['cfg']]);\n        }\n        if ($idMeeting = $this->getStartedMeeting($r[$this->prefFields['id']])) {\n          $r['participants'] = $this->getParticipants($idMeeting);\n          $r['invited'] = $this->getInvited($idMeeting);\n          $r['liveMeeting'] = $idMeeting;\n        }\n        else {\n          $r['participants'] = [];\n          $r['invited'] = [];\n          $r['liveMeeting'] = null;\n        }\n        $r['live'] = !empty($idMeeting);\n        $last = $this->getLastMeeting($r[$this->prefFields['id']]);\n        $r['last'] = !empty($last) ? $last[$this->class_cfg['arch']['meetings']['started']] : '';\n        $rooms[$i] = $r;\n      }\n    }\n    return $rooms;\n  }",
            "startLine": 159,
            "endLine": 284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "idGroup",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getUserRooms": {
            "name": "getUserRooms",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $server, string $idUser)\n  {\n    $user = \\bbn\\User::getInstance();\n    $userManager = $user->getManager();\n    $userData = $userManager->getUser($idUser);\n    $userCfg = $user->getClassCfg();\n    $idGroup = $userData[$userCfg['arch']['users']['id_group']] ?? false;\n    if (empty($idGroup)) {\n      throw new \\Error(sprintf(_('No group found for the user %s'), $idUser));\n    }\n    return $this->getRooms($server, $idUser, $idGroup);\n  }",
            "startLine": 287,
            "endLine": 298,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "server",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getAllUserRooms": {
            "name": "getAllUserRooms",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser)\n  {\n    $user = \\bbn\\User::getInstance();\n    $userManager = $user->getManager();\n    $userData = $userManager->getUser($idUser);\n    $userCfg = $user->getClassCfg();\n    $idGroup = $userData[$userCfg['arch']['users']['id_group']] ?? false;\n    if (empty($idGroup)) {\n      throw new \\Error(sprintf(_('No group found for the user %s'), $idUser));\n    }\n    return $this->getAllRooms($idUser, $idGroup);\n  }",
            "startLine": 301,
            "endLine": 312,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addRoom": {
            "name": "addRoom",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $server, string $name, $idUser = NULL, $idGroup = NULL, array $moderators = [])\n  {\n    $idServer = self::getOptionId($server, 'list');\n    if (!$idServer) {\n      throw new \\Error(sprintf(_('Server not found %s'), $server));\n    }\n    if ($this->db->selectOne($this->prefTable, $this->prefFields['id'], [\n      $this->prefFields['text'] => $name,\n      $this->prefFields['id_option'] => $idServer\n    ])) {\n      throw new \\Error(sprintf(_('The room %s already exists'), $name));\n    }\n    if ($this->db->insert($this->prefTable, [\n      $this->prefFields['text'] => $name,\n      $this->prefFields['id_option'] => $idServer,\n      $this->prefFields['id_user'] => $idUser,\n      $this->prefFields['id_group'] => $idGroup,\n      $this->prefFields['public'] => empty($idUser) && empty($idGroup) ? 1 : 0,\n      $this->prefFields['cfg'] => \\json_encode([\n        'created' => date('Y-m-d H:i:s')\n      ])\n    ])) {\n      $idRoom = $this->db->lastId();\n      if (!empty($moderators)) {\n        foreach ($moderators as $mod) {\n          $this->addModerator($mod, $idRoom);\n        }\n      }\n      return $idRoom;\n    }\n    return null;\n  }",
            "startLine": 315,
            "endLine": 346,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "server",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "idGroup",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moderators",
                    "position": 4,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "editRoom": {
            "name": "editRoom",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom, string $name, $idUser = NULL, $idGroup = NULL, array $moderators = [])\n  {\n    $old = $this->getRoom($idRoom);\n    if (!$old) {\n      throw new \\Exception(sprintf(_('Room not found %s'), $idRoom));\n    }\n    $toUpd = [];\n    if (($old[$this->prefFields['id_user']] !== $idUser)){\n      $toUpd[$this->prefFields['id_user']] = $idUser;\n    }\n    if (($old[$this->prefFields['id_group']] !== $idGroup)){\n      $toUpd[$this->prefFields['id_group']] = $idGroup;\n    }\n    $public = !empty($idUser) || !empty($idGroup) ? 0 : 1;\n    if (($old[$this->prefFields['public']] !== $public)){\n      $toUpd[$this->prefFields['public']] = $public;\n    }\n    if (($old[$this->prefFields['text']] !== $name)){\n      if ($this->db->selectOne($this->prefTable, $this->prefFields['id'], [\n        [$this->prefFields['text'], '=', $name],\n        [$this->prefFields['id_option'], '=', $old[$this->prefFields['id_option']]],\n        [$this->prefFields['id'], '!=', $idRoom]\n      ])) {\n        throw new \\Error(sprintf(_('The room %s already exists'), $name));\n      }\n      $toUpd[$this->prefFields['text']] = $name;\n    }\n    if (!empty($toUpd)\n      && !$this->db->update($this->prefTable, $toUpd, [$this->prefFields['id'] => $idRoom])\n    ) {\n      return false;\n    }\n    \/\/ Force re-create the moderator's token if the room's name has changed\n    if (\\array_key_exists($this->prefFields['text'], $toUpd)) {\n      $oldModerators = $this->getModerators($idRoom);\n      foreach ($oldModerators as $m) {\n        if (!$this->removeModerator($m, $idRoom)) {\n          throw new \\Exception(sprintf(_('Error during the elimination of the moderator %s from the room %s'), $m, $idRoom));\n        }\n        if (!$this->addModerator($m, $idRoom)) {\n          throw new \\Exception(sprintf(_('Error during the insertion of the moderator %s to the room %s'), $m, $idRoom));\n        }\n      }\n    }\n    if (!empty($moderators)) {\n      $oldModerators = $this->getModerators($idRoom);\n      if (!empty($oldModerators)) {\n        foreach ($oldModerators as $m) {\n          if (!\\in_array($m, $moderators, true)\n            && !$this->removeModerator($m, $idRoom)\n          ) {\n            throw new \\Exception(sprintf(_('Error during the elimination of the moderator %s from the room %s'), $m, $idRoom));\n          }\n        }\n      }\n      foreach ($moderators as $m) {\n        if (!\\in_array($m, $oldModerators, true)\n          && !$this->addModerator($m, $idRoom)\n        ) {\n          throw new \\Exception(sprintf(_('Error during the insertion of the moderator %s to the room %s'), $m, $idRoom));\n        }\n      }\n    }\n    return true;\n  }",
            "startLine": 349,
            "endLine": 413,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "idGroup",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moderators",
                    "position": 4,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "removeRoom": {
            "name": "removeRoom",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom)\n  {\n    if (Str::isUid($idRoom)) {\n      return $this->db->delete($this->prefTable, [$this->prefFields['id'] => $idRoom]);\n    }\n    return null;\n  }",
            "startLine": 416,
            "endLine": 422,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "addModerator": {
            "name": "addModerator",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser, string $idRoom)\n  {\n    if (Str::isUid($idUser) && Str::isUid($idRoom)) {\n      if (!($room = $this->db->rselect($this->prefTable, [], [$this->prefFields['id'] => $idRoom]))) {\n        throw new \\Exception(sprintf(_('No room found with the id %s'), $idRoom));\n      }\n      if ($this->isModerator($idUser, $idRoom)) {\n        return true;\n      }\n      if ($this->db->insert($this->prefTable, [\n        $this->prefFields['id_option'] => $room[$this->prefFields['id_option']],\n        $this->prefFields['id_alias'] => $idRoom,\n        $this->prefFields['id_user'] => $idUser\n      ])) {\n        return true;\n      }\n    }\n    return false;\n  }",
            "startLine": 425,
            "endLine": 443,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idRoom",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "removeModerator": {
            "name": "removeModerator",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser, string $idRoom)\n  {\n    if ($mod = $this->getModerator($idUser, $idRoom)) {\n      $idModerator = $mod[$this->prefFields['id']];\n      return (bool)$this->db->delete($this->prefTable, [$this->prefFields['id'] => $idModerator]);\n    }\n    return false;\n  }",
            "startLine": 446,
            "endLine": 453,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idRoom",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "checkModeratorToken": {
            "name": "checkModeratorToken",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser, string $idRoom)\n  {\n    if (($r = $this->getRoom($idRoom))\n      && ($m = $this->getModerator($idUser, $idRoom))\n      && ($u = \\bbn\\User::getInstance())\n    ) {\n      $idModerator = $m[$this->prefFields['id']];\n      $t = $this->passCls->userGet($idModerator, $u);\n      if (empty($t)) {\n        if (!($server = $this->getServerByRoom($idRoom))) {\n          throw new \\Error(sprintf(_('No server found by the room %s'), $idRoom));\n        }\n        if (!$this->passCls->userStore($this->makeJWT($server[$this->optFields['code']], $r[$this->prefFields['text']]), $idModerator, $u)) {\n          throw new \\Error(sprintf(_('Error during JWT storing for the user %s for the room %s'), $idUser, $idRoom));\n        }\n        $t = $this->passCls->userGet($idModerator, $u);\n      }\n      return !empty($t);\n    }\n    return false;\n  }",
            "startLine": 456,
            "endLine": 476,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idRoom",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getModeratorToken": {
            "name": "getModeratorToken",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser, string $idRoom)\n  {\n    if (($m = $this->getModerator($idUser, $idRoom))\n      && ($u = \\bbn\\User::getInstance())\n    ) {\n      $idModerator = $m[$this->prefFields['id']];\n      if ($t = $this->passCls->userGet($idModerator, $u)) {\n        return $t;\n      }\n    }\n    return null;\n  }",
            "startLine": 479,
            "endLine": 490,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idRoom",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isModerator": {
            "name": "isModerator",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idUser, string $idRoom)\n  {\n    return (bool)$this->getModerator($idUser, $idRoom);\n  }",
            "startLine": 493,
            "endLine": 496,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idUser",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idRoom",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getModerators": {
            "name": "getModerators",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom, bool $full = false)\n  {\n    $userCfg = \\bbn\\User::getInstance()->getClassCfg();\n    $userFields = $userCfg['arch']['users'];\n    $fields = [\n      $this->db->colFullName($userFields['id'], $userCfg['table'])\n    ];\n    $method = 'getColumnValues';\n    if (!empty($full)) {\n      $method = 'rselectAll';\n      $fields = \\array_merge($fields, [\n        $this->db->colFullName($userFields['id_group'], $userCfg['table']),\n          $this->db->colFullName($userFields['email'], $userCfg['table']),\n          $this->db->colFullName($userFields['username'], $userCfg['table']),\n          $this->db->colFullName($userFields['login'], $userCfg['table'])\n      ]);\n    }\n    return $this->db->{$method}([\n      'table' => $this->prefTable,\n      'fields' => $fields,\n      'join' => [[\n        'table' => $userCfg['table'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->colFullName($this->prefFields['id_user'], $this->prefTable),\n            'exp' => $this->db->colFullName($userFields['id'], $userCfg['table'])\n          ], [\n            'field' => $this->db->colFullName($userFields['active'], $userCfg['table']),\n            'value' => 1\n          ]]\n        ]\n      ]],\n      'where' => [\n        'conditions' => [[\n          'field' => $this->db->colFullName($this->prefFields['id_alias'], $this->prefTable),\n          'value' => $idRoom\n        ]]\n      ]\n    ]);\n  }",
            "startLine": 499,
            "endLine": 538,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "full",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "setJoined": {
            "name": "setJoined",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom, string $idTmp, string $idUser = NULL)\n  {\n    $idMeeting = $this->getStartedMeeting($idRoom);\n    if (empty($idMeeting)\n      && !empty($idUser)\n      && $this->isModerator($idUser, $idRoom)\n    ) {\n      $idMeeting = $this->startMeeting($idRoom);\n    }\n    if (!empty($idMeeting)) {\n      $fields = $this->class_cfg['arch']['participants'];\n      $table = $this->class_cfg['tables']['participants'];\n      if (!empty($idUser) && ($invited = $this->db->selectOne([\n        'table' => $table,\n        'fields' => [$fields['id']],\n        'where' => [\n          'conditions' => [[\n            'field' => $fields['id_meeting'],\n            'value' => $idMeeting\n          ], [\n            'field' => $fields['id_user'],\n            'value' => $idUser\n          ], [\n            'field' => $fields['invited'],\n            'value' => 1\n          ], [\n            'field' => $fields['joined'],\n            'operator' => 'isnull'\n          ]]\n        ]\n      ]))) {\n        if ($this->db->update($table, [\n          $fields['id_tmp'] => $idTmp,\n          $fields['joined'] => date('Y-m-d H:i:s')\n        ], [\n          $fields['id'] => $invited\n        ])) {\n          return $invited;\n        }\n      }\n      else {\n        $this->setLeaved($idMeeting, $idTmp, $idUser, false);\n        if ($this->db->insert($table, [\n          $fields['id_meeting'] => $idMeeting,\n          $fields['id_user'] => $idUser,\n          $fields['id_tmp'] => $idTmp,\n          $fields['joined'] => date('Y-m-d H:i:s')\n        ])) {\n          return $this->db->lastId();\n        }\n      }\n    }\n    return null;\n  }",
            "startLine": 541,
            "endLine": 594,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idTmp",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setLeaved": {
            "name": "setLeaved",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting, string $idTmp, string $idUser = NULL, bool $close = true)\n  {\n    $fields = $this->class_cfg['arch']['participants'];\n    $where = [\n      $fields['id_user'] => $idUser,\n      $fields['id_meeting'] => $idMeeting,\n      $fields['leaved'] => null\n    ];\n    if (empty($idUser)) {\n      $where[$fields['id_tmp']] = $idTmp;\n    }\n    if ($this->db->update($this->class_cfg['tables']['participants'], [\n      $fields['leaved'] => date('Y-m-d H:i:s')\n    ], $where)) {\n      if (!empty($close) && !$this->getParticipants($idMeeting)) {\n        $this->stopMeeting($idMeeting);\n      }\n      return true;\n    }\n    return false;\n  }",
            "startLine": 597,
            "endLine": 617,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idTmp",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "close",
                    "position": 3,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "setParticipantName": {
            "name": "setParticipantName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting, string $idTmp, string $name)\n  {\n    $tableParts = $this->class_cfg['tables']['participants'];\n    $fieldsParts = $this->class_cfg['arch']['participants'];\n    $fieldsMeetings = $this->class_cfg['arch']['meetings'];\n    if ($meeting = $this->getMeeting($idMeeting)) {\n      $old = $this->db->rselect($tableParts, [], [\n        $fieldsParts['id_meeting'] => $idMeeting,\n        $fieldsParts['id_tmp'] => $idTmp\n      ]);\n      if (empty($old)\n        && ($idRoom = $meeting[$fieldsMeetings['id_room']])\n      ) {\n        $old = $this->setJoined($idRoom, $idTmp);\n      }\n      $idPart = \\is_array($old) ? $old[$fieldsParts['id']] : $old;\n      if (!empty($old) && !empty($name)) {\n        return (bool)$this->db->update($tableParts, [\n          $fieldsParts['name'] => $name\n        ], [\n          $fieldsParts['id'] => $idPart\n        ]);\n      }\n    }\n    return false;\n  }",
            "startLine": 620,
            "endLine": 645,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idTmp",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getParticipants": {
            "name": "getParticipants",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    $fields = $this->class_cfg['arch']['participants'];\n    return $this->db->rselectAll([\n      'table' => $this->class_cfg['tables']['participants'],\n      'fields' => [],\n      'where' => [\n        'conditions' => [[\n          'field' => $fields['id_meeting'],\n          'value' => $idMeeting\n        ], [\n          'field' => $fields['leaved'],\n          'operator' => 'isnull'\n        ], [\n          'field' => $fields['joined'],\n          'operator' => 'isnotnull'\n        ]]\n      ]\n    ]);\n  }",
            "startLine": 648,
            "endLine": 667,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getInvited": {
            "name": "getInvited",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    $fields = $this->class_cfg['arch']['participants'];\n    return $this->db->getColumnValues([\n      'table' => $this->class_cfg['tables']['participants'],\n      'fields' => [$fields['id_user']],\n      'where' => [\n        'conditions' => [[\n          'field' => $fields['id_meeting'],\n          'value' => $idMeeting\n        ], [\n          'field' => $fields['invited'],\n          'value' => 1\n        ]]\n      ],\n      'group_by' => [$fields['id_user']]\n    ]);\n  }",
            "startLine": 670,
            "endLine": 687,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "startMeeting": {
            "name": "startMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom)\n  {\n    if ($idMeeting = $this->getStartedMeeting($idRoom)) {\n      return $idMeeting;\n    }\n    $fields = $this->class_cfg['arch']['meetings'];\n    if (!$this->db->insert($this->class_cfg['table'], [\n      $fields['id_room'] => $idRoom,\n      $fields['started'] => date('Y-m-d H:i:s')\n    ])) {\n      throw new \\Error(sprintf(_('Error starting the meeting for the room %s'), $idRoom));\n    }\n    return $this->db->lastId();\n  }",
            "startLine": 690,
            "endLine": 703,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "stopMeeting": {
            "name": "stopMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    $m = $this->getMeeting($idMeeting);\n    if (empty($m)) {\n      throw new \\Error(sprintf(_('Meeting not found with the id %s'), $idMeeting));\n    }\n    $date = date('Y-m-d H:i:s');\n    $fields = $this->class_cfg['arch']['meetings'];\n    if (\\is_null($m[$fields['ended']])\n      && !$this->db->update($this->class_cfg['table'], [\n        $fields['ended'] => $date\n      ], [\n        $fields['id'] => $idMeeting\n      ])\n    ) {\n      throw new \\Error(sprintf(_('Error ending the meeting with the id %s'), $idMeeting));\n    }\n    $fields = $this->class_cfg['arch']['participants'];\n    $this->db->update($this->class_cfg['tables']['participants'], [\n      $fields['leaved'] => $date\n    ], [\n      $fields['id_meeting'] => $idMeeting\n    ]);\n    return true;\n  }",
            "startLine": 706,
            "endLine": 730,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getStartedMeeting": {
            "name": "getStartedMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom)\n  {\n    $fields = $this->class_cfg['arch']['meetings'];\n    return $this->db->selectOne([\n      'table' => $this->class_cfg['table'],\n      'fields' => [$fields['id']],\n      'where' => [\n        'conditions' => [[\n          'field' => $fields['id_room'],\n          'value' => $idRoom\n        ], [\n          'field' => $fields['ended'],\n          'operator' => 'isnull'\n        ]]\n      ]\n    ]);\n  }",
            "startLine": 733,
            "endLine": 749,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getLastMeeting": {
            "name": "getLastMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idRoom)\n  {\n    return $this->db->rselect(\n      $this->class_cfg['table'],\n      [],\n      [\n        $this->class_cfg['arch']['meetings']['id_room'] => $idRoom\n      ],\n      [\n        $this->class_cfg['arch']['meetings']['started'] => 'DESC'\n      ]\n    );\n  }",
            "startLine": 752,
            "endLine": 764,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idRoom",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMeeting": {
            "name": "getMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    return $this->db->rselect(\n      $this->class_cfg['table'],\n      [],\n      [\n        $this->class_cfg['arch']['meetings']['id'] => $idMeeting\n      ]\n    );\n  }",
            "startLine": 767,
            "endLine": 776,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMeetingByTmp": {
            "name": "getMeetingByTmp",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idTmp, array $where = [])\n  {\n    $w = [\n      'conditions' => [[\n        'field' => $this->class_cfg['arch']['meetings']['id_tmp'],\n        'value' => $idTmp\n      ]]\n    ];\n    if (!empty($where)) {\n      $w['conditions'][] = $where;\n    }\n    return $this->db->rselect([\n      'table' => $this->class_cfg['table'],\n      'fields' => [],\n      'where' => $w\n    ]);\n  }",
            "startLine": 779,
            "endLine": 795,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idTmp",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "where",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "inviteUser": {
            "name": "inviteUser",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting, string $idUser)\n  {\n    $fields = $this->class_cfg['arch']['participants'];\n    $table = $this->class_cfg['tables']['participants'];\n    $exists = $this->db->selectOne([\n      'table' => $table,\n      'fields' => [$fields['id']],\n      'where' => [\n        'conditions' => [[\n          'field' => $fields['id_meeting'],\n          'value' => $idMeeting\n        ], [\n          'field' => $fields['id_user'],\n          'value' => $idUser\n        ], [\n          'field' => $fields['invited'],\n          'value' => 1\n        ]]\n      ]\n    ]);\n    if (!empty($exists)) {\n      return true;\n    }\n    return (bool)$this->db->insert($table, [\n      $fields['id_meeting'] => $idMeeting,\n      $fields['id_user'] => $idUser,\n      $fields['invited'] => 1\n    ]);\n  }",
            "startLine": 798,
            "endLine": 826,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "idUser",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isMeeting": {
            "name": "isMeeting",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    $fields = $this->class_cfg['arch']['meetings'];;\n    return (bool)$this->db->selectOne([\n      'table' => $this->class_cfg['tables']['meetings'],\n      'fields' => [$fields['id']],\n      'where' => [\n        'conditions' => [[\n          'field' => $fields['id'],\n          'value' => $idMeeting\n        ], [\n          'field' => $fields['ended'],\n          'operator' => 'isnull'\n        ]]\n      ]\n    ]);\n  }",
            "startLine": 829,
            "endLine": 845,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getParticipantsLogs": {
            "name": "getParticipantsLogs",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $idMeeting)\n  {\n    $logs = [];\n    $partsFields = $this->class_cfg['arch']['participants'];\n    $user = \\bbn\\User::getInstance();\n    if ($parts = $this->db->rselectAll([\n      'table' => $this->class_cfg['tables']['participants'],\n      'fields' => [],\n      'where' => [\n        'conditions' => [[\n          'field' => $partsFields['id_meeting'],\n          'value' => $idMeeting\n        ], [\n          'field' => $partsFields['joined'],\n          'operator' => 'isnotnull'\n        ], [\n          'logic' => 'OR',\n          'conditions' => [[\n            'field' => $partsFields['id_user'],\n            'operator' => 'isnotnull'\n          ], [\n            'field' => $partsFields['name'],\n            'operator' => 'isnotnull'\n          ]]\n        ]]\n      ]\n    ])) {\n      foreach ($parts as $part) {\n        $name = !empty($part[$partsFields['id_user']]) ?\n          $user->getName($part[$partsFields['id_user']]) :\n          (!empty($part[$partsFields['name']]) ? sprintf('%s (%s)', $part[$partsFields['name']], _('External')) : _('Unknown external user'));\n        $logs[] = [\n          'moment' => $part[$partsFields['joined']],\n          'text' => $name . ' ' . _('joined the meeting')\n        ];\n        if (!empty($part[$partsFields['leaved']])) {\n          $logs[] = [\n            'moment' => $part[$partsFields['leaved']],\n            'text' => $name . ' ' . _('left the meeting')\n          ];\n        }\n      }\n      X::sortBy($logs, 'moment', 'asc');\n    }\n    return $logs;\n  }",
            "startLine": 848,
            "endLine": 893,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "idMeeting",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMeetingsFromServer": {
            "name": "getMeetingsFromServer",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $server)\n  {\n    $meetings = [];\n    $url = 'http:\/\/' . $server . ':8080\/colibri\/conferences';\n    if ($tmpMeetings = X::curl($url, null, [])) {\n      $tmpMeetings = \\json_decode($tmpMeetings, true);\n      if (!empty($tmpMeetings)) {\n        foreach ($tmpMeetings as $meet) {\n          if ($m = X::curl($url . '\/' . $meet['id'], null, [])) {\n            $m = \\json_decode($m, true);\n            $parts = [];\n            if (!empty($m['contents'])) {\n              $conn = \\array_values(\\array_filter($m['contents'], function($c){\n                return \\array_key_exists('sctpconnections', $c);\n              }));\n              $parts = !empty($conn) && !empty($conn[0]['sctpconnections']) ?\n                \\array_map(function($p){\n                  return $p['endpoint'];\n                }, $conn[0]['sctpconnections']) :\n                [];\n            }\n            $meetings[$m['id']] = [\n              'id' => $m['id'],\n              'participants' => $parts\n            ];\n          }\n        }\n      }\n    }\n    return $meetings;\n  }",
            "startLine": 896,
            "endLine": 926,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "server",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 50,
            "endLine": 57,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 50,
                "endLine": 57,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "startLine": 64,
            "endLine": 71,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "startLine": 64,
                "endLine": 71,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->error;\n  }",
            "startLine": 85,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->error;\n  }",
                "startLine": 85,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\n  }",
                "startLine": 91,
                "endLine": 94,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "startLine": 97,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    if ($this->isDebug()) {\n        $ar = \\func_get_args();\n        $cn = bbn\\Str::encodeFilename(str_replace('\\\\', '_', \\get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "startLine": 97,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
            "startLine": 114,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $class = \\get_class($this);\n    throw new \\Exception(\n      sprintf(\n        X::_(\"Wrong method used for the class %s: %s with the following arguments:\"),\n        $class,\n        $name,\n        implode(', ', $arguments)\n      )\n    );\n  }",
                "startLine": 114,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n    return $this->debug || (defined(\"BBN_IS_DEV\") && BBN_IS_DEV);\n  }",
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": [],
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Models\\Cls\\Basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [],
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\Models\\Cls\\Basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": [],
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptionRoot": {
            "name": "getOptionRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_root_id;\n  }",
            "startLine": 150,
            "endLine": 154,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiRoot": {
            "name": "getAppuiRoot",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optionalInit();\n    return self::$option_appui_id;\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsObject": {
            "name": "getOptionsObject",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = Option::getInstance();\n    if (!$o) {\n      throw new Exception(X::_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 164,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\Appui\\Option"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionId": {
            "name": "getOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 181,
            "endLine": 184,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsIds": {
            "name": "getOptionsIds",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(...self::_treat_args(func_get_args())),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 193,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getOptionsTree": {
            "name": "getOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTreeRef": {
            "name": "getOptionsTreeRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTreeRef(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 218,
            "endLine": 221,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsRef": {
            "name": "getOptionsRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptionsRef(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOption": {
            "name": "getOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 230,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValue": {
            "name": "getOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 236,
            "endLine": 239,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getOptionsTextValueRef": {
            "name": "getOptionsTextValueRef",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptionsRef($id) : [];\n  }",
            "startLine": 242,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionId": {
            "name": "getAppuiOptionId",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fromCode(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 254,
            "endLine": 257,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsIds": {
            "name": "getAppuiOptionsIds",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::getOptionsObject()->getCodes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 260,
            "endLine": 272,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTree": {
            "name": "getAppuiOptionsTree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::getOptionsObject()->fullTree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 275,
            "endLine": 278,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptions": {
            "name": "getAppuiOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->fullOptions(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 281,
            "endLine": 284,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOption": {
            "name": "getAppuiOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::getOptionsObject()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 287,
            "endLine": 290,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getAppuiOptionsTextValue": {
            "name": "getAppuiOptionsTextValue",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::getAppuiOptionId(...func_get_args())) ? self::getOptionsObject()->textValueOptions($id) : [];\n  }",
            "startLine": 293,
            "endLine": 296,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter)\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    $f = $this->class_cfg['arch'][$this->class_table_index];\n    if (is_string($filter)) {\n      $cfg = [$f['id'] => $filter];\n    }\n    elseif (is_array($filter)) {\n      $cfg = $filter;\n    }\n\n    if (!empty($cfg) && $arr = $this->db->count(\n      $this->class_table,\n      $cfg\n    )) {\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 37,
            "endLine": 59,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getClassCfg": {
            "name": "getClassCfg",
            "summary": "Returns the class configuration.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 67,
            "endLine": 70,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "getFields": {
            "name": "getFields",
            "summary": "Returns the fields of the main table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 78,
            "endLine": 81,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [],
            "parent": false,
            "arguments": []
        },
        "insert": {
            "name": "insert",
            "summary": "Inserts a new row in the table.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $data)\n  {\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      if ($this->db->insert($ccfg['table'], $data)) {\n        return $this->db->lastId();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 91,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "string"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes a single row from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id)\n  {\n    if ($data = $this->exists($id)) {\n      $ccfg = $this->getClassCfg();\n      $f = $ccfg['arch'][$this->class_table_index];\n      return (bool)$this->db->delete($ccfg['table'], [$f['id'] => $id]);\n    }\n\n    return false;\n  }",
            "startLine": 111,
            "endLine": 120,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Updates a single row in the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $id, array $data, bool $addCfg = false)\n  {\n    if (!$this->exists($id)) {\n      throw new Exception(X::_(\"Impossible to find the given row\"));\n    }\n\n    if ($addCfg) {\n      $data = array_merge($this->rselect($id), $data);\n    }\n\n    if ($data = $this->prepare($data)) {\n      $ccfg = $this->getClassCfg();\n      $f = $ccfg['arch'][$this->class_table_index];\n      return (bool)$this->db->update($ccfg['table'], $data, [$f['id'] => $id]);\n    }\n\n    return false;\n  }",
            "startLine": 131,
            "endLine": 148,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "addCfg",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "selectOne": {
            "name": "selectOne",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(string $field, $filter, array $order = [])\n  {\n    if ($res = $this->dbConfigSingleSelection($filter, $order, false, [$field])) {\n      return $res[$field] ?? null;\n    }\n\n    return null;\n  }",
            "startLine": 159,
            "endLine": 166,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [],
            "parent": false,
            "arguments": [
                {
                    "name": "field",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "filter",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "select": {
            "name": "select",
            "summary": "Retrieves a row as an object from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, true);\n  }",
            "startLine": 177,
            "endLine": 180,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "stdClass"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "rselect": {
            "name": "rselect",
            "summary": "Retrieves a row as an array from the table through its id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($filter, array $order = [])\n  {\n    return $this->dbConfigSingleSelection($filter, $order, false);\n  }",
            "startLine": 191,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                null,
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "count": {
            "name": "count",
            "summary": "Returns the number of rows from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter = [])\n  {\n    if (!$this->class_table_index) {\n      throw new Exception(X::_(\"The table index parameter should be defined\"));\n    }\n\n    return $this->db->count($this->class_table, $filter);\n  }",
            "startLine": 204,
            "endLine": 211,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "selectAll": {
            "name": "selectAll",
            "summary": "Returns an array of rows as objects from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, true);\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "rselectAll": {
            "name": "rselectAll",
            "summary": "Returns an array of rows as arrays from the table for the given conditions.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\Appui\\Meeting",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $filter, array $order = [], int $limit = 0, int $start = 0)\n  {\n    return $this->dbConfigSelection($filter, $order, $limit, $start, false);\n  }",
            "startLine": 240,
            "endLine": 243,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "filter",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "order",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_meetings",
            "tables": {
                "meetings": "bbn_meetings",
                "participants": "bbn_meetings_participants"
            },
            "arch": {
                "meetings": {
                    "id": "id",
                    "id_room": "id_room",
                    "id_tmp": "id_tmp",
                    "started": "started",
                    "ended": "ended"
                },
                "participants": {
                    "id": "id",
                    "id_meeting": "id_meeting",
                    "id_tmp": "id_tmp",
                    "id_user": "id_user",
                    "name": "name",
                    "invited": "invited",
                    "joined": "joined",
                    "leaved": "leaved"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "summary": "Meeting management in Appui",
    "description": "",
    "description_parts": []
}