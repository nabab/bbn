{
    "doc": {
        "description": "Class chat\n",
        "tags": {
            "package": "bbn\\Appui"
        }
    },
    "name": "bbn\\Appui\\Chat",
    "namespace": true,
    "realName": "Chat",
    "realNamespace": "bbn\\Appui",
    "traits": [],
    "interfaces": [],
    "fileName": "\/Appui\/Chat.php",
    "startLine": 18,
    "endLine": 1180,
    "numMethods": 55,
    "numProperties": 9,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\Models\\Cls\\Db",
    "isSubclassOf": false,
    "defaultProperties": {
        "user": null,
        "users": null,
        "db": null,
        "errors": [],
        "error": false,
        "errorCode": false,
        "errorCodes": [],
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\Appui",
    "shortName": "Chat",
    "contentConstructor": {
        "returns": []
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Chat constructor.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function __construct(bbn\\Db $db, bbn\\User $user)\n  {\n    if (defined('BBN_DATA_PATH') && $user->checkSession()) {\n      parent::__construct($db);\n      $this->user  = $user;\n      $this->users = new bbn\\User\\Users($this->db);\n    }\n  }",
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Db",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Db.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function __construct(dbClass $db)\n  {\n    $this->db = $db;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "__construct",
                "returns": [],
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\Db",
                        "type_arr": [
                            "bbn\\Db"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": "",
                        "description": "A database connection"
                    }
                ],
                "doc": {
                    "description": "Constructor.\n",
                    "params": [
                        {
                            "tag": "param",
                            "type": "dbClass",
                            "name": "$db",
                            "description": "A database connection"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * Constructor.\n   *\n   * @param dbClass $db A database connection\n   *\/"
            },
            "trait": false,
            "startLine": 38,
            "endLine": 45,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "__construct",
            "returns": [],
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\Db",
                    "type_arr": [
                        "bbn\\Db"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The database connection object"
                },
                {
                    "name": "user",
                    "position": 1,
                    "type": "bbn\\User",
                    "type_arr": [
                        "bbn\\User"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The user object"
                }
            ],
            "doc": {
                "description": "Chat constructor.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "bbn\\Db",
                        "name": "$db",
                        "description": "The database connection object"
                    },
                    {
                        "tag": "param",
                        "type": "bbn\\User",
                        "name": "$user",
                        "description": "The user object"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Chat constructor.\n   *\n   * @param bbn\\Db   $db   The database connection object\n   * @param bbn\\User $user The user object\n   *\/"
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the object has been constructed correctly or not.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function check(): bool\n  {\n    return $this->db && $this->user;\n  }",
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function check()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 71,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "check",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 53,
            "endLine": 56,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "check",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Checks whether the object has been constructed correctly or not.\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the object has been constructed correctly or not.\n   *\n   * @return bool\n   *\/"
        },
        "create": {
            "name": "create",
            "summary": "Creates a new chat with the current user and another participant.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function create(array $users, int $public = 0): ?string\n  {\n    if ($this->check()) {\n      $join   = '';\n      $where  = '';\n      $values = [$this->user->getId(), $public];\n      foreach ($users as $i => $u){\n        $join    .= \"JOIN bbn_chats_users AS u$i ON u$i.id_chat = bbn_chats.id\".PHP_EOL;\n        $where   .= \"AND u$i.id_user = ?\".PHP_EOL;\n        $values[] = $u;\n      }\n\n      $sql = <<<SQL\nSELECT id\nFROM bbn_chats\n  $join\nWHERE creator = ?\nAND public = ?\n$where\nSQL;\n      if (($id_chat = $this->db->getOne($sql, $values))\n          && (count($users) === $this->db->count('bbn_chat_users', ['id_chat' => $id_chat]))\n      ) {\n        return $id_chat;\n      }\n\n      if ($this->db->insert(\n        'bbn_chats', [\n        'creator' => $this->user->getId(),\n        'creation' => date('Y-m-d H:i:s'),\n        'public' => $public ? 1 : 0\n        ]\n      )\n      ) {\n        $id_chat = $this->db->lastId();\n        $this->db->insert(\n          'bbn_chats_users', [\n          'id_chat' => $id_chat,\n          'id_user' => $this->user->getId(),\n          'entrance' => X::microtime(),\n          'admin' => 1\n          ]\n        );\n        foreach ($users as $user) {\n          $this->db->insertIgnore(\n            'bbn_chats_users', [\n            'id_chat' => $id_chat,\n            'id_user' => $user,\n            'entrance' => X::microtime(),\n            'admin' => 0\n            ]\n          );\n        }\n\n        $this->_set_state_hash($id_chat);\n        return $id_chat;\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 66,
            "endLine": 126,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "create",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "users",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "public",
                    "position": 1,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Creates a new chat with the current user and another participant.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "array",
                        "name": "$users"
                    },
                    {
                        "tag": "param",
                        "type": "int",
                        "name": "$public"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Creates a new chat with the current user and another participant.\n   *\n   * @param array $users\n   * @param int   $public\n   * @return null|string\n   *\/"
        },
        "createGroup": {
            "name": "createGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function createGroup(string $title, array $users, array $admins = []): ?bool\n  {\n    if (($time = X::microtime())\n        && !empty($users)\n        && ($id_user = $this->user->getId())\n        && ($username = $this->user->getName())\n        && $this->db->insert(\n          'bbn_chats', [\n          'title' => $title,\n          'creator' => $id_user,\n          'creation' => date('Y-m-d H:i:s', $time)\n          ]\n        )\n        && ($id = $this->db->lastId())\n        && $this->db->insert(\n          'bbn_chats_users', [\n          'id_chat' => $id,\n          'id_user' => $id_user,\n          'entrance' => $time,\n          'admin' => 1\n          ]\n        )\n    ) {\n      $users        = array_filter(\n        $users, function ($u) use ($id_user) {\n          return $u !== $id_user;\n        }\n      );\n      $admins       = array_filter(\n        $admins, function ($u) use ($id_user) {\n          return $u !== $id_user;\n        }\n      );\n      $users_added  = 0;\n      $admins_added = 0;\n      foreach ($users as $user) {\n        if (bbn\\Str::isUid($user)) {\n          $users_added += $this->db->insert(\n            'bbn_chats_users', [\n            'id_chat' => $id,\n            'id_user' => $user,\n            'entrance' => $time,\n            'admin' => 0\n            ]\n          );\n        }\n      }\n\n      $this->_add_bot_message(\n        $id, [\n        $id_user => X::_('You created this group'),\n        \"$username \" . X::_('created this group')\n        ]\n      );\n      foreach ($users as $user) {\n        if (bbn\\Str::isUid($user)) {\n          $name = $this->user->getName($user);\n          $this->_add_bot_message(\n            $id, [\n            $id_user => X::_('You added') . \" $name \" .  X::_('to the group'),\n            $user => $username . ' ' . X::_('added you to the group'),\n            \"$username \" . X::_('added') . \" $name \" . X::_('to the group')\n            ]\n          );\n          if (\\in_array($user, $admins, true)) {\n            $admins_added += (int)$this->addAdmin($id, $user);\n          }\n        }\n      }\n\n      $this->_set_state_hash($id);\n      return (count($users) === $users_added) && (count($admins) === $admins_added);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 129,
            "endLine": 204,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "createGroup",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "users",
                    "position": 1,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "admins",
                    "position": 2,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "destroy": {
            "name": "destroy",
            "summary": "Destroys the given chat",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function destroy(string $id_chat): bool\n  {\n    return $this->check()\n      && bbn\\Str::isUid($id_chat)\n      && $this->isCreator($id_chat)\n      && $this->db->update('bbn_chats', ['blocked' => 1], ['id' => $id_chat])\n      && $this->db->update('bbn_chats_users', ['active' => 0], ['id_chat' => $id_chat])\n      && $this->_set_state_hash($id_chat);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 212,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "destroy",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                }
            ],
            "doc": {
                "description": "Destroys the given chat\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Destroys the given chat\n   * @param string $id_chat\n   * @return bool\n   *\/"
        },
        "talk": {
            "name": "talk",
            "summary": "Sends a new message from the current user in the given chat.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function talk(string $id_chat, string $message): ?int\n  {\n    if ($this->check() && ($chat = $this->info($id_chat)) && !$chat['blocked']) {\n      $users = $this->getParticipants($id_chat);\n      if (\\in_array($this->user->getId(), $users, true)) {\n        $time = X::microtime();\n        $st   = bbn\\Util\\Enc::crypt(json_encode(['time' => $time, 'user' => $this->user->getId(), 'message' => $message]));\n        $day  = date('Y-m-d');\n        foreach ($users as $user) {\n          $dir = bbn\\Mvc::getUserDataPath($user, 'appui-chat').$id_chat.'\/'.$day;\n          if (bbn\\File\\Dir::createPath($dir)) {\n            file_put_contents($dir.'\/'.$time.'.msg', $st);\n          }\n        }\n\n        $this->setLastActivity($id_chat, $this->user->getId());\n        return $this->db->update('bbn_chats', ['last_message' => $time], ['id' => $id_chat]);\n      }\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 230,
            "endLine": 251,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "talk",
            "returns": [
                null,
                "int"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "message",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Sends a new message from the current user in the given chat.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$message"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sends a new message from the current user in the given chat.\n   *\n   * @param string $id_chat\n   * @param string $message\n   * @return int|null\n   *\/"
        },
        "info": {
            "name": "info",
            "summary": "Gets information about the given chat.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function info(string $id_chat): ?array\n  {\n    if ($this->check() && bbn\\Str::isUid($id_chat)) {\n      return $this->db->rselect('bbn_chats', [], ['id' => $id_chat]) ?: null;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 260,
            "endLine": 267,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "info",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets information about the given chat.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$id_chat"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets information about the given chat.\n   *\n   * @param $id_chat\n   * @return array|null\n   *\/"
        },
        "getChatsHash": {
            "name": "getChatsHash",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getChatsHash(float $entrance = null): ?string\n  {\n    $res = '';\n    foreach ($this->getChats($entrance) as $c) {\n      if ($h = $this->_get_state_hash($c)) {\n        $res .= $h;\n      }\n    }\n\n    return $res ? \\md5($res) : null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 270,
            "endLine": 280,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getChatsHash",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "entrance",
                    "position": 0,
                    "type": "null|float",
                    "type_arr": [
                        "null",
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setTitle": {
            "name": "setTitle",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setTitle(string $id_chat, string $title = null)\n  {\n    if (\\bbn\\Str::isUid($id_chat)\n        && $this->isAdmin($id_chat)\n        && $this->db->update('bbn_chats', ['title' => $title], ['id' => $id_chat])\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message(\n        $id_chat, [\n        $this->user->getId() => X::_(\"You have changed the chat title\"),\n        $this->user->getName() . ' ' . X::_('has changed the chat title')\n        ]\n      );\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 283,
            "endLine": 297,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setTitle",
            "returns": [],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "title",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "addUser": {
            "name": "addUser",
            "summary": "Adds the given user to the given chat (if the current user is admin of this chat).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function addUser(string $id_chat, string $id_user): bool\n  {\n    if ($this->isAdmin($id_chat)\n        && ($name1 = $this->user->getName())\n        && ($name2 = $this->user->getName($id_user))\n        && $this->db->insertUpdate(\n          'bbn_chats_users', [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user,\n          'entrance' => X::microtime(),\n          'admin' => 0,\n          'active' => 1\n          ]\n        )\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message(\n        $id_chat, [\n        $this->user->getId() => X::_('You added') . \" $name2\",\n        $id_user => \"$name1 \" . X::_('added you'),\n        $name1 . ' ' . X::_('added') . ' ' . $name2\n        ]\n      );\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 307,
            "endLine": 333,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "addUser",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                }
            ],
            "doc": {
                "description": "Adds the given user to the given chat (if the current user is admin of this chat).\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "user"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Adds the given user to the given chat (if the current user is admin of this chat).\n   *\n   * @param string $id_chat\n   * @param string $id_user\n   * @return bool\n   *\/"
        },
        "removeUser": {
            "name": "removeUser",
            "summary": "Removes the given user to the given chat (if the current user is admin of this chat).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function removeUser(string $id_chat, string $id_user): bool\n  {\n    if ($this->isAdmin($id_chat)\n        && bbn\\Str::isUid($id_user)\n        && ($name1 = $this->user->getName())\n        && ($name2 = $this->user->getName($id_user))\n        && $this->db->update(\n          'bbn_chats_users', ['active' => 0], [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user\n          ]\n        )\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message(\n        $id_chat, [\n        $this->user->getId() => X::_('You remove') . \" $name2\",\n        $name1 . ' ' . X::_('removed') . ' ' . $name2\n        ]\n      );\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 343,
            "endLine": 366,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "removeUser",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                }
            ],
            "doc": {
                "description": "Removes the given user to the given chat (if the current user is admin of this chat).\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "user"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Removes the given user to the given chat (if the current user is admin of this chat).\n   *\n   * @param string $id_chat\n   * @param string $id_user\n   * @return bool\n   *\/"
        },
        "addAdmin": {
            "name": "addAdmin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function addAdmin(string $id_chat, string $id_user): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && bbn\\Str::isUid($id_user)\n        && $this->isCreator($id_chat)\n        && ($name = $this->user->getName())\n        && ($name2 = $this->user->getName($id_user))\n    ) {\n      return $this->_set_admin(\n        $id_chat, $id_user, true, [\n        $this->user->getId() => X::_('You set') . \" $name2 \" . X::_('as admin'),\n        $id_user => \"$name \" . X::_('set you as admin'),\n        \"$name \" . X::_('set') . \" $name2 \" . X::_('as admin')\n        ]\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 369,
            "endLine": 388,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "addAdmin",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "removeAdmin": {
            "name": "removeAdmin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function removeAdmin(string $id_chat, string $id_user): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && bbn\\Str::isUid($id_user)\n        && $this->isCreator($id_chat)\n        && ($name = $this->user->getName())\n        && ($name2 = $this->user->getName($id_user))\n    ) {\n      return $this->_set_admin(\n        $id_chat, $id_user, false, [\n        $this->user->getId() => X::_('You removed') . \" $name2 \" . X::_('as admin'),\n        $id_user => \"$name \" . X::_('removed you as admin'),\n        \"$name \" . X::_('removed') . \" $name2 \" . X::_('as admin')\n        ]\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 391,
            "endLine": 410,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "removeAdmin",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getParticipants": {
            "name": "getParticipants",
            "summary": "Returns the participants of the given chat as an array of id_user.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getParticipants(string $id_chat, bool $with_current = true, bool $last_activity = false): ?array\n  {\n    if ($this->check()) {\n      $ucfg = $this->user->getClassCfg();\n      $cfg  = [\n        'table' => 'bbn_chats_users',\n        'fields' => ['bbn_chats_users.id_user'],\n        'join' => [[\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats_users.id_user',\n              'exp' => $ucfg['table'].'.'.$ucfg['arch']['users']['id']\n            ], [\n              'field' => $ucfg['table'].'.'.$ucfg['arch']['users']['active'],\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [[\n            'field' => 'id_chat',\n            'value' => $id_chat\n          ], [\n            'field' => 'active',\n            'value' => 1\n          ]]\n        ]\n      ];\n      if (!$with_current) {\n        $cfg['where']['conditions'][] = [\n          'field' => 'bbn_chats_users.id_user',\n          'operator' => '!=',\n          'value' => $this->user->getId()\n        ];\n      }\n\n      if ($last_activity) {\n        $cfg['fields'] = [\n          'id' => 'bbn_chats_users.id_user',\n          'lastActivity' => 'bbn_chats_users.last_activity',\n         \/\/ 'lastUserActivity' => 'UNIX_TIMESTAMP(MAX('.$ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['last_activity'].'))'\n        ];\n        \/* $cfg['join'][] = [\n          'table' => $ucfg['tables']['sessions],\n          'type' => 'left',\n          'on' => [\n            'conditions' => [[\n              'field' => $ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['id_user'],\n              'exp' => 'bbn_chats_users.id_user'\n            ]]\n          ]\n        ];\n        $cfg['group_by'] = [$ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['id_user']]; *\/\n        return $this->db->rselectAll($cfg);\n      }\n\n      return $this->db->getFieldValues($cfg);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 420,
            "endLine": 481,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "getParticipants",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "with_current",
                    "position": 1,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": "",
                    "description": "current"
                },
                {
                    "name": "last_activity",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Returns the participants of the given chat as an array of id_user.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$with",
                        "description": "current"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the participants of the given chat as an array of id_user.\n   *\n   * @param string $id_chat\n   * @param bool   $with_current\n   * @return array|null\n   *\/"
        },
        "getAdmins": {
            "name": "getAdmins",
            "summary": "Returns the admins of the given chat as an array of id_user.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getAdmins(string $id_chat): ?array\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n    ) {\n      return $this->db->getFieldValues(\n        'bbn_chats_users', 'id_user', [\n          'id_chat' => $id_chat,\n          'active' => 1,\n          'admin' => 1\n        ]\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 490,
            "endLine": 505,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getAdmins",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                }
            ],
            "doc": {
                "description": "Returns the admins of the given chat as an array of id_user.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Returns the admins of the given chat as an array of id_user.\n   *\n   * @param string $id_chat\n   * @return array|null\n   *\/"
        },
        "isParticipant": {
            "name": "isParticipant",
            "summary": "Checks whether the given user is participant of the given chat.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isParticipant(string $id_chat, string $id_user = null): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && (bbn\\Str::isUid($id_user) || \\is_null($id_user))\n    ) {\n      return (bool)$this->db->count(\n        'bbn_chats_users', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user ?: $this->user->getId()\n        ]\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 515,
            "endLine": 530,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "isParticipant",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ],
            "doc": {
                "description": "Checks whether the given user is participant of the given chat.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "user"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the given user is participant of the given chat.\n   *\n   * @param string $id_chat\n   * @param string $id_user\n   * @return bool|null\n   *\/"
        },
        "isAdmin": {
            "name": "isAdmin",
            "summary": "Checks whether the current user is an admin of the given chat or not.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isAdmin(string $id_chat, string $id_user = null): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && ($chat = $this->info($id_chat))\n        && !$chat['blocked']\n        && (bbn\\Str::isUid($id_user) || \\is_null($id_user))\n    ) {\n      return (bool)$this->db->count(\n        'bbn_chats_users', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user ?: $this->user->getId(),\n        'admin' => 1\n        ]\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 540,
            "endLine": 558,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "isAdmin",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ],
            "doc": {
                "description": "Checks whether the current user is an admin of the given chat or not.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "user"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the current user is an admin of the given chat or not.\n   *\n   * @param string $id_chat\n   * @param string $id_user\n   * @return bool|null\n   *\/"
        },
        "isCreator": {
            "name": "isCreator",
            "summary": "Checks whether the current user is the creator of the given chat or not.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isCreator(string $id_chat, string $id_user = null): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && ($chat = $this->info($id_chat))\n        && !$chat['blocked']\n        && (bbn\\Str::isUid($id_user) || \\is_null($id_user))\n    ) {\n      return $chat['creator'] === $id_user ?: $this->user->getId();\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 568,
            "endLine": 580,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "isCreator",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "user"
                }
            ],
            "doc": {
                "description": "Checks whether the current user is the creator of the given chat or not.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "chat"
                    },
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id",
                        "description": "user"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the current user is the creator of the given chat or not.\n   *\n   * @param string $id_chat\n   * @param string $id_user\n   * @return bool|null\n   *\/"
        },
        "getChats": {
            "name": "getChats",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getChats(float $entrance = null): ?array\n  {\n    if ($this->check()) {\n      $where = [\n        'conditions' => [[\n          'field' => 'bbn_chats_users.id_user',\n          'value' => $this->user->getId()\n        ], [\n          'field' => 'bbn_chats_users.active',\n          'value' => 1\n        ]]\n      ];\n      if (\\is_float($entrance)) {\n        $where['conditions'][] = [\n          'field' => 'bbn_chats_users.entrance',\n          'operator' => '<=',\n          'value' => $entrance\n        ];\n      }\n\n      return $this->db->getFieldValues(\n        [\n        'table' => 'bbn_chats_users',\n        'fields' => ['id_chat'],\n        'join' => [[\n          'table' => 'bbn_chats',\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats_users.id_chat',\n              'exp' => 'bbn_chats.id'\n            ]]\n          ]\n        ]],\n        'where' => $where,\n        'order' => [[\n          'field' => 'bbn_chats.last_message',\n          'dir' => 'DESC'\n        ]]\n        ]\n      );\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 583,
            "endLine": 624,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getChats",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "entrance",
                    "position": 0,
                    "type": "null|float",
                    "type_arr": [
                        "null",
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getChatByUsers": {
            "name": "getChatByUsers",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getChatByUsers(array $users): ?string\n  {\n    if ($this->check() && count($users)) {\n      $cfg     = [\n        'tables' => ['bbn_chats'],\n        'fields' => ['bbn_chats.id'],\n        'join' => [],\n        'where' => ['blocked' => 0]\n      ];\n      $users[] = $this->user->getId();\n      $users   = array_unique($users);\n      foreach ($users as $i => $u) {\n        $cfg['join'][]                         = [\n          'table' => 'bbn_chats_users',\n          'alias' => 'u'.($i + 1),\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats.id',\n              'exp' => 'u'.($i + 1).'.id_chat'\n            ]]\n          ]\n        ];\n        $cfg['where']['u'.($i + 1).'.id_user'] = $u;\n      }\n\n      $id_chat = false;\n      $ids     = $this->db->getColumnValues($cfg);\n      if (count($ids)) {\n        foreach ($ids as $id) {\n          if (count($this->getParticipants($id)) === count($users)) {\n            $id_chat = $id;\n            break;\n          }\n        }\n      }\n\n      if (!$id_chat) {\n        $id_chat = $this->create($users);\n      }\n\n      return $id_chat ?: null;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 627,
            "endLine": 671,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "getChatByUsers",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "users",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "hasOldMessages": {
            "name": "hasOldMessages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function hasOldMessages(string $id_chat, $moment): bool\n  {\n    if ($this->check()) {\n      $cdir = bbn\\Mvc::getUserDataPath($this->user->getId(), 'appui-chat').$id_chat.'\/';\n      if ($this->isParticipant($id_chat) && is_dir($cdir)) {\n        $dir   = $cdir . date('Y-m-d', $moment);\n        $files = \\bbn\\File\\Dir::getFiles($dir);\n        foreach ($files as $file){\n          $time = round((float)X::basename($file, '.msg'), 4);\n          if (X::compareFloats($time, $moment, '<') && ($st = file_get_contents($file))) {\n            return true;\n          }\n        }\n\n        $dirs = \\bbn\\File\\Dir::getDirs($cdir);\n        foreach ($dirs as $d){\n          if ((X::basename($d) < date('Y-m-d', $moment)) && !empty(\\bbn\\File\\Dir::getFiles($d))) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 674,
            "endLine": 698,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "hasOldMessages",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getPrevMessages": {
            "name": "getPrevMessages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getPrevMessages(string $id_chat, float $moment = null, int $num = 50, string $id_user = null): ?array\n  {\n    return $this->_get_messages($id_chat, $moment ?: X::microtime(), '<', $num, $id_user);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 701,
            "endLine": 704,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getPrevMessages",
            "returns": [
                null,
                "array"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "null|float",
                    "type_arr": [
                        "null",
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 2,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 50,
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 3,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getNextMessages": {
            "name": "getNextMessages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getNextMessages(string $id_chat, float $moment = null, int $num = 0, string $id_user = null)\n  {\n    return $this->_get_messages($id_chat, $moment ?: X::microtime(), '>', $num, $id_user);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 707,
            "endLine": 710,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "shortName": "getNextMessages",
            "returns": [],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "null|float",
                    "type_arr": [
                        "null",
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 2,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 3,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getFromtoMessages": {
            "name": "getFromtoMessages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getFromtoMessages(string $id_chat, float $from, float $to, int $num = 0)\n  {\n\n  }",
            "parent": false,
            "trait": false,
            "startLine": 713,
            "endLine": 716,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "shortName": "getFromtoMessages",
            "returns": [],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "from",
                    "position": 1,
                    "type": "float",
                    "type_arr": [
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "to",
                    "position": 2,
                    "type": "float",
                    "type_arr": [
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "block": {
            "name": "block",
            "summary": "Close a chat by setting blocked to 1.",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function block($id_chat): bool\n  {\n    if ($this->isAdmin($id_chat) && $this->db->update('bbn_chats', ['blocked' => 1], ['id' => $id_chat])) {\n      return $this->_set_state_hash($id_chat);\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 725,
            "endLine": 732,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "block",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Close a chat by setting blocked to 1.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$id_chat"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Close a chat by setting blocked to 1.\n   *\n   * @param $id_chat\n   * @return bool\n   *\/"
        },
        "leave": {
            "name": "leave",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function leave(string $id_chat, string $id_user = null): ?bool\n  {\n    if ($this->check()\n        && bbn\\Str::isUid($id_chat)\n        && $this->isParticipant($id_chat)\n        && $this->_add_bot_message($id_chat, $this->user->getName($id_user ?: $this->user->getId()) . ' ' . X::_('has left the chat'))\n        && $this->db->update(\n          'bbn_chats_users', ['active' => 0], [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user ?: $this->user->getId()\n          ]\n        )\n    ) {\n      $ok = true;\n      if (($parts = $this->getParticipants($id_chat))\n          && (count($parts) === 1)\n      ) {\n        $ok = (bool)$this->leave($id_chat, $parts[0]);\n      }\n\n      $this->_set_state_hash($id_chat);\n      return $ok;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 735,
            "endLine": 760,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "leave",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getLastActivity": {
            "name": "getLastActivity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getLastActivity(string $id_chat, string $id_user): float\n  {\n    if (bbn\\Str::isUid($id_chat)\n        && bbn\\Str::isUid($id_user)\n        && ($last = $this->db->selectOne(\n          'bbn_chats_users', 'last_activity', [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user\n          ]\n        ))\n    ) {\n      return round((float)$last, 4);\n    }\n\n    return round((float)0, 4);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 763,
            "endLine": 778,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "getLastActivity",
            "returns": [
                "float"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "setLastActivity": {
            "name": "setLastActivity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setLastActivity(string $id_chat, string $id_user): ?bool\n  {\n    if (bbn\\Str::isUid($id_chat)\n        && bbn\\Str::isUid($id_user)\n        && $this->isParticipant($id_chat, $id_user)\n        && $this->db->update(\n          'bbn_chats_users', ['last_activity' => X::microtime()], [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user\n          ]\n        )\n    ) {\n      return $this->_set_state_hash($id_chat);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 781,
            "endLine": 797,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "setLastActivity",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getMaxLastActivity": {
            "name": "getMaxLastActivity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMaxLastActivity(string $id_user = null)\n  {\n    if ($this->check()\n        && (bbn\\Str::isUid($id_user)\n        || \\is_null($id_user))\n    ) {\n      return $this->db->selectOne(\n        'bbn_chats_users', 'MAX(last_activity)', [\n        'id_user' => $id_user ?: $this->user->getId(),\n        'active' => 1\n        ]\n      );\n    }\n  }",
            "parent": false,
            "trait": false,
            "startLine": 800,
            "endLine": 813,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getMaxLastActivity",
            "returns": [],
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setLastNotification": {
            "name": "setLastNotification",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setLastNotification(string $id_chat, string $id_user, float $moment = null): bool\n  {\n    if (bbn\\Str::isUid($id_chat) && bbn\\Str::isUid($id_user)) {\n      if (\\is_null($moment)) {\n        $moment = bbn\\X::microtime();\n      }\n\n      return (bool)$this->db->update(\n        'bbn_chats_users', ['last_notification' => $moment], [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user\n        ]\n      );\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 816,
            "endLine": 832,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "shortName": "setLastNotification",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 2,
                    "type": "null|float",
                    "type_arr": [
                        "null",
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setOnline": {
            "name": "setOnline",
            "summary": "Sets the current user online",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setOnline(): bool\n  {\n    return $this->_set_user_status(true);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 839,
            "endLine": 842,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "setOnline",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Sets the current user online\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the current user online\n   * @return bool\n   *\/"
        },
        "setOffline": {
            "name": "setOffline",
            "summary": "Sets the current user offline",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setOffline(): bool\n  {\n    return $this->_set_user_status(false);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 849,
            "endLine": 852,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "setOffline",
            "returns": [
                "bool"
            ],
            "arguments": [],
            "doc": {
                "description": "Sets the current user offline\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the current user offline\n   * @return bool\n   *\/"
        },
        "getOnlineUsers": {
            "name": "getOnlineUsers",
            "summary": "Gets the list of online users",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getOnlineUsers(): array\n  {\n    if($this->check()) {\n      if ($ids = $this->users->onlineList()) {\n        $t = $this;\n        return array_values(\n          array_filter(\n            $ids, function ($id) use ($t) {\n              return $t->getUserStatus($id);\n            }\n          )\n        );\n      }\n    }\n\n    return [];\n  }",
            "parent": false,
            "trait": false,
            "startLine": 859,
            "endLine": 875,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getOnlineUsers",
            "returns": [
                "array"
            ],
            "arguments": [],
            "doc": {
                "description": "Gets the list of online users\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the list of online users\n   * @return array\n   *\/"
        },
        "getUserStatus": {
            "name": "getUserStatus",
            "summary": "Gets the status of the current|given user",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getUserStatus(string $id = null): bool\n  {\n    if (!$this->user) {\n      return false;\n    }\n\n    $ucfg = $this->user->getClassCfg();\n    $cfg  = json_decode($this->db->selectOne($ucfg['table'], $ucfg['arch']['users']['cfg'], [$ucfg['arch']['users']['id'] => $id ?: $this->user->getId()]), true);\n    return !isset($cfg['appui-chat']['online']) || !empty($cfg['appui-chat']['online']);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 883,
            "endLine": 892,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "shortName": "getUserStatus",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Gets the status of the current|given user\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "string",
                        "name": "$id"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Gets the status of the current|given user\n   * @param string $id\n   * @return bool\n   *\/"
        },
        "mute": {
            "name": "mute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function mute()\n  {\n\n  }",
            "parent": false,
            "trait": false,
            "startLine": 895,
            "endLine": 898,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "mute",
            "returns": [],
            "arguments": []
        },
        "unmute": {
            "name": "unmute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function unmute()\n  {\n\n  }",
            "parent": false,
            "trait": false,
            "startLine": 901,
            "endLine": 904,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "unmute",
            "returns": [],
            "arguments": []
        },
        "getMessages": {
            "name": "getMessages",
            "summary": "Deprecated??",
            "description": "Returns messages from the given chat sent after $last.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "Returns messages from the given chat sent after $last."
                }
            ],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getMessages($id_chat, $last = null, $day = null): array\n  {\n    $res = ['success' => false, 'last' => null, 'messages' => []];\n    if ($this->check()) {\n      $dir = bbn\\Mvc::getUserDataPath($this->user->getId(), 'appui-chat').$id_chat.'\/'.($day ?: date('Y-m-d'));\n      if ($this->isParticipant($id_chat) && is_dir($dir)) {\n        $res['success'] = true;\n        $files          = bbn\\File\\Dir::getFiles($dir);\n        foreach ($files as $file){\n          $time = (float)X::basename($file, '.msg');\n          if ((!$last || X::compareFloats($time, $last, '>')) && ($st = file_get_contents($file))) {\n            $res['messages'][] = json_decode(bbn\\Util\\Enc::decrypt($st), true);\n          }\n        }\n\n        if (isset($time)) {\n          $res['last'] = $time;\n        }\n      }\n    }\n\n    return $res;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 916,
            "endLine": 938,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "shortName": "getMessages",
            "returns": [
                "array"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "last",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "day",
                    "position": 2,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Deprecated??\nReturns messages from the given chat sent after $last.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$id_chat"
                    },
                    {
                        "tag": "param",
                        "type": "null",
                        "name": "$last"
                    },
                    {
                        "tag": "param",
                        "type": "null",
                        "name": "$day"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deprecated??\n   * Returns messages from the given chat sent after $last.\n   *\n   * @param $id_chat\n   * @param null    $last\n   * @param null    $day\n   * @return array\n   *\/"
        },
        "getOldMessages": {
            "name": "getOldMessages",
            "summary": "Deprecated??",
            "description": "Returns messages from the given chat for a specific day.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "Returns messages from the given chat for a specific day."
                }
            ],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getOldMessages($id_chat, $day)\n  {\n    return $this->getMessages($id_chat, null, $day);\n  }",
            "parent": false,
            "trait": false,
            "startLine": 949,
            "endLine": 952,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "getOldMessages",
            "returns": [],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "day",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "Deprecated??\nReturns messages from the given chat for a specific day.\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "$id_chat"
                    },
                    {
                        "tag": "param",
                        "type": "$day"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Deprecated??\n   * Returns messages from the given chat for a specific day.\n   *\n   * @param $id_chat\n   * @param $day\n   * @return array\n   *\/"
        },
        "getActiveChats": {
            "name": "getActiveChats",
            "summary": "Deprecated??",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getActiveChats()\n  {\n    if ($chats = $this->getChats()) {\n      $t =& $this;\n      $d = new \\DateTime();\n      $d->sub(new \\DateInterval('PT20M'));\n      if ($chats = array_filter(\n        $chats, function ($c) use ($d, $t) {\n          return ($m = $t->getMessages($c, $d->getTimestamp())) && !empty($m['messages']);\n        }\n      )\n      ) {\n        return array_map(\n          function ($c) use ($d, $t) {\n            return [\n              'id' => $c,\n              'messages' => ($m = $t->getMessages($c)) ? $m['messages'] : [],\n              'partecipants' => $t->getParticipants($c),\n              'has_old' => $t->hasOldMessages($c, $d->getTimestamp() - 1)\n            ];\n          }, $chats\n        );\n      }\n    }\n\n    return [];\n  }",
            "parent": false,
            "trait": false,
            "startLine": 958,
            "endLine": 984,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getActiveChats",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Deprecated??",
                "tags": []
            },
            "comments": "  \/**\n   * Deprecated??\n   *\/"
        },
        "_get_path": {
            "name": "_get_path",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _get_path(string $id_chat, string $id_user = null): ?string\n  {\n    if (bbn\\Str::isUid($id_chat)\n        && (bbn\\Str::isUid($id_user) || \\is_null($id_user))\n    ) {\n      return bbn\\Mvc::getUserDataPath($id_user ?: $this->user->getId(), 'appui-chat') . $id_chat . '\/';\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 987,
            "endLine": 996,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "_get_path",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "_scan_files": {
            "name": "_scan_files",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _scan_files(array $files, string $time, string $comparator, array &$res, int $num = 0)\n  {\n    foreach ($files as $file) {\n      if ($num && (count($res) >= $num)) {\n        break;\n      }\n\n      $ftime = round((float)X::basename($file, '.msg'), 4);\n      if (X::compareFloats($ftime, $time, $comparator)\n          && ($st = file_get_contents($file))\n      ) {\n        $res[] = json_decode(bbn\\Util\\Enc::decrypt($st), true);\n      }\n    }\n\n    return $res;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 999,
            "endLine": 1015,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 4,
            "shortName": "_scan_files",
            "returns": [],
            "arguments": [
                {
                    "name": "files",
                    "position": 0,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "time",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "comparator",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "res",
                    "position": 3,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": true,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 4,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "_get_messages": {
            "name": "_get_messages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _get_messages(string $id_chat, float $moment, string $comparator, int $num = 0, string $id_user = null)\n  {\n    if ($this->check() && bbn\\Str::isUid($id_chat)) {\n      $res    = [];\n      $dir    = $this->_get_path($id_chat, $id_user);\n      $moment = round($moment, 4);\n      if ($this->isParticipant($id_chat, $id_user) && is_dir($dir)) {\n        $files = bbn\\File\\Dir::getFiles($dir . date('Y-m-d', $moment));\n        $this->_scan_files($files ?: [], $moment, $comparator, $res, $num);\n        if (!$num || (count($res) < $num)) {\n          $dirs = array_reverse(bbn\\File\\Dir::getDirs($dir));\n          foreach ($dirs as $d){\n            if ($num && (count($res) >= $num)) {\n              break;\n            }\n\n            if (((($comparator === '<')\n                && (X::basename($d) < date('Y-m-d', $moment)))\n                || (($comparator === '>')\n                && (X::basename($d) > date('Y-m-d', $moment))))\n                && ($files = bbn\\File\\Dir::getFiles($d))\n            ) {\n              $this->_scan_files($files, $moment, $comparator, $res, $num);\n            }\n          }\n        }\n      }\n\n      X::sortBy($res, 'time');\n      $id_user  = bbn\\Str::isUid($id_user) ? $id_user : $this->user->getId();\n      $last_act = $this->getLastActivity($id_chat, $id_user);\n      return array_map(\n        function ($r) use ($last_act, $id_user) {\n          if (!empty($r['user']) && ($id_user !== $r['user'])) {\n            $r['unread'] = X::compareFloats($r['time'], $last_act, '>');\n          }\n\n          return $r;\n        }, $res\n      );\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1018,
            "endLine": 1061,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 3,
            "shortName": "_get_messages",
            "returns": [],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "float",
                    "type_arr": [
                        "float"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "comparator",
                    "position": 2,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 3,
                    "type": "int",
                    "type_arr": [
                        "int"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 4,
                    "type": "null|string",
                    "type_arr": [
                        "null",
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "_add_bot_message": {
            "name": "_add_bot_message",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _add_bot_message(string $id_chat, $message): ?bool\n  {\n    if ($this->check() && bbn\\Str::isUid($id_chat)) {\n      $users = $this->getParticipants($id_chat);\n      $added = 0;\n      foreach ($users as $user){\n        $mess = \\is_string($message) ? $message : (\\is_array($message) ? ($message[$user] ?? $message[0]) : false);\n        if ($mess) {\n          $time = X::microtime();\n          $st   = bbn\\Util\\Enc::crypt(\n            json_encode(\n              [\n              'time' => $time,\n              'message' => $mess\n              ]\n            )\n          );\n          $day  = date('Y-m-d', $time);\n          $dir  = $this->_get_path($id_chat, $user) . $day;\n          if (bbn\\File\\Dir::createPath($dir)) {\n            file_put_contents($dir.'\/'.$time.'.msg', $st);\n            $added += $this->db->update('bbn_chats', ['last_message' => $time], ['id' => $id_chat]);\n          }\n        }\n      }\n\n      return (bool)$added;\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1064,
            "endLine": 1094,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "shortName": "_add_bot_message",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "message",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_admin": {
            "name": "_set_admin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_admin(string $id_chat, string $id_user, bool $admin, array $bot): ?bool\n  {\n    if ($this->isParticipant($id_chat, $id_user)\n        && $this->db->update(\n          'bbn_chats_users', ['admin' => (int)$admin], [\n          'id_chat' => $id_chat,\n          'id_user' => $id_user\n          ]\n        )\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message($id_chat, $bot);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1097,
            "endLine": 1112,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 4,
            "shortName": "_set_admin",
            "returns": [
                null,
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "admin",
                    "position": 2,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "bot",
                    "position": 3,
                    "type": "array",
                    "type_arr": [
                        "array"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_get_state_hash": {
            "name": "_get_state_hash",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _get_state_hash(string $id_chat): ?string\n  {\n    if ($this->check() && bbn\\Str::isUid($id_chat)) {\n      return $this->db->selectOne('bbn_chats', 'state_hash', ['id' => $id_chat]);\n    }\n\n    return null;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1115,
            "endLine": 1122,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_get_state_hash",
            "returns": [
                null,
                "string"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_state_hash": {
            "name": "_set_state_hash",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_state_hash(string $id_chat): bool\n  {\n    if (bbn\\Str::isUid($id_chat)) {\n      $info = $this->info($id_chat);\n      $hash = \\md5(\n        \\json_encode(\n          [\n          'title' => $info['title'],\n          'blocked' => $info['blocked'],\n          'admins' => $this->getAdmins($id_chat),\n          'participants' => $this->getParticipants($id_chat, true, true)\n          ]\n        )\n      );\n      return (bool)$this->db->update('bbn_chats', ['state_hash' => $hash], ['id' => $id_chat]);\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1125,
            "endLine": 1143,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_state_hash",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_set_user_status": {
            "name": "_set_user_status",
            "summary": "Sets the status of the chat system of the current user",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Appui\\Chat",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Appui\/Chat.php",
            "static": false,
            "visibility": "private",
            "final": false,
            "code": "  private function _set_user_status(bool $is_online): bool\n  {\n    if ($this->check()) {\n      $ucfg = $this->user->getClassCfg();\n      $cfg  = $this->db->selectOne($ucfg['table'], $ucfg['arch']['users']['cfg'], [$ucfg['arch']['users']['id'] => $this->user->getId()]);\n      if (!empty($cfg) && ($c = json_decode($cfg, true))) {\n        if (!isset($c['appui-chat'])) {\n          $c['appui-chat'] = [];\n        }\n\n        $c['appui-chat']['online'] = $is_online;\n      }\n      else {\n        $c = [\n          'appui-chat' => [\n            'online' => $is_online\n          ]\n        ];\n      }\n\n      if (isset($c['appui-chat']['online'])) {\n        return (bool)$this->db->update($ucfg['table'], [$ucfg['arch']['users']['cfg'] => json_encode($c)], [$ucfg['arch']['users']['id'] => $this->user->getId()]);\n      }\n    }\n\n    return false;\n  }",
            "parent": false,
            "trait": false,
            "startLine": 1151,
            "endLine": 1177,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "_set_user_status",
            "returns": [
                "bool"
            ],
            "arguments": [
                {
                    "name": "is_online",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "online"
                }
            ],
            "doc": {
                "description": "Sets the status of the chat system of the current user\n",
                "params": [
                    {
                        "tag": "param",
                        "type": "bool",
                        "name": "$is",
                        "description": "online"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * Sets the status of the chat system of the current user\n   * @param bool $is_online\n   * @return bool\n   *\/"
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function test()\n  {\n    if ($this->error) {\n      return false;\n    }\n\n    return true;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 57,
                "endLine": 64,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "test",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "Checks whether the error property has been set (so an error happened).\n",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
            },
            "trait": false,
            "startLine": 57,
            "endLine": 64,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "test",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "Checks whether the error property has been set (so an error happened).\n",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * Checks whether the error property has been set (so an error happened).\n   * @return bool\n   *\/"
        },
        "setError": {
            "name": "setError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "protected",
            "final": false,
            "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
            "parent": {
                "name": "setError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "protected",
                "final": false,
                "code": "  protected function setError(string $err, $code = null)\n  {\n    $this->error    = $err;\n    $this->errorCode = $code;\n    $err = [\n      'time' => time(),\n      'msg' => $err\n    ];\n    if ($code) {\n      $err['code'] = $code;\n    }\n\n    $this->errors[] = $err;\n    return $this;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 81,
                "endLine": 95,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 1,
                "shortName": "setError",
                "returns": [],
                "arguments": [
                    {
                        "name": "err",
                        "position": 0,
                        "type": "string",
                        "type_arr": [
                            "string"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "code",
                        "position": 1,
                        "type": "",
                        "type_arr": [],
                        "variadic": false,
                        "reference": false,
                        "required": false,
                        "has_default": true,
                        "default": null,
                        "default_name": ""
                    }
                ]
            },
            "trait": false,
            "startLine": 81,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "shortName": "setError",
            "returns": [],
            "arguments": [
                {
                    "name": "err",
                    "position": 0,
                    "type": "string",
                    "type_arr": [
                        "string"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "",
                    "type_arr": [],
                    "variadic": false,
                    "reference": false,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getError": {
            "name": "getError",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getError()\n  {\n    return $this->error;\n  }",
            "parent": {
                "name": "getError",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getError()\n  {\n    return $this->error;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 98,
                "endLine": 101,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getError",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 98,
            "endLine": 101,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getError",
            "returns": [],
            "arguments": []
        },
        "getErrorCode": {
            "name": "getErrorCode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
            "parent": {
                "name": "getErrorCode",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrorCode()\n  {\n    return $this->errorCode;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 104,
                "endLine": 107,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrorCode",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 104,
            "endLine": 107,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrorCode",
            "returns": [],
            "arguments": []
        },
        "getErrors": {
            "name": "getErrors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
            "parent": {
                "name": "getErrors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function getErrors()\n  {\n    return $this->errors;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 110,
                "endLine": 113,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "getErrors",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 110,
            "endLine": 113,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "getErrors",
            "returns": [],
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function log()\n  {\n    if ($this->isDebug()) {\n        $ar = func_get_args();\n        $cn = Str::encodeFilename(str_replace('\\\\', '_', get_class($this)));\n      foreach ($ar as $a){\n            X::log($a, $cn);\n      }\n    }\n  }",
                "parent": false,
                "trait": false,
                "startLine": 116,
                "endLine": 125,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "log",
                "returns": [],
                "arguments": []
            },
            "trait": false,
            "startLine": 116,
            "endLine": 125,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "log",
            "returns": [],
            "arguments": []
        },
        "isDebug": {
            "name": "isDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
            "parent": {
                "name": "isDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function isDebug()\n  {\n    return $this->debug || constant(\"BBN_IS_DEV\");\n  }",
                "parent": false,
                "trait": false,
                "startLine": 131,
                "endLine": 134,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "shortName": "isDebug",
                "returns": [],
                "arguments": [],
                "doc": {
                    "description": "",
                    "params": [],
                    "return": ""
                },
                "comments": "  \/**\n   * @return boolean\n   *\/"
            },
            "trait": false,
            "startLine": 131,
            "endLine": 134,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "shortName": "isDebug",
            "returns": [],
            "arguments": [],
            "doc": {
                "description": "",
                "params": [],
                "return": ""
            },
            "comments": "  \/**\n   * @return boolean\n   *\/"
        },
        "setDebug": {
            "name": "setDebug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "class": "bbn\\Models\\Cls\\Basic",
            "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
            "parent": {
                "name": "setDebug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "class": "bbn\\Models\\Cls\\Basic",
                "filename": "\/home\/nabab\/web\/_COMPOSER\/dev\/vendor\/bbn\/bbn\/src\/bbn\/Models\/Cls\/Basic.php",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "  public function setDebug(bool $debug)\n  {\n    $this->debug = $debug;\n  }",
                "parent": false,
                "trait": false,
                "startLine": 141,
                "endLine": 144,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "shortName": "setDebug",
                "returns": [],
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "type_arr": [
                            "bool"
                        ],
                        "variadic": false,
                        "reference": false,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ],
                "doc": {
                    "description": "",
                    "params": [
                        {
                            "tag": "param",
                            "type": "boolean",
                            "name": "$debug"
                        }
                    ],
                    "return": ""
                },
                "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
            },
            "trait": false,
            "startLine": 141,
            "endLine": 144,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "shortName": "setDebug",
            "returns": [],
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "type_arr": [
                        "bool"
                    ],
                    "variadic": false,
                    "reference": false,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ],
            "doc": {
                "description": "",
                "params": [
                    {
                        "tag": "param",
                        "type": "boolean",
                        "name": "$debug"
                    }
                ],
                "return": ""
            },
            "comments": "  \/**\n   * @param boolean $debug\n   * @return self\n   *\/"
        }
    },
    "properties": {
        "user": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Chat"
            },
            "declaring_trait": "bbn\\Appui\\Chat",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "bbn\\User"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "users": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Appui\\Chat"
            },
            "declaring_trait": "bbn\\Appui\\Chat",
            "promoted": false,
            "visibility": "private",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "bbn\\User\\Users"
                    }
                ]
            },
            "parent": false,
            "value": null
        },
        "db": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Db"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Db",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "dbClass"
                    }
                ]
            },
            "parent": {
                "name": "db",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Db"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Db",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "dbClass"
                        }
                    ]
                },
                "parent": false,
                "value": null
            },
            "value": null
        },
        "errors": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "errors",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        },
        "error": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|string"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCode": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "false|int"
                    }
                ]
            },
            "parent": {
                "name": "errorCode",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|int"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "errorCodes": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": "",
            "parent": {
                "name": "errorCodes",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": "",
                "parent": false,
                "value": []
            },
            "value": []
        },
        "debug": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "boolean"
                    }
                ]
            },
            "parent": {
                "name": "debug",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "boolean"
                        }
                    ]
                },
                "parent": false,
                "value": false
            },
            "value": false
        },
        "log": {
            "trait": false,
            "static": false,
            "readonly": false,
            "type": "",
            "declaring": {
                "name": "bbn\\Models\\Cls\\Basic"
            },
            "declaring_trait": "bbn\\Models\\Cls\\Basic",
            "promoted": false,
            "visibility": "protected",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "array"
                    }
                ]
            },
            "parent": {
                "name": "log",
                "trait": false,
                "static": false,
                "readonly": false,
                "type": "",
                "declaring": {
                    "name": "bbn\\Models\\Cls\\Basic"
                },
                "declaring_trait": "bbn\\Models\\Cls\\Basic",
                "promoted": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "array"
                        }
                    ]
                },
                "parent": false,
                "value": []
            },
            "value": []
        }
    },
    "staticProperties": [],
    "constants": null,
    "uses": {
        "bbn": "bbn",
        "bbn\\X": "X"
    },
    "dummyComments": [
        "\/**\n * Created by PhpStorm.\n * User: BBN\n * Date: 11\/03\/2018\n * Time: 14:43\n *\/",
        "\/**\n * Class chat\n * @package bbn\\Appui\n *\/"
    ],
    "summary": "Class chat",
    "description": "",
    "description_parts": []
}